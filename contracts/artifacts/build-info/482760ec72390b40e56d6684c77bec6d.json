{
	"id": "482760ec72390b40e56d6684c77bec6d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FlightDelayInsurance.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../CustomTokens/contracts/utils/Counters.sol\";\nimport \"@goplugin/contracts/src/v0.8/PluginClient.sol\";\nimport \"./interface/IFlightStatus.sol\";\n\ncontract FlightDelayInsurance is PluginClient, IFlightStatus {\n    using Counters for Counters.Counter;\n    Counters.Counter private _flightIds;\n    Counters.Counter private _insuranceIds;\n\n    using Plugin for Plugin.Request;\n\n    uint256 private constant ORACLE_PAYMENT = 0.01 * 10**18;\n\n    // address\n    address public owner;\n    mapping(uint256 => mapping(address => FlightInsurance)) public insurances;\n    mapping(uint256 => mapping(address => FlightMaster)) public flights;\n    mapping(bytes32 => FlightInsurance) public claims;\n    mapping(uint256 => mapping(address => bytes32)) public claimRequest;\n\n    constructor(address _pli) {\n        setPluginToken(_pli);\n        owner = msg.sender;\n        _flightIds.increment();\n        _insuranceIds.increment();\n    }\n\n    modifier only_owner() {\n        require(owner == msg.sender);\n        _;\n    }\n\n    event FlightEvents(\n        uint256 flightId,\n        string eventType,\n        address flight,\n        address performedBy,\n        uint256 performedOn\n    );\n\n    event InsuranceEvents(\n        uint256 insuranceid,\n        string eventType,\n        address passenger,\n        address performedBy,\n        uint256 performedOn\n    );\n\n    //Initialize event requestCreated\n    event requestCreated(\n        address indexed requester,\n        bytes32 indexed jobId,\n        bytes32 indexed requestId\n    );\n\n    //Initialize event RequestPermissionFulfilled\n    event RequestPermissionFulfilled(\n        bytes32 indexed requestId,\n        uint256 indexed otp\n    );\n\n    // Register Flight\n    function registerFlights(\n        address _flightAddress,\n        bytes32 _carrierFlightNumber,\n        string memory _serviceProviderName\n    ) public returns (uint256) {\n        uint256 _flightId = _flightIds.current();\n        _flightIds.increment();\n\n        flights[_flightId][_flightAddress] = FlightMaster(\n            _flightId,\n            _carrierFlightNumber,\n            _serviceProviderName,\n            _flightAddress,\n            block.timestamp,\n            msg.sender\n        );\n        emit FlightEvents(\n            _flightId,\n            \"Flight Registered\",\n            msg.sender,\n            msg.sender,\n            block.timestamp\n        );\n\n        return _flightId;\n    }\n\n    // Book Flight Delay Insurance\n    function bookInsurance(\n        address _passengerAddress,\n        bytes32 _carrierFlightNumber,\n        uint256 _departureOn,\n        uint256 _arrivalOn,\n        uint256 _travelday\n    ) public returns (uint256) {\n        uint256 _insuranceId = _insuranceIds.current();\n        _insuranceIds.increment();\n\n        insurances[_insuranceId][_passengerAddress] = FlightInsurance(\n            _insuranceId,\n            _passengerAddress,\n            _carrierFlightNumber,\n            _departureOn,\n            _arrivalOn,\n            block.timestamp,\n            FlightStatus(1),\n            _travelday,\n            false\n        );\n\n        emit InsuranceEvents(\n            _insuranceId,\n            \"Insurance Booked\",\n            msg.sender,\n            msg.sender,\n            block.timestamp\n        );\n\n        return _insuranceId;\n    }\n\n    function submitMyClaim(\n        uint256 _insuranceid,\n        address _oracleAddress,\n        string memory _jobid\n    ) public {\n        FlightInsurance memory fin = insurances[_insuranceid][msg.sender];\n        require(\n            fin.passenger != address(0),\n            \"Policy Holder Address is invalid\"\n        );\n        require(fin.processed == false, \"Already claimed\");\n\n        Plugin.Request memory req = buildPluginRequest(\n            stringToBytes32(_jobid),\n            address(this),\n            this.fulfillClaimInquiry.selector\n        );\n        req.addUint(\"until\", fin.arrivalOn);\n        bytes32 reqId = sendPluginRequestTo(\n            _oracleAddress,\n            req,\n            ORACLE_PAYMENT\n        );\n        claims[reqId] = fin;\n        claimRequest[_insuranceid][msg.sender] = reqId;\n\n        // emit submitMyClaimLog(_policyHash);\n    }\n\n    function fulfillClaimInquiry(bytes32 _requestId, FlightStatus _flightStatus)\n        public\n        recordPluginFulfillment(_requestId)\n    {\n        FlightInsurance memory fin = claims[_requestId];\n        fin.processed = true;\n        fin.flightStatus = FlightStatus(_flightStatus);\n    }\n\n    //String to bytes to convert jobid to bytest32\n    function stringToBytes32(string memory source)\n        private\n        pure\n        returns (bytes32 result)\n    {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}\n"
			},
			"contracts/interface/IFlightStatus.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IFlightStatus {\n    enum FlightStatus {\n        DELAYED,\n        UPCOMING,\n        DEPARTURED,\n        TRANSIT,\n        CANCELLED,\n        ONTIME\n    }\n\n    struct FlightMaster {\n        uint256 flightId;\n        bytes32 carrierFlightNumber;\n        string serviceProviderName;\n        address serviceProvider; //Should be metadata hash about the patients\n        uint256 registeredOn;\n        address registeredBy;\n    }\n\n    struct FlightInsurance {\n        uint256 polictyid;\n        address passenger;\n        bytes32 carrierFlightNumber;\n        uint256 departureOn;\n        uint256 arrivalOn;\n        uint256 bookedOn;\n        FlightStatus flightStatus;\n        uint256 yearmonthdate;\n        bool processed;\n    }\n}\n"
			},
			"@goplugin/contracts/src/v0.8/PluginClient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Plugin.sol\";\nimport \"./interfaces/ENSInterface.sol\";\nimport \"./interfaces/PliTokenInterface.sol\";\nimport \"./interfaces/OperatorInterface.sol\";\nimport \"./interfaces/PointerInterface.sol\";\nimport { ENSResolver as ENSResolver_Plugin } from \"./vendor/ENSResolver.sol\";\n\n/**\n * @title The PluginClient contract\n * @notice Contract writers can inherit this contract in order to create requests for the\n * Plugin network\n */\ncontract PluginClient {\n  using Plugin for Plugin.Request;\n\n  uint256 constant internal PLI_DIVISIBILITY = 10**18;\n  uint256 constant private AMOUNT_OVERRIDE = 0;\n  address constant private SENDER_OVERRIDE = address(0);\n  uint256 constant private ORACLE_ARGS_VERSION = 1;\n  uint256 constant private OPERATOR_ARGS_VERSION = 2;\n  bytes32 constant private ENS_TOKEN_SUBNAME = keccak256(\"pli\");\n  bytes32 constant private ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n  address constant private PLI_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n  ENSInterface private ens;\n  bytes32 private ensNode;\n  PliTokenInterface private pli;\n  OperatorInterface private oracle;\n  uint256 private requestCount = 1;\n  mapping(bytes32 => address) private pendingRequests;\n\n  event PluginRequested(\n    bytes32 indexed id\n  );\n  event PluginFulfilled(\n    bytes32 indexed id\n  );\n  event PluginCancelled(\n    bytes32 indexed id\n  );\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param specId The Job Specification ID that the request will be created for\n   * @param callbackAddress The callback address that the response will be sent to\n   * @param callbackFunctionSignature The callback function signature to use for the callback address\n   * @return A Plugin Request struct in memory\n   */\n  function buildPluginRequest(\n    bytes32 specId,\n    address callbackAddress,\n    bytes4 callbackFunctionSignature\n  )\n    internal\n    pure\n    returns (\n      Plugin.Request memory\n    )\n  {\n    Plugin.Request memory req;\n    return req.initialize(specId, callbackAddress, callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the stored oracle address\n   * @dev Calls `pluginRequestTo` with the stored oracle address\n   * @param req The initialized Plugin Request\n   * @param payment The amount of PLI to send for the request\n   * @return requestId The request ID\n   */\n  function sendPluginRequest(\n    Plugin.Request memory req,\n    uint256 payment\n  )\n    internal\n    returns (\n      bytes32\n    )\n  {\n    return sendPluginRequestTo(address(oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the specified oracle address\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send PLI which creates a request on the target oracle contract.\n   * Emits PluginRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Plugin Request\n   * @param payment The amount of PLI to send for the request\n   * @return requestId The request ID\n   */\n  function sendPluginRequestTo(\n    address oracleAddress,\n    Plugin.Request memory req,\n    uint256 payment\n  )\n    internal\n    returns (\n      bytes32 requestId\n    )\n  {\n    return rawRequest(oracleAddress, req, payment, ORACLE_ARGS_VERSION, oracle.oracleRequest.selector);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the stored oracle address\n   * @dev This function supports multi-word response\n   * @dev Calls `requestOracleDataFrom` with the stored oracle address\n   * @param req The initialized Plugin Request\n   * @param payment The amount of PLI to send for the request\n   * @return requestId The request ID\n   */\n  function requestOracleData(\n    Plugin.Request memory req,\n    uint256 payment\n  )\n    internal\n    returns (\n      bytes32\n    )\n  {\n    return requestOracleDataFrom(address(oracle), req, payment);\n  }\n\n  /**\n   * @notice Creates a Plugin request to the specified oracle address\n   * @dev This function supports multi-word response\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send PLI which creates a request on the target oracle contract.\n   * Emits PluginRequested event.\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Plugin Request\n   * @param payment The amount of PLI to send for the request\n   * @return requestId The request ID\n   */\n  function requestOracleDataFrom(\n    address oracleAddress,\n    Plugin.Request memory req,\n    uint256 payment\n  )\n    internal\n    returns (\n      bytes32 requestId\n    )\n  {\n    return rawRequest(oracleAddress, req, payment, OPERATOR_ARGS_VERSION, oracle.requestOracleData.selector);\n  }\n\n  /**\n   * @notice Make a request to an oracle\n   * @param oracleAddress The address of the oracle for the request\n   * @param req The initialized Plugin Request\n   * @param payment The amount of PLI to send for the request\n   * @param argsVersion The version of data support (single word, multi word)\n   * @return requestId The request ID\n   */\n  function rawRequest(\n    address oracleAddress,\n    Plugin.Request memory req,\n    uint256 payment,\n    uint256 argsVersion,\n    bytes4 funcSelector\n  )\n    private\n    returns (\n      bytes32 requestId\n    )\n  {\n    requestId = keccak256(abi.encodePacked(this, requestCount));\n    req.nonce = requestCount;\n    pendingRequests[requestId] = oracleAddress;\n    emit PluginRequested(requestId);\n    bytes memory encodedData = abi.encodeWithSelector(\n      funcSelector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of PLI sent\n      req.id,\n      req.callbackAddress,\n      req.callbackFunctionId,\n      req.nonce,\n      argsVersion,\n      req.buf.buf);\n    require(pli.transferAndCall(oracleAddress, payment, encodedData), \"unable to transferAndCall to oracle\");\n    requestCount += 1;\n  }\n\n  /**\n   * @notice Allows a request to be cancelled if it has not been fulfilled\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n   * Deletes the request from the `pendingRequests` mapping.\n   * Emits PluginCancelled event.\n   * @param requestId The request ID\n   * @param payment The amount of PLI sent for the request\n   * @param callbackFunc The callback function specified for the request\n   * @param expiration The time of the expiration for the request\n   */\n  function cancelPluginRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunc,\n    uint256 expiration\n  )\n    internal\n  {\n    OperatorInterface requested = OperatorInterface(pendingRequests[requestId]);\n    delete pendingRequests[requestId];\n    emit PluginCancelled(requestId);\n    requested.cancelOracleRequest(requestId, payment, callbackFunc, expiration);\n  }\n\n  /**\n   * @notice Sets the stored oracle address\n   * @param oracleAddress The address of the oracle contract\n   */\n  function setPluginOracle(\n    address oracleAddress\n  )\n    internal\n  {\n    oracle = OperatorInterface(oracleAddress);\n  }\n\n  /**\n   * @notice Sets the PLI token address\n   * @param pliAddress The address of the PLI token contract\n   */\n  function setPluginToken(\n    address pliAddress\n  )\n    internal\n  {\n    pli = PliTokenInterface(pliAddress);\n  }\n\n  /**\n   * @notice Sets the Plugin token address for the public\n   * network as given by the Pointer contract\n   */\n  function setPublicPluginToken() \n    internal\n  {\n    setPluginToken(PointerInterface(PLI_TOKEN_POINTER).getAddress());\n  }\n\n  /**\n   * @notice Retrieves the stored address of the PLI token\n   * @return The address of the PLI token\n   */\n  function pluginTokenAddress()\n    internal\n    view\n    returns (\n      address\n    )\n  {\n    return address(pli);\n  }\n\n  /**\n   * @notice Retrieves the stored address of the oracle contract\n   * @return The address of the oracle contract\n   */\n  function pluginOracleAddress()\n    internal\n    view\n    returns (\n      address\n    )\n  {\n    return address(oracle);\n  }\n\n  /**\n   * @notice Allows for a request which was created on another contract to be fulfilled\n   * on this contract\n   * @param oracleAddress The address of the oracle contract that will fulfill the request\n   * @param requestId The request ID used for the response\n   */\n  function addPluginExternalRequest(\n    address oracleAddress,\n    bytes32 requestId\n  )\n    internal\n    notPendingRequest(requestId)\n  {\n    pendingRequests[requestId] = oracleAddress;\n  }\n\n  /**\n   * @notice Sets the stored oracle and PLI token contracts with the addresses resolved by ENS\n   * @dev Accounts for subnodes having different resolvers\n   * @param ensAddress The address of the ENS contract\n   * @param node The ENS node hash\n   */\n  function usePluginWithENS(\n    address ensAddress,\n    bytes32 node\n  )\n    internal\n  {\n    ens = ENSInterface(ensAddress);\n    ensNode = node;\n    bytes32 pliSubnode = keccak256(abi.encodePacked(ensNode, ENS_TOKEN_SUBNAME));\n    ENSResolver_Plugin resolver = ENSResolver_Plugin(ens.resolver(pliSubnode));\n    setPluginToken(resolver.addr(pliSubnode));\n    updatePluginOracleWithENS();\n  }\n\n  /**\n   * @notice Sets the stored oracle contract with the address resolved by ENS\n   * @dev This may be called on its own as long as `usePluginWithENS` has been called previously\n   */\n  function updatePluginOracleWithENS()\n    internal\n  {\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(ensNode, ENS_ORACLE_SUBNAME));\n    ENSResolver_Plugin resolver = ENSResolver_Plugin(ens.resolver(oracleSubnode));\n    setPluginOracle(resolver.addr(oracleSubnode));\n  }\n\n  /**\n   * @notice Ensures that the fulfillment is valid for this contract\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\n   * @param requestId The request ID for fulfillment\n   */\n  function validatePluginCallback(\n    bytes32 requestId\n  )\n    internal\n    recordPluginFulfillment(requestId)\n    // solhint-disable-next-line no-empty-blocks\n  {}\n\n  /**\n   * @dev Reverts if the sender is not the oracle of the request.\n   * Emits PluginFulfilled event.\n   * @param requestId The request ID for fulfillment\n   */\n  modifier recordPluginFulfillment(\n    bytes32 requestId\n  )\n  {\n    require(msg.sender == pendingRequests[requestId],\n            \"Source must be the oracle of the request\");\n    delete pendingRequests[requestId];\n    emit PluginFulfilled(requestId);\n    _;\n  }\n\n  /**\n   * @dev Reverts if the request is already pending\n   * @param requestId The request ID for fulfillment\n   */\n  modifier notPendingRequest(\n    bytes32 requestId\n  )\n  {\n    require(pendingRequests[requestId] == address(0), \"Request is already pending\");\n    _;\n  }\n}\n"
			},
			"CustomTokens/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract ENSResolver {\n  function addr(\n    bytes32 node\n  )\n    public\n    view\n    virtual\n    returns (\n      address\n    );\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface PointerInterface {\n  \n  function getAddress()\n    external\n    view\n    returns (\n      address\n    );\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./OracleInterface.sol\";\nimport \"./PluginRequestInterface.sol\";\n\ninterface OperatorInterface is OracleInterface, PluginRequestInterface {\n\n  function requestOracleData(\n    address sender,\n    uint256 payment,\n    bytes32 specId,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  )\n    external;\n\n  function fulfillOracleRequest2(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes calldata data\n  )\n    external\n    returns (\n      bool\n    );\n\n  function ownerTransferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  )\n    external\n    returns (\n      bool success\n    );\n\n  function distributeFunds(\n    address payable[] calldata receivers,\n    uint[] calldata amounts\n  )\n    external\n    payable;\n\n  function getAuthorizedSenders()\n    external\n    returns (\n      address[] memory\n    );\n\n  function setAuthorizedSenders(\n    address[] calldata senders\n  ) external;\n\n  function getForwarder()\n    external\n    returns (\n      address\n    );\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface PliTokenInterface {\n\n  function allowance(\n    address owner,\n    address spender\n  )\n    external\n    view\n    returns (\n      uint256 remaining\n    );\n\n  function approve(\n    address spender,\n    uint256 value\n  )\n    external\n    returns (\n      bool success\n    );\n\n  function balanceOf(\n    address owner\n  )\n    external\n    view\n    returns (\n      uint256 balance\n    );\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8 decimalPlaces\n    );\n\n  function decreaseApproval(\n    address spender,\n    uint256 addedValue\n  )\n    external\n    returns (\n      bool success\n    );\n\n  function increaseApproval(\n    address spender,\n    uint256 subtractedValue\n  ) external;\n\n  function name()\n    external\n    view\n    returns (\n      string memory tokenName\n    );\n\n  function symbol()\n    external\n    view\n    returns (\n      string memory tokenSymbol\n    );\n\n  function totalSupply()\n    external\n    view\n    returns (\n      uint256 totalTokensIssued\n    );\n\n  function transfer(\n    address to,\n    uint256 value\n  )\n    external\n    returns (\n      bool success\n    );\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  )\n    external\n    returns (\n      bool success\n    );\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  )\n    external\n    returns (\n      bool success\n    );\n\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ENSInterface {\n\n  // Logged when the owner of a node assigns a new owner to a subnode.\n  event NewOwner(\n    bytes32 indexed node,\n    bytes32 indexed label,\n    address owner\n  );\n\n  // Logged when the owner of a node transfers ownership to a new account.\n  event Transfer(\n    bytes32 indexed node,\n    address owner\n  );\n\n  // Logged when the resolver for a node changes.\n  event NewResolver(\n    bytes32 indexed node,\n    address resolver\n  );\n\n  // Logged when the TTL of a node changes\n  event NewTTL(\n    bytes32 indexed node,\n    uint64 ttl\n  );\n\n\n  function setSubnodeOwner(\n    bytes32 node,\n    bytes32 label,\n    address owner\n  ) external;\n\n  function setResolver(\n    bytes32 node,\n    address resolver\n  ) external;\n\n  function setOwner(\n    bytes32 node,\n    address owner\n  ) external;\n\n  function setTTL(\n    bytes32 node,\n    uint64 ttl\n  ) external;\n\n  function owner(\n    bytes32 node\n  )\n    external\n    view\n    returns (\n      address\n    );\n\n  function resolver(\n    bytes32 node\n  )\n    external\n    view\n    returns (\n      address\n    );\n\n  function ttl(\n    bytes32 node\n  )\n    external\n    view\n    returns (\n      uint64\n    );\n\n}\n"
			},
			"@goplugin/contracts/src/v0.8/Plugin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { CBORPlugin } from \"./vendor/CBORPlugin.sol\";\nimport { BufferPlugin } from \"./vendor/BufferPlugin.sol\";\n\n/**\n * @title Library for common Plugin functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Plugin {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBORPlugin for BufferPlugin.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    BufferPlugin.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Plugin request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param jobId The Job Specification ID\n   * @param callbackAddr The callback address\n   * @param callbackFunc The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 jobId,\n    address callbackAddr,\n    bytes4 callbackFunc\n  )\n    internal\n    pure\n    returns (\n      Plugin.Request memory\n    )\n  {\n    BufferPlugin.init(self.buf, defaultBufferSize);\n    self.id = jobId;\n    self.callbackAddress = callbackAddr;\n    self.callbackFunctionId = callbackFunc;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param data The CBOR data\n   */\n  function setBuffer(\n    Request memory self,\n    bytes memory data\n  )\n    internal\n    pure\n  {\n    BufferPlugin.init(self.buf, data.length);\n    BufferPlugin.append(self.buf, data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The string value to add\n   */\n  function add(\n    Request memory self,\n    string memory key,\n    string memory value\n  )\n    internal\n    pure\n  {\n    self.buf.encodeString(key);\n    self.buf.encodeString(value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The bytes value to add\n   */\n  function addBytes(\n    Request memory self,\n    string memory key,\n    bytes memory value\n  )\n    internal\n    pure\n  {\n    self.buf.encodeString(key);\n    self.buf.encodeBytes(value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The int256 value to add\n   */\n  function addInt(\n    Request memory self,\n    string memory key,\n    int256 value\n  )\n    internal\n    pure\n  {\n    self.buf.encodeString(key);\n    self.buf.encodeInt(value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param value The uint256 value to add\n   */\n  function addUint(\n    Request memory self,\n    string memory key,\n    uint256 value\n  )\n    internal\n    pure\n  {\n    self.buf.encodeString(key);\n    self.buf.encodeUInt(value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param key The name of the key\n   * @param values The array of string values to add\n   */\n  function addStringArray(\n    Request memory self,\n    string memory key,\n    string[] memory values\n  )\n    internal\n    pure\n  {\n    self.buf.encodeString(key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < values.length; i++) {\n      self.buf.encodeString(values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface PluginRequestInterface {\n  function oracleRequest(\n    address sender,\n    uint256 requestPrice,\n    bytes32 serviceAgreementID,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion,\n    bytes calldata data\n  ) external;\n\n  function cancelOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunctionId,\n    uint256 expiration\n  ) external;\n}\n"
			},
			"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface OracleInterface {\n  function fulfillOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 expiration,\n    bytes32 data\n  )\n    external\n    returns (\n      bool\n    );\n\n  function isAuthorizedSender(\n    address node\n  )\n    external\n    view\n    returns (\n      bool\n    );\n\n  function withdraw(\n    address recipient,\n    uint256 amount\n  ) external;\n\n  function withdrawable()\n    external\n    view\n    returns (\n      uint256\n    );\n}\n"
			},
			"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary BufferPlugin {\n  /**\n  * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n  *      a capacity. The capacity may be longer than the current value, in\n  *      which case it can be extended without the need to allocate more memory.\n  */\n  struct buffer {\n    bytes buf;\n    uint capacity;\n  }\n\n  /**\n  * @dev Initializes a buffer with an initial capacity.\n  * @param buf The buffer to initialize.\n  * @param capacity The number of bytes of space to allocate the buffer.\n  * @return The buffer, for chaining.\n  */\n  function init(\n    buffer memory buf,\n    uint capacity\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Initializes a new buffer from an existing bytes object.\n  *      Changes to the buffer may mutate the original value.\n  * @param b The bytes object to initialize the buffer with.\n  * @return A new buffer.\n  */\n  function fromBytes(\n    bytes memory b\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(\n    buffer memory buf,\n    uint capacity\n  )\n    private\n    pure\n  {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(\n    uint a,\n    uint b\n  )\n    private\n    pure\n    returns(\n      uint\n    )\n  {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n  * @dev Sets buffer length to 0.\n  * @param buf The buffer to truncate.\n  * @return The original buffer, for chaining..\n  */\n  function truncate(\n    buffer memory buf\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The start offset to write to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function write(\n    buffer memory buf,\n    uint off,\n    bytes memory data,\n    uint len\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint dest;\n    uint src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    unchecked {\n      uint mask = (256 ** (32 - len)) - 1;\n      assembly {\n        let srcpart := and(mload(src), not(mask))\n        let destpart := and(mload(dest), mask)\n        mstore(dest, or(destpart, srcpart))\n      }\n    }\n\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function append(\n    buffer memory buf,\n    bytes memory data,\n    uint len\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function append(\n    buffer memory buf,\n    bytes memory data\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n  * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write the byte at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeUint8(\n    buffer memory buf,\n    uint off,\n    uint8 data\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendUint8(\n    buffer memory buf,\n    uint8 data\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n  * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n  *      exceed the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (left-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function write(\n    buffer memory buf,\n    uint off,\n    bytes32 data,\n    uint len\n  )\n    private\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    unchecked {\n      uint mask = (256 ** len) - 1;\n      // Right-align data\n      data = data >> (8 * (32 - len));\n      assembly {\n        // Memory address of the buffer data\n        let bufptr := mload(buf)\n        // Address = buffer address + sizeof(buffer length) + off + len\n        let dest := add(add(bufptr, off), len)\n        mstore(dest, or(and(mload(dest), not(mask)), data))\n        // Update buffer length if we extended it\n        if gt(add(off, len), mload(bufptr)) {\n          mstore(bufptr, add(off, len))\n        }\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeBytes20(\n    buffer memory buf,\n    uint off,\n    bytes20 data\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chhaining.\n  */\n  function appendBytes20(\n    buffer memory buf,\n    bytes20 data\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendBytes32(\n    buffer memory buf,\n    bytes32 data\n  )\n    internal\n    pure\n    returns (\n      buffer memory\n    )\n  {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n  * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (right-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function writeInt(\n    buffer memory buf,\n    uint off,\n    uint data,\n    uint len\n  )\n    private\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = (256 ** len) - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n    * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n    * exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer.\n    */\n  function appendInt(\n    buffer memory buf,\n    uint data,\n    uint len\n  )\n    internal\n    pure\n    returns(\n      buffer memory\n    )\n  {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n"
			},
			"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.4.19;\n\nimport { BufferPlugin } from \"./BufferPlugin.sol\";\n\nlibrary CBORPlugin {\n  using BufferPlugin for BufferPlugin.buffer;\n\n  uint8 private constant MAJOR_TYPE_INT = 0;\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\n  uint8 private constant MAJOR_TYPE_STRING = 3;\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\n  uint8 private constant MAJOR_TYPE_MAP = 5;\n  uint8 private constant MAJOR_TYPE_TAG = 6;\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n  uint8 private constant TAG_TYPE_BIGNUM = 2;\n  uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n  function encodeType(\n    BufferPlugin.buffer memory buf,\n    uint8 major,\n    uint value\n  )\n    private\n    pure\n  {\n    if(value <= 23) {\n      buf.appendUint8(uint8((major << 5) | value));\n    } else if(value <= 0xFF) {\n      buf.appendUint8(uint8((major << 5) | 24));\n      buf.appendInt(value, 1);\n    } else if(value <= 0xFFFF) {\n      buf.appendUint8(uint8((major << 5) | 25));\n      buf.appendInt(value, 2);\n    } else if(value <= 0xFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 26));\n      buf.appendInt(value, 4);\n    } else if(value <= 0xFFFFFFFFFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 27));\n      buf.appendInt(value, 8);\n    }\n  }\n\n  function encodeIndefiniteLengthType(\n    BufferPlugin.buffer memory buf,\n    uint8 major\n  )\n    private\n    pure\n  {\n    buf.appendUint8(uint8((major << 5) | 31));\n  }\n\n  function encodeUInt(\n    BufferPlugin.buffer memory buf,\n    uint value\n  )\n    internal\n    pure\n  {\n    encodeType(buf, MAJOR_TYPE_INT, value);\n  }\n\n  function encodeInt(\n    BufferPlugin.buffer memory buf,\n    int value\n  )\n    internal\n    pure\n  {\n    if(value < -0x10000000000000000) {\n      encodeSignedBigNum(buf, value);\n    } else if(value > 0xFFFFFFFFFFFFFFFF) {\n      encodeBigNum(buf, value);\n    } else if(value >= 0) {\n      encodeType(buf, MAJOR_TYPE_INT, uint(value));\n    } else {\n      encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value));\n    }\n  }\n\n  function encodeBytes(\n    BufferPlugin.buffer memory buf,\n    bytes memory value\n  )\n    internal\n    pure\n  {\n    encodeType(buf, MAJOR_TYPE_BYTES, value.length);\n    buf.append(value);\n  }\n\n  function encodeBigNum(\n    BufferPlugin.buffer memory buf,\n    int value\n  )\n    internal\n    pure\n  {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n    encodeBytes(buf, abi.encode(uint(value)));\n  }\n\n  function encodeSignedBigNum(\n    BufferPlugin.buffer memory buf,\n    int input\n  )\n    internal\n    pure\n  {\n    buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM));\n    encodeBytes(buf, abi.encode(uint(-1 - input)));\n  }\n\n  function encodeString(\n    BufferPlugin.buffer memory buf,\n    string memory value\n  )\n    internal\n    pure\n  {\n    encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length);\n    buf.append(bytes(value));\n  }\n\n  function startArray(\n    BufferPlugin.buffer memory buf\n  )\n    internal\n    pure\n  {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n  }\n\n  function startMap(\n    BufferPlugin.buffer memory buf\n  )\n    internal\n    pure\n  {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n  }\n\n  function endSequence(\n    BufferPlugin.buffer memory buf\n  )\n    internal\n    pure\n  {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@goplugin/contracts/src/v0.8/Plugin.sol": {
				"Plugin": {
					"abi": [],
					"devdoc": {
						"details": "Uses imported CBOR library for encoding to buffer",
						"kind": "dev",
						"methods": {},
						"title": "Library for common Plugin functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":282:3847  library Plugin {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":282:3847  library Plugin {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aa16918deaac626932298930601ac6b62a39d5d29fe44efb62093c2335aab9d464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa16918deaac626932298930601ac6b62a39d5d29fe44efb62093c2335aab9d464736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA AND SWAP2 DUP14 0xEA 0xAC PUSH3 0x693229 DUP10 ADDRESS PUSH1 0x1A 0xC6 0xB6 0x2A CODECOPY 0xD5 0xD2 SWAP16 0xE4 0x4E 0xFB PUSH3 0x93C23 CALLDATALOAD 0xAA 0xB9 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "282:3565:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;282:3565:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa16918deaac626932298930601ac6b62a39d5d29fe44efb62093c2335aab9d464736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA AND SWAP2 DUP14 0xEA 0xAC PUSH3 0x693229 DUP10 ADDRESS PUSH1 0x1A 0xC6 0xB6 0x2A CODECOPY 0xD5 0xD2 SWAP16 0xE4 0x4E 0xFB PUSH3 0x93C23 CALLDATALOAD 0xAA 0xB9 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "282:3565:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(struct Plugin.Request memory,string memory,string memory)": "infinite",
								"addBytes(struct Plugin.Request memory,string memory,bytes memory)": "infinite",
								"addInt(struct Plugin.Request memory,string memory,int256)": "infinite",
								"addStringArray(struct Plugin.Request memory,string memory,string memory[] memory)": "infinite",
								"addUint(struct Plugin.Request memory,string memory,uint256)": "infinite",
								"initialize(struct Plugin.Request memory,bytes32,address,bytes4)": "infinite",
								"setBuffer(struct Plugin.Request memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 282,
									"end": 3847,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa16918deaac626932298930601ac6b62a39d5d29fe44efb62093c2335aab9d464736f6c63430008040033",
									".code": [
										{
											"begin": 282,
											"end": 3847,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 3847,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Uses imported CBOR library for encoding to buffer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for common Plugin functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/Plugin.sol\":\"Plugin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/Plugin.sol\":{\"keccak256\":\"0x3d4f45b99494d19284524a09102e09a1a3fc74d9b0fa27d2861f0957d79e30e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76e85c584eb74eb8669fb3773da1c938c584ecec9a6ac29e856c6b2138337978\",\"dweb:/ipfs/Qmeag6GbPJApYgKmzRokqHyJez7Eaz5AZMhytDjkiDo9Ln\"]},\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":{\"keccak256\":\"0x16cb401b48de656645a2a98614d0a9ca1e2bd3fc57e79b964f8c15c06b2d086b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f6b3a0e1e427421b90f88d825737bc5feab5724ff0d1ff6f28e275255c0b2d7\",\"dweb:/ipfs/QmViHBvvXStg3qdsVqSAPNKAUgWxBLhuT5EtoDnc2WX5c1\"]},\"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":{\"keccak256\":\"0xb64a0acf3a0be6f51bc0f8a84c532832ddef56402e926fbf371cd91589eaecf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6959894153d714583ca2212d25afd5a1ca5b348aa07cadf91e88b7de322668\",\"dweb:/ipfs/QmUb4R5nT2wnvYNWaph9mP4PGM1uYD8YoW1dwYNck5aZSh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/PluginClient.sol": {
				"PluginClient": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginRequested",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The PluginClient contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":485:10874  contract PluginClient {... */\n  mstore(0x40, 0x80)\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1194:1195  1 */\n  0x01\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1163:1195  uint256 private requestCount = 1 */\n  0x04\n  sstore\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":485:10874  contract PluginClient {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":485:10874  contract PluginClient {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c6c5ce196c437808111f817b7b7e00993eb518c1875629819ef4cda8c0c2233f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600455348015601457600080fd5b50603f8060226000396000f3fe6080604052600080fdfea2646970667358221220c6c5ce196c437808111f817b7b7e00993eb518c1875629819ef4cda8c0c2233f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x22 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC5 0xCE NOT PUSH13 0x437808111F817B7B7E00993EB5 XOR 0xC1 DUP8 JUMP 0x29 DUP2 SWAP15 DELEGATECALL 0xCD 0xA8 0xC0 0xC2 0x23 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "485:10389:1:-:0;;;1194:1;1163:32;;485:10389;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c6c5ce196c437808111f817b7b7e00993eb518c1875629819ef4cda8c0c2233f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC5 0xCE NOT PUSH13 0x437808111F817B7B7E00993EB5 XOR 0xC1 DUP8 JUMP 0x29 DUP2 SWAP15 DELEGATECALL 0xCD 0xA8 0xC0 0xC2 0x23 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "485:10389:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "20072",
								"totalCost": "32672"
							},
							"internal": {
								"addPluginExternalRequest(address,bytes32)": "infinite",
								"buildPluginRequest(bytes32,address,bytes4)": "infinite",
								"cancelPluginRequest(bytes32,uint256,bytes4,uint256)": "infinite",
								"pluginOracleAddress()": "infinite",
								"pluginTokenAddress()": "infinite",
								"rawRequest(address,struct Plugin.Request memory,uint256,uint256,bytes4)": "infinite",
								"requestOracleData(struct Plugin.Request memory,uint256)": "infinite",
								"requestOracleDataFrom(address,struct Plugin.Request memory,uint256)": "infinite",
								"sendPluginRequest(struct Plugin.Request memory,uint256)": "infinite",
								"sendPluginRequestTo(address,struct Plugin.Request memory,uint256)": "infinite",
								"setPluginOracle(address)": "infinite",
								"setPluginToken(address)": "infinite",
								"setPublicPluginToken()": "infinite",
								"updatePluginOracleWithENS()": "infinite",
								"usePluginWithENS(address,bytes32)": "infinite",
								"validatePluginCallback(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1195,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 10874,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6c5ce196c437808111f817b7b7e00993eb518c1875629819ef4cda8c0c2233f64736f6c63430008040033",
									".code": [
										{
											"begin": 485,
											"end": 10874,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 485,
											"end": 10874,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 10874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 10874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 10874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 10874,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginRequested\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The PluginClient contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract writers can inherit this contract in order to create requests for the Plugin network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/PluginClient.sol\":\"PluginClient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/Plugin.sol\":{\"keccak256\":\"0x3d4f45b99494d19284524a09102e09a1a3fc74d9b0fa27d2861f0957d79e30e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76e85c584eb74eb8669fb3773da1c938c584ecec9a6ac29e856c6b2138337978\",\"dweb:/ipfs/Qmeag6GbPJApYgKmzRokqHyJez7Eaz5AZMhytDjkiDo9Ln\"]},\"@goplugin/contracts/src/v0.8/PluginClient.sol\":{\"keccak256\":\"0x54572ca17cd364505bf62036e4022c4f5a0f224869459ca0e2e85f94d734e53b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f46d5ac8893c45d9a501002a61bffa773521cf8d50ff21cc5557e9b02e25ce3\",\"dweb:/ipfs/QmSj2XAvNFS927Ustu4ZA9xec5YNxebjaK9gqYjAad3fQW\"]},\"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xd8545d2e73f7aa517543d97e1763d95c11ddd52a5050cf1933047c9f22f10b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de663408f7c1937e46aef8d86e180a2528f31cdcbc43e1682297c20be03af461\",\"dweb:/ipfs/QmVpFw2fJkaegf6hGRYtjx932KJCs6bAuKvCRoXrhV7GMF\"]},\"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0xcb216db11216856f68499495aea5c5e3d3c6998e68ed34eb65576dd7517e8eae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb66491241d9abbc2074a5bbb86518a64b360b848a632c9d8bb9fe6cfe3b75c\",\"dweb:/ipfs/QmPWxkMewrA49GcJ5cifAhb95XsNWjRNa9i2jrBM5nvgVX\"]},\"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x55fb2c156150379d285ab89081ff5add6f37343d7992bd2ec1485a2652af94d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1fc4c0fb89f7de9ec68fdc582950c63d581f3822ef71d9a8fd240a73b37778\",\"dweb:/ipfs/QmdvboNgXzaQXMaceVQPGwpZHMC5fe9LU9GkippzA8quPJ\"]},\"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol\":{\"keccak256\":\"0x82c31fff77f022d56bde5ae1b251380644c3496221421245300824b25bc11f6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ca1f74f75b6986778c3a7c499ba9d430d267cb797b12b93d47a4b4a5f583799\",\"dweb:/ipfs/QmU9hUjmtAJaJTz1fekwAYVWwWmYufRYXzEW9M5hgE49dR\"]},\"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x30e0b2e375a8e3ae9f4f1ca448a30a5670d78685276302aa902b4331947a46d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4a540852961f706b270135c7bf16a2269deab62d4288d9bc762a4fbcf179cc\",\"dweb:/ipfs/QmQfDAbiU1WNCHxpJdrm89fFnA7RwCMJw81Pq4gU5qQjrx\"]},\"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0xc3d897e7c93b02e53f21b40accd4a0bd5c38f9780a4f74a7109b70fbfde03b40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11166ec1ac48aaf14f5a7053283371341e0418eaced385b7ed7c9140d9f1f1df\",\"dweb:/ipfs/QmV4bkHEEpeqC6pr3nmmQQURkVKMroucA31YoGcysnByt7\"]},\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":{\"keccak256\":\"0x16cb401b48de656645a2a98614d0a9ca1e2bd3fc57e79b964f8c15c06b2d086b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f6b3a0e1e427421b90f88d825737bc5feab5724ff0d1ff6f28e275255c0b2d7\",\"dweb:/ipfs/QmViHBvvXStg3qdsVqSAPNKAUgWxBLhuT5EtoDnc2WX5c1\"]},\"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":{\"keccak256\":\"0xb64a0acf3a0be6f51bc0f8a84c532832ddef56402e926fbf371cd91589eaecf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6959894153d714583ca2212d25afd5a1ca5b348aa07cadf91e88b7de322668\",\"dweb:/ipfs/QmUb4R5nT2wnvYNWaph9mP4PGM1uYD8YoW1dwYNck5aZSh\"]},\"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0xeed48a6a522c400f024f8725ad931833205cb63cc87285b46c5c0e88ca090352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4065aed34d3fae897ac7eb7c5e3af1ba9f458fc31c9f165acae8fa448125ec5\",\"dweb:/ipfs/Qmejzy7Kdw4mHiv5QqyvA8nUU5SeqH6n6dQoe1VEWZUnsi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 318,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "ens",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ENSInterface)879"
							},
							{
								"astId": 320,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "ensNode",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							},
							{
								"astId": 323,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "pli",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PliTokenInterface)1095"
							},
							{
								"astId": 326,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "oracle",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(OperatorInterface)961"
							},
							{
								"astId": 329,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "requestCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "@goplugin/contracts/src/v0.8/PluginClient.sol:PluginClient",
								"label": "pendingRequests",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ENSInterface)879": {
								"encoding": "inplace",
								"label": "contract ENSInterface",
								"numberOfBytes": "20"
							},
							"t_contract(OperatorInterface)961": {
								"encoding": "inplace",
								"label": "contract OperatorInterface",
								"numberOfBytes": "20"
							},
							"t_contract(PliTokenInterface)1095": {
								"encoding": "inplace",
								"label": "contract PliTokenInterface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract writers can inherit this contract in order to create requests for the Plugin network",
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol": {
				"ENSInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "NewResolver",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "NewTTL",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "setResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "setSubnodeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "ttl",
									"type": "uint64"
								}
							],
							"name": "setTTL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "ttl",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner(bytes32)": "02571be3",
							"resolver(bytes32)": "0178b8bf",
							"setOwner(bytes32,address)": "5b0fc9c3",
							"setResolver(bytes32,address)": "1896f70a",
							"setSubnodeOwner(bytes32,bytes32,address)": "06ab5923",
							"setTTL(bytes32,uint64)": "14ab9038",
							"ttl(bytes32)": "16a25cbd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"NewTTL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"setTTL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"ttl\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol\":\"ENSInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xd8545d2e73f7aa517543d97e1763d95c11ddd52a5050cf1933047c9f22f10b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de663408f7c1937e46aef8d86e180a2528f31cdcbc43e1682297c20be03af461\",\"dweb:/ipfs/QmVpFw2fJkaegf6hGRYtjx932KJCs6bAuKvCRoXrhV7GMF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
				"OperatorInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"name": "cancelOracleRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "distributeFunds",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "fulfillOracleRequest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "fulfillOracleRequest2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAuthorizedSenders",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "node",
									"type": "address"
								}
							],
							"name": "isAuthorizedSender",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestPrice",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "serviceAgreementID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataVersion",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "oracleRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ownerTransferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "specId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataVersion",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "requestOracleData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "senders",
									"type": "address[]"
								}
							],
							"name": "setAuthorizedSenders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": "6ee4d553",
							"distributeFunds(address[],uint256[])": "6bd59ec0",
							"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)": "4ab0d190",
							"fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)": "6ae0bc76",
							"getAuthorizedSenders()": "2408afaa",
							"getForwarder()": "a0042526",
							"isAuthorizedSender(address)": "fa00763a",
							"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": "40429946",
							"ownerTransferAndCall(address,uint256,bytes)": "902fc370",
							"requestOracleData(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": "6de879d6",
							"setAuthorizedSenders(address[])": "ee56997b",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawable()": "50188301"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"fulfillOracleRequest2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ownerTransferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"specId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"requestOracleData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"setAuthorizedSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol\":\"OperatorInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0xcb216db11216856f68499495aea5c5e3d3c6998e68ed34eb65576dd7517e8eae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb66491241d9abbc2074a5bbb86518a64b360b848a632c9d8bb9fe6cfe3b75c\",\"dweb:/ipfs/QmPWxkMewrA49GcJ5cifAhb95XsNWjRNa9i2jrBM5nvgVX\"]},\"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x55fb2c156150379d285ab89081ff5add6f37343d7992bd2ec1485a2652af94d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1fc4c0fb89f7de9ec68fdc582950c63d581f3822ef71d9a8fd240a73b37778\",\"dweb:/ipfs/QmdvboNgXzaQXMaceVQPGwpZHMC5fe9LU9GkippzA8quPJ\"]},\"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x30e0b2e375a8e3ae9f4f1ca448a30a5670d78685276302aa902b4331947a46d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4a540852961f706b270135c7bf16a2269deab62d4288d9bc762a4fbcf179cc\",\"dweb:/ipfs/QmQfDAbiU1WNCHxpJdrm89fFnA7RwCMJw81Pq4gU5qQjrx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol": {
				"OracleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "fulfillOracleRequest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "node",
									"type": "address"
								}
							],
							"name": "isAuthorizedSender",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)": "4ab0d190",
							"isAuthorizedSender(address)": "fa00763a",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawable()": "50188301"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"fulfillOracleRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"isAuthorizedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol\":\"OracleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x55fb2c156150379d285ab89081ff5add6f37343d7992bd2ec1485a2652af94d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1fc4c0fb89f7de9ec68fdc582950c63d581f3822ef71d9a8fd240a73b37778\",\"dweb:/ipfs/QmdvboNgXzaQXMaceVQPGwpZHMC5fe9LU9GkippzA8quPJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol": {
				"PliTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol\":\"PliTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol\":{\"keccak256\":\"0x82c31fff77f022d56bde5ae1b251380644c3496221421245300824b25bc11f6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ca1f74f75b6986778c3a7c499ba9d430d267cb797b12b93d47a4b4a5f583799\",\"dweb:/ipfs/QmU9hUjmtAJaJTz1fekwAYVWwWmYufRYXzEW9M5hgE49dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol": {
				"PluginRequestInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"name": "cancelOracleRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestPrice",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "serviceAgreementID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callbackAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "callbackFunctionId",
									"type": "bytes4"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dataVersion",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "oracleRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": "6ee4d553",
							"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": "40429946"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"serviceAgreementID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol\":\"PluginRequestInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x30e0b2e375a8e3ae9f4f1ca448a30a5670d78685276302aa902b4331947a46d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4a540852961f706b270135c7bf16a2269deab62d4288d9bc762a4fbcf179cc\",\"dweb:/ipfs/QmQfDAbiU1WNCHxpJdrm89fFnA7RwCMJw81Pq4gU5qQjrx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol": {
				"PointerInterface": {
					"abi": [
						{
							"inputs": [],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress()": "38cc4831"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol\":\"PointerInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0xc3d897e7c93b02e53f21b40accd4a0bd5c38f9780a4f74a7109b70fbfde03b40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11166ec1ac48aaf14f5a7053283371341e0418eaced385b7ed7c9140d9f1f1df\",\"dweb:/ipfs/QmV4bkHEEpeqC6pr3nmmQQURkVKMroucA31YoGcysnByt7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol": {
				"BufferPlugin": {
					"abi": [],
					"devdoc": {
						"details": "A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":434:10410  library BufferPlugin {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":434:10410  library BufferPlugin {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006c965747bf2d858423b34a7f9fb70652840b42d6b4e746c64cc4556ba7a9e7164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006c965747bf2d858423b34a7f9fb70652840b42d6b4e746c64cc4556ba7a9e7164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC9 PUSH6 0x747BF2D85842 EXTCODESIZE CALLVALUE 0xA7 0xF9 0xFB PUSH17 0x652840B42D6B4E746C64CC4556BA7A9E71 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "434:9976:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;434:9976:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006c965747bf2d858423b34a7f9fb70652840b42d6b4e746c64cc4556ba7a9e7164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC9 PUSH6 0x747BF2D85842 EXTCODESIZE CALLVALUE 0xA7 0xF9 0xFB PUSH17 0x652840B42D6B4E746C64CC4556BA7A9E71 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "434:9976:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"append(struct BufferPlugin.buffer memory,bytes memory)": "infinite",
								"append(struct BufferPlugin.buffer memory,bytes memory,uint256)": "infinite",
								"appendBytes20(struct BufferPlugin.buffer memory,bytes20)": "infinite",
								"appendBytes32(struct BufferPlugin.buffer memory,bytes32)": "infinite",
								"appendInt(struct BufferPlugin.buffer memory,uint256,uint256)": "infinite",
								"appendUint8(struct BufferPlugin.buffer memory,uint8)": "infinite",
								"fromBytes(bytes memory)": "infinite",
								"init(struct BufferPlugin.buffer memory,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"resize(struct BufferPlugin.buffer memory,uint256)": "infinite",
								"truncate(struct BufferPlugin.buffer memory)": "infinite",
								"write(struct BufferPlugin.buffer memory,uint256,bytes memory,uint256)": "infinite",
								"write(struct BufferPlugin.buffer memory,uint256,bytes32,uint256)": "infinite",
								"writeBytes20(struct BufferPlugin.buffer memory,uint256,bytes20)": "infinite",
								"writeInt(struct BufferPlugin.buffer memory,uint256,uint256,uint256)": "infinite",
								"writeUint8(struct BufferPlugin.buffer memory,uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 434,
									"end": 10410,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006c965747bf2d858423b34a7f9fb70652840b42d6b4e746c64cc4556ba7a9e7164736f6c63430008040033",
									".code": [
										{
											"begin": 434,
											"end": 10410,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 434,
											"end": 10410,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":\"BufferPlugin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":{\"keccak256\":\"0x16cb401b48de656645a2a98614d0a9ca1e2bd3fc57e79b964f8c15c06b2d086b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f6b3a0e1e427421b90f88d825737bc5feab5724ff0d1ff6f28e275255c0b2d7\",\"dweb:/ipfs/QmViHBvvXStg3qdsVqSAPNKAUgWxBLhuT5EtoDnc2WX5c1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol": {
				"CBORPlugin": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":112:3414  library CBORPlugin {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":112:3414  library CBORPlugin {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220705e40bdc7e3119c08d07ecc28585e9d790ac044529b6b4e91ab56608e99018664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220705e40bdc7e3119c08d07ecc28585e9d790ac044529b6b4e91ab56608e99018664736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5E40BDC7E3119C08D07ECC28585E9D790A 0xC0 DIFFICULTY MSTORE SWAP12 PUSH12 0x4E91AB56608E99018664736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "112:3302:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;112:3302:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220705e40bdc7e3119c08d07ecc28585e9d790ac044529b6b4e91ab56608e99018664736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5E40BDC7E3119C08D07ECC28585E9D790A 0xC0 DIFFICULTY MSTORE SWAP12 PUSH12 0x4E91AB56608E99018664736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "112:3302:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"encodeBigNum(struct BufferPlugin.buffer memory,int256)": "infinite",
								"encodeBytes(struct BufferPlugin.buffer memory,bytes memory)": "infinite",
								"encodeIndefiniteLengthType(struct BufferPlugin.buffer memory,uint8)": "infinite",
								"encodeInt(struct BufferPlugin.buffer memory,int256)": "infinite",
								"encodeSignedBigNum(struct BufferPlugin.buffer memory,int256)": "infinite",
								"encodeString(struct BufferPlugin.buffer memory,string memory)": "infinite",
								"encodeType(struct BufferPlugin.buffer memory,uint8,uint256)": "infinite",
								"encodeUInt(struct BufferPlugin.buffer memory,uint256)": "infinite",
								"endSequence(struct BufferPlugin.buffer memory)": "infinite",
								"startArray(struct BufferPlugin.buffer memory)": "infinite",
								"startMap(struct BufferPlugin.buffer memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 112,
									"end": 3414,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220705e40bdc7e3119c08d07ecc28585e9d790ac044529b6b4e91ab56608e99018664736f6c63430008040033",
									".code": [
										{
											"begin": 112,
											"end": 3414,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 112,
											"end": 3414,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":\"CBORPlugin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":{\"keccak256\":\"0x16cb401b48de656645a2a98614d0a9ca1e2bd3fc57e79b964f8c15c06b2d086b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f6b3a0e1e427421b90f88d825737bc5feab5724ff0d1ff6f28e275255c0b2d7\",\"dweb:/ipfs/QmViHBvvXStg3qdsVqSAPNKAUgWxBLhuT5EtoDnc2WX5c1\"]},\"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":{\"keccak256\":\"0xb64a0acf3a0be6f51bc0f8a84c532832ddef56402e926fbf371cd91589eaecf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6959894153d714583ca2212d25afd5a1ca5b348aa07cadf91e88b7de322668\",\"dweb:/ipfs/QmUb4R5nT2wnvYNWaph9mP4PGM1uYD8YoW1dwYNck5aZSh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol": {
				"ENSResolver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "addr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addr(bytes32)": "3b3b57de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol\":\"ENSResolver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0xeed48a6a522c400f024f8725ad931833205cb63cc87285b46c5c0e88ca090352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4065aed34d3fae897ac7eb7c5e3af1ba9f458fc31c9f165acae8fa448125ec5\",\"dweb:/ipfs/Qmejzy7Kdw4mHiv5QqyvA8nUU5SeqH6n6dQoe1VEWZUnsi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CustomTokens/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CustomTokens/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CustomTokens/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbd587087b358d3515b90e17bd1503ef990ffbdb7d8458186720de64a2f07c8564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd587087b358d3515b90e17bd1503ef990ffbdb7d8458186720de64a2f07c8564736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD5 DUP8 ADDMOD PUSH28 0x358D3515B90E17BD1503EF990FFBDB7D8458186720DE64A2F07C8564 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd587087b358d3515b90e17bd1503ef990ffbdb7d8458186720de64a2f07c8564736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD5 DUP8 ADDMOD PUSH28 0x358D3515B90E17BD1503EF990FFBDB7D8458186720DE64A2F07C8564 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbd587087b358d3515b90e17bd1503ef990ffbdb7d8458186720de64a2f07c8564736f6c63430008040033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CustomTokens/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CustomTokens/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FlightDelayInsurance.sol": {
				"FlightDelayInsurance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pli",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "flightId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "eventType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "flight",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "performedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "performedOn",
									"type": "uint256"
								}
							],
							"name": "FlightEvents",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "insuranceid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "eventType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "passenger",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "performedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "performedOn",
									"type": "uint256"
								}
							],
							"name": "InsuranceEvents",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "PluginRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "otp",
									"type": "uint256"
								}
							],
							"name": "RequestPermissionFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "jobId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"name": "requestCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_passengerAddress",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_carrierFlightNumber",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_departureOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_arrivalOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_travelday",
									"type": "uint256"
								}
							],
							"name": "bookInsurance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimRequest",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "claims",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "polictyid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "passenger",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "carrierFlightNumber",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "departureOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "arrivalOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bookedOn",
									"type": "uint256"
								},
								{
									"internalType": "enum IFlightStatus.FlightStatus",
									"name": "flightStatus",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "yearmonthdate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "processed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "flights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "flightId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "carrierFlightNumber",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "serviceProviderName",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "serviceProvider",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "registeredOn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "registeredBy",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_requestId",
									"type": "bytes32"
								},
								{
									"internalType": "enum IFlightStatus.FlightStatus",
									"name": "_flightStatus",
									"type": "uint8"
								}
							],
							"name": "fulfillClaimInquiry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "insurances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "polictyid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "passenger",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "carrierFlightNumber",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "departureOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "arrivalOn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bookedOn",
									"type": "uint256"
								},
								{
									"internalType": "enum IFlightStatus.FlightStatus",
									"name": "flightStatus",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "yearmonthdate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "processed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_flightAddress",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_carrierFlightNumber",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_serviceProviderName",
									"type": "string"
								}
							],
							"name": "registerFlights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_insuranceid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_oracleAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_jobid",
									"type": "string"
								}
							],
							"name": "submitMyClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FlightDelayInsurance.sol\":208:4909  contract FlightDelayInsurance is PluginClient, IFlightStatus {... */\n  mstore(0x40, 0x80)\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1194:1195  1 */\n  0x01\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1163:1195  uint256 private requestCount = 1 */\n  0x04\n  sstore\n    /* \"contracts/FlightDelayInsurance.sol\":824:982  constructor(address _pli) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":7422:7425  pli */\n  0x02\n    /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":7422:7457  pli = PliTokenInterface(pliAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/FlightDelayInsurance.sol\":890:895  owner */\n  0x08\n    /* \"contracts/FlightDelayInsurance.sol\":890:908  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/FlightDelayInsurance.sol\":898:908  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/FlightDelayInsurance.sol\":890:908  owner = msg.sender */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/FlightDelayInsurance.sol\":918:940  _flightIds.increment() */\n  tag_8\n    /* \"contracts/FlightDelayInsurance.sol\":918:928  _flightIds */\n  0x06\n    /* \"contracts/FlightDelayInsurance.sol\":918:938  _flightIds.increment */\n  tag_9\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_57\n  or\n    /* \"contracts/FlightDelayInsurance.sol\":918:940  _flightIds.increment() */\n  swap1\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/FlightDelayInsurance.sol\":950:975  _insuranceIds.increment() */\n  tag_10\n    /* \"contracts/FlightDelayInsurance.sol\":950:963  _insuranceIds */\n  0x07\n    /* \"contracts/FlightDelayInsurance.sol\":950:973  _insuranceIds.increment */\n  or(tag_0_57, shl(0x20, tag_9))\n    /* \"contracts/FlightDelayInsurance.sol\":950:975  _insuranceIds.increment() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/FlightDelayInsurance.sol\":824:982  constructor(address _pli) {... */\n  pop\n    /* \"contracts/FlightDelayInsurance.sol\":208:4909  contract FlightDelayInsurance is PluginClient, IFlightStatus {... */\n  jump(tag_14)\n    /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\ntag_9:\n    /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n  dup1\n  sload\n    /* \"CustomTokens/contracts/utils/Counters.sol\":1050:1051  1 */\n  0x01\n    /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n  add\n  swap1\n  sstore\n    /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n  jump\t// out\n    /* \"#utility.yul\":14:324   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_16:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_17:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_14:\n    /* \"contracts/FlightDelayInsurance.sol\":208:4909  contract FlightDelayInsurance is PluginClient, IFlightStatus {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FlightDelayInsurance.sol\":208:4909  contract FlightDelayInsurance is PluginClient, IFlightStatus {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6e8cffa2\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x6e8cffa2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8d3c9445\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc4e49cd5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xeff0f592\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x0ebc8da6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29e999f4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2e01f2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5996e024\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FlightDelayInsurance.sol\":4227:4517  function fulfillClaimInquiry(bytes32 _requestId, FlightStatus _flightStatus)... */\n    tag_3:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/FlightDelayInsurance.sol\":750:817  mapping(uint256 => mapping(address => bytes32)) public claimRequest */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      0x0c\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":5890:5915   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5878:5880   */\n      0x20\n        /* \"#utility.yul\":5863:5881   */\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":750:817  mapping(uint256 => mapping(address => bytes32)) public claimRequest */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FlightDelayInsurance.sol\":2504:3345  function bookInsurance(... */\n    tag_5:\n      tag_17\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/FlightDelayInsurance.sol\":622:689  mapping(uint256 => mapping(address => FlightMaster)) public flights */\n    tag_6:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_21\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/FlightDelayInsurance.sol\":543:616  mapping(uint256 => mapping(address => FlightInsurance)) public insurances */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_35:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      dup8\n      add\n      sload\n      0x07\n      dup9\n      add\n      sload\n      0x08\n      swap1\n      swap9\n      add\n      sload\n      swap7\n      swap8\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap7\n      and\n      swap7\n      swap5\n      swap6\n      swap4\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      0xff\n      swap2\n      dup3\n      and\n      swap3\n      swap2\n      and\n      dup10\n      jump\n    tag_34:\n      mload(0x40)\n      tag_21\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"contracts/FlightDelayInsurance.sol\":1765:2463  function registerFlights(... */\n    tag_8:\n      tag_17\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/FlightDelayInsurance.sol\":517:537  address public owner */\n    tag_9:\n      sload(0x08)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4484:4516   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4466:4517   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4454:4456   */\n      0x20\n        /* \"#utility.yul\":4439:4457   */\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":517:537  address public owner */\n      tag_21\n        /* \"#utility.yul\":4421:4523   */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":3351:4221  function submitMyClaim(... */\n    tag_10:\n      tag_13\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/FlightDelayInsurance.sol\":695:744  mapping(bytes32 => FlightInsurance) public claims */\n    tag_11:\n      tag_34\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      dup8\n      add\n      sload\n      0x07\n      dup9\n      add\n      sload\n      0x08\n      swap1\n      swap9\n      add\n      sload\n      swap7\n      swap8\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap7\n      and\n      swap7\n      swap5\n      swap6\n      swap4\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      0xff\n      swap2\n      dup3\n      and\n      swap3\n      swap2\n      and\n      dup10\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":4227:4517  function fulfillClaimInquiry(bytes32 _requestId, FlightStatus _flightStatus)... */\n    tag_16:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10427:10453  pendingRequests[requestId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10427:10442  pendingRequests */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10427:10453  pendingRequests[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10413:10423  msg.sender */\n      caller\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10413:10453  msg.sender == pendingRequests[requestId] */\n      eq\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10405:10510  require(msg.sender == pendingRequests[requestId],... */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10405:10510  require(msg.sender == pendingRequests[requestId],... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7219:7240   */\n      mstore\n        /* \"#utility.yul\":7276:7278   */\n      0x28\n        /* \"#utility.yul\":7256:7274   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7249:7279   */\n      mstore\n        /* \"#utility.yul\":7315:7349   */\n      0x536f75726365206d75737420626520746865206f7261636c65206f6620746865\n        /* \"#utility.yul\":7295:7313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7288:7350   */\n      mstore\n      shl(0xc2, 0x081c995c5d595cdd)\n        /* \"#utility.yul\":7366:7384   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7359:7397   */\n      mstore\n        /* \"#utility.yul\":7414:7433   */\n      0x84\n      add\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10405:10510  require(msg.sender == pendingRequests[requestId],... */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10523:10549  pendingRequests[requestId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10523:10538  pendingRequests */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10523:10549  pendingRequests[requestId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10516:10549  delete pendingRequests[requestId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10560:10586  PluginFulfilled(requestId) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10539:10548  requestId */\n      dup3\n      swap2\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":10560:10586  PluginFulfilled(requestId) */\n      0xa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f998\n      swap2\n      log2\n        /* \"contracts/FlightDelayInsurance.sol\":4377:4403  FlightInsurance memory fin */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":4406:4424  claims[_requestId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":4406:4412  claims */\n      0x0b\n        /* \"contracts/FlightDelayInsurance.sol\":4406:4424  claims[_requestId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":4377:4424  FlightInsurance memory fin = claims[_requestId] */\n      dup2\n      mload\n      0x0120\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup1\n      dup3\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      0xc0\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_63:\n      0x05\n      dup2\n      gt\n      iszero\n      tag_64\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_64:\n      dup2\n      mstore\n      0x07\n      dup3\n      add\n      sload\n      0x20\n      dup3\n      add\n      mstore\n      0x08\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x40\n      swap1\n      swap2\n      add\n      mstore\n      0x01\n      0x0100\n        /* \"contracts/FlightDelayInsurance.sol\":4434:4447  fin.processed */\n      dup3\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":4434:4454  fin.processed = true */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":4377:4424  FlightInsurance memory fin = claims[_requestId] */\n      swap1\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":4464:4480  fin.flightStatus */\n      0xc0\n      dup2\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":4496:4509  _flightStatus */\n      dup4\n        /* \"contracts/FlightDelayInsurance.sol\":4464:4510  fin.flightStatus = FlightStatus(_flightStatus) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_65:\n      swap1\n      dup2\n      0x05\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_66:\n      swap1\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":4227:4517  function fulfillClaimInquiry(bytes32 _requestId, FlightStatus _flightStatus)... */\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":2504:3345  function bookInsurance(... */\n    tag_26:\n        /* \"contracts/FlightDelayInsurance.sol\":2708:2715  uint256 */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":2727:2747  uint256 _insuranceId */\n      dup1\n        /* \"contracts/FlightDelayInsurance.sol\":2750:2773  _insuranceIds.current() */\n      tag_68\n        /* \"contracts/FlightDelayInsurance.sol\":2750:2763  _insuranceIds */\n      0x07\n        /* \"CustomTokens/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"CustomTokens/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":2750:2773  _insuranceIds.current() */\n    tag_68:\n        /* \"contracts/FlightDelayInsurance.sol\":2727:2773  uint256 _insuranceId = _insuranceIds.current() */\n      swap1\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":2783:2808  _insuranceIds.increment() */\n      tag_70\n        /* \"contracts/FlightDelayInsurance.sol\":2783:2796  _insuranceIds */\n      0x07\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":2783:2808  _insuranceIds.increment() */\n    tag_70:\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FlightDelayInsurance.sol\":2894:2906  _insuranceId */\n      dup3\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":2920:2937  _passengerAddress */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":2951:2971  _carrierFlightNumber */\n      dup8\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":2985:2997  _departureOn */\n      dup7\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3011:3021  _arrivalOn */\n      dup6\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3035:3050  block.timestamp */\n      timestamp\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3077:3078  1 */\n      0x01\n        /* \"contracts/FlightDelayInsurance.sol\":3064:3079  FlightStatus(1) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_71:\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_72:\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      0x00\n      0x40\n      swap3\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2819:2843  insurances[_insuranceId] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2819:2829  insurances */\n      0x09\n        /* \"contracts/FlightDelayInsurance.sol\":2819:2843  insurances[_insuranceId] */\n      dup3\n      mstore\n      dup3\n      dup2\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlightDelayInsurance.sol\":2819:2862  insurances[_insuranceId][_passengerAddress] */\n      dup13\n      dup2\n      and\n      dup4\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":2819:3132  insurances[_insuranceId][_passengerAddress] = FlightInsurance(... */\n      dup5\n      mload\n      dup2\n      sstore\n      swap2\n      dup5\n      add\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      0x01\n        /* \"contracts/FlightDelayInsurance.sol\":2819:3132  insurances[_insuranceId][_passengerAddress] = FlightInsurance(... */\n      dup1\n      dup5\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0xc0\n      dup5\n      add\n      mload\n      0x06\n      dup4\n      add\n      dup1\n      sload\n        /* \"contracts/FlightDelayInsurance.sol\":2819:2862  insurances[_insuranceId][_passengerAddress] */\n      swap4\n      swap5\n        /* \"contracts/FlightDelayInsurance.sol\":2819:3132  insurances[_insuranceId][_passengerAddress] = FlightInsurance(... */\n      swap2\n      swap4\n      swap1\n      swap3\n      not(0xff)\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/FlightDelayInsurance.sol\":2865:3132  FlightInsurance(... */\n      swap1\n        /* \"contracts/FlightDelayInsurance.sol\":2819:3132  insurances[_insuranceId][_passengerAddress] = FlightInsurance(... */\n      dup5\n      swap1\n      dup2\n      gt\n      iszero\n      tag_73\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_73:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      dup2\n      add\n      mload\n      0x07\n      dup4\n      add\n      sstore\n      0x0100\n      swap1\n      swap3\n      add\n      mload\n      0x08\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/FlightDelayInsurance.sol\":3148:3308  InsuranceEvents(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10212:10237   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":10273:10276   */\n      0xa0\n        /* \"#utility.yul\":10268:10270   */\n      0x20\n        /* \"#utility.yul\":10253:10271   */\n      dup3\n      add\n        /* \"#utility.yul\":10246:10277   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10314:10316   */\n      0x10\n        /* \"#utility.yul\":10293:10312   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10286:10317   */\n      mstore\n      shl(0x82, 0x125b9cdd5c985b98d948109bdbdad959)\n        /* \"#utility.yul\":10348:10351   */\n      0xc0\n        /* \"#utility.yul\":10333:10352   */\n      dup3\n      add\n        /* \"#utility.yul\":10326:10373   */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":3235:3245  msg.sender */\n      caller\n        /* \"#utility.yul\":10463:10481   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":10456:10499   */\n      dup3\n      swap1\n      mstore\n      0x60\n        /* \"#utility.yul\":10515:10533   */\n      dup2\n      add\n        /* \"#utility.yul\":10508:10551   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":3283:3298  block.timestamp */\n      timestamp\n      0x80\n        /* \"#utility.yul\":10567:10586   */\n      dup3\n      add\n        /* \"#utility.yul\":10560:10595   */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":3148:3308  InsuranceEvents(... */\n      0x528441e079e31bf6f9d9a91817469f3269aadfd0e41397f5139151f22d5bb541\n      swap2\n        /* \"#utility.yul\":10390:10409   */\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3148:3308  InsuranceEvents(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/FlightDelayInsurance.sol\":3326:3338  _insuranceId */\n      swap7\n        /* \"contracts/FlightDelayInsurance.sol\":2504:3345  function bookInsurance(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":622:689  mapping(uint256 => mapping(address => FlightMaster)) public flights */\n    tag_31:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_77\n      jump\t// in\n    tag_78:\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      dup5\n      add\n      sload\n      0x05\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap4\n      swap1\n      swap3\n      pop\n      and\n      dup7\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":1765:2463  function registerFlights(... */\n    tag_42:\n        /* \"contracts/FlightDelayInsurance.sol\":1926:1933  uint256 */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":1945:1962  uint256 _flightId */\n      dup1\n        /* \"contracts/FlightDelayInsurance.sol\":1965:1985  _flightIds.current() */\n      tag_83\n        /* \"contracts/FlightDelayInsurance.sol\":1965:1975  _flightIds */\n      0x06\n        /* \"CustomTokens/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"CustomTokens/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":1965:1985  _flightIds.current() */\n    tag_83:\n        /* \"contracts/FlightDelayInsurance.sol\":1945:1985  uint256 _flightId = _flightIds.current() */\n      swap1\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":1995:2017  _flightIds.increment() */\n      tag_84\n        /* \"contracts/FlightDelayInsurance.sol\":1995:2005  _flightIds */\n      0x06\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":1995:2017  _flightIds.increment() */\n    tag_84:\n        /* \"contracts/FlightDelayInsurance.sol\":2065:2259  FlightMaster(... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      dup3\n      dup5\n      add\n      dup8\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      and\n      0x60\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2210:2225  block.timestamp */\n      timestamp\n        /* \"contracts/FlightDelayInsurance.sol\":2065:2259  FlightMaster(... */\n      0x80\n      dup7\n      add\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2239:2249  msg.sender */\n      caller\n        /* \"contracts/FlightDelayInsurance.sol\":2065:2259  FlightMaster(... */\n      0xa0\n      dup7\n      add\n      mstore\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2046  flights[_flightId] */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2035  flights */\n      0x0a\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2046  flights[_flightId] */\n      dup6\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2062  flights[_flightId][_flightAddress] */\n      swap2\n      dup2\n      mstore\n      swap1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap5\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2259  flights[_flightId][_flightAddress] = FlightMaster(... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap3\n      mload\n      dup1\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":2065:2259  FlightMaster(... */\n      swap3\n      swap4\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2062  flights[_flightId][_flightAddress] */\n      swap3\n        /* \"contracts/FlightDelayInsurance.sol\":2028:2259  flights[_flightId][_flightAddress] = FlightMaster(... */\n      tag_85\n      swap3\n      0x02\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      pop\n      0x60\n      dup3\n      dup2\n      add\n      mload\n      0x03\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x80\n      dup1\n      dup7\n      add\n      mload\n      0x04\n      dup7\n      add\n      sstore\n      0xa0\n      swap6\n      dup7\n      add\n      mload\n      0x05\n      swap1\n      swap6\n      add\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap5\n      swap1\n      swap3\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/FlightDelayInsurance.sol\":2274:2429  FlightEvents(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9521:9546   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":9577:9579   */\n      0x20\n        /* \"#utility.yul\":9562:9580   */\n      dup2\n      add\n        /* \"#utility.yul\":9555:9586   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":9623:9625   */\n      0x11\n        /* \"#utility.yul\":9602:9621   */\n      swap5\n      dup2\n      add\n        /* \"#utility.yul\":9595:9626   */\n      swap5\n      swap1\n      swap5\n      mstore\n      shl(0x7a, 0x119b1a59da1d08149959da5cdd195c9959)\n        /* \"#utility.yul\":9657:9660   */\n      0xc0\n        /* \"#utility.yul\":9642:9661   */\n      dup6\n      add\n        /* \"#utility.yul\":9635:9683   */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2356:2366  msg.sender */\n      caller\n        /* \"#utility.yul\":9773:9791   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":9766:9809   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9825:9843   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":9818:9861   */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2404:2419  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9877:9896   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9870:9905   */\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":2274:2429  FlightEvents(... */\n      0x31e053a200c037c2a0f3a83d8e087ea8ca9962fc3f642170571a92abc949a13c\n      swap1\n        /* \"#utility.yul\":9715:9718   */\n      0xe0\n        /* \"#utility.yul\":9700:9719   */\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":2274:2429  FlightEvents(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/FlightDelayInsurance.sol\":2447:2456  _flightId */\n      swap5\n        /* \"contracts/FlightDelayInsurance.sol\":1765:2463  function registerFlights(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":3351:4221  function submitMyClaim(... */\n    tag_51:\n        /* \"contracts/FlightDelayInsurance.sol\":3489:3515  FlightInsurance memory fin */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":3518:3542  insurances[_insuranceid] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":3518:3528  insurances */\n      0x09\n        /* \"contracts/FlightDelayInsurance.sol\":3518:3542  insurances[_insuranceid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":3543:3553  msg.sender */\n      caller\n        /* \"contracts/FlightDelayInsurance.sol\":3518:3554  insurances[_insuranceid][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":3489:3554  FlightInsurance memory fin = insurances[_insuranceid][msg.sender] */\n      dup2\n      mload\n      0x0120\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup1\n      dup3\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      0xc0\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_90\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_90:\n      0x05\n      dup2\n      gt\n      iszero\n      tag_91\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_91:\n      dup2\n      mstore\n      0x07\n      dup3\n      add\n      sload\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x08\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x40\n      swap1\n      swap2\n      add\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":3585:3598  fin.passenger */\n      dup2\n      add\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":3489:3554  FlightInsurance memory fin = insurances[_insuranceid][msg.sender] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlightDelayInsurance.sol\":3585:3612  fin.passenger != address(0) */\n      and\n        /* \"contracts/FlightDelayInsurance.sol\":3564:3670  require(... */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6128:6130   */\n      0x20\n        /* \"contracts/FlightDelayInsurance.sol\":3564:3670  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6110:6131   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6147:6165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6140:6170   */\n      mstore\n        /* \"#utility.yul\":6206:6240   */\n      0x506f6c69637920486f6c646572204164647265737320697320696e76616c6964\n        /* \"#utility.yul\":6186:6204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6179:6241   */\n      mstore\n        /* \"#utility.yul\":6258:6276   */\n      0x64\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3564:3670  require(... */\n      tag_60\n        /* \"#utility.yul\":6100:6282   */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":3564:3670  require(... */\n    tag_92:\n        /* \"contracts/FlightDelayInsurance.sol\":3688:3701  fin.processed */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":3688:3710  fin.processed == false */\n      iszero\n        /* \"contracts/FlightDelayInsurance.sol\":3680:3730  require(fin.processed == false, \"Already claimed\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6893:6895   */\n      0x20\n        /* \"contracts/FlightDelayInsurance.sol\":3680:3730  require(fin.processed == false, \"Already claimed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6875:6896   */\n      mstore\n        /* \"#utility.yul\":6932:6934   */\n      0x0f\n        /* \"#utility.yul\":6912:6930   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6905:6935   */\n      mstore\n      shl(0x8a, 0x105b1c9958591e4818db185a5b5959)\n        /* \"#utility.yul\":6951:6969   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6944:6989   */\n      mstore\n        /* \"#utility.yul\":7006:7024   */\n      0x64\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":3680:3730  require(fin.processed == false, \"Already claimed\") */\n      tag_60\n        /* \"#utility.yul\":6865:7030   */\n      jump\n        /* \"contracts/FlightDelayInsurance.sol\":3680:3730  require(fin.processed == false, \"Already claimed\") */\n    tag_95:\n        /* \"contracts/FlightDelayInsurance.sol\":3741:3766  Plugin.Request memory req */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":3769:3908  buildPluginRequest(... */\n      tag_98\n        /* \"contracts/FlightDelayInsurance.sol\":3801:3824  stringToBytes32(_jobid) */\n      tag_99\n        /* \"contracts/FlightDelayInsurance.sol\":3817:3823  _jobid */\n      dup5\n        /* \"contracts/FlightDelayInsurance.sol\":3801:3816  stringToBytes32 */\n      tag_100\n        /* \"contracts/FlightDelayInsurance.sol\":3801:3824  stringToBytes32(_jobid) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/FlightDelayInsurance.sol\":3846:3850  this */\n      address\n      shl(0xe1, 0x075e46d3)\n        /* \"contracts/FlightDelayInsurance.sol\":3769:3787  buildPluginRequest */\n      tag_101\n        /* \"contracts/FlightDelayInsurance.sol\":3769:3908  buildPluginRequest(... */\n      jump\t// in\n    tag_98:\n        /* \"contracts/FlightDelayInsurance.sol\":3741:3908  Plugin.Request memory req = buildPluginRequest(... */\n      swap1\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":3918:3953  req.addUint(\"until\", fin.arrivalOn) */\n      tag_102\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xda, 0x1d5b9d1a5b)\n      dup2\n      mstore\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":3939:3942  fin */\n      dup4\n        /* \"contracts/FlightDelayInsurance.sol\":3939:3952  fin.arrivalOn */\n      0x80\n      add\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":3918:3921  req */\n      dup4\n        /* \"contracts/FlightDelayInsurance.sol\":3918:3929  req.addUint */\n      tag_103\n      swap1\n        /* \"contracts/FlightDelayInsurance.sol\":3918:3953  req.addUint(\"until\", fin.arrivalOn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/FlightDelayInsurance.sol\":3963:3976  bytes32 reqId */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":3979:4081  sendPluginRequestTo(... */\n      tag_104\n        /* \"contracts/FlightDelayInsurance.sol\":4012:4026  _oracleAddress */\n      dup6\n        /* \"contracts/FlightDelayInsurance.sol\":4040:4043  req */\n      dup4\n        /* \"contracts/FlightDelayInsurance.sol\":482:495  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"contracts/FlightDelayInsurance.sol\":3979:3998  sendPluginRequestTo */\n      tag_105\n        /* \"contracts/FlightDelayInsurance.sol\":3979:4081  sendPluginRequestTo(... */\n      jump\t// in\n    tag_104:\n        /* \"contracts/FlightDelayInsurance.sol\":3963:4081  bytes32 reqId = sendPluginRequestTo(... */\n      swap1\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":4107:4110  fin */\n      dup3\n        /* \"contracts/FlightDelayInsurance.sol\":4091:4097  claims */\n      0x0b\n        /* \"contracts/FlightDelayInsurance.sol\":4091:4104  claims[reqId] */\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":4098:4103  reqId */\n      dup4\n        /* \"contracts/FlightDelayInsurance.sol\":4091:4104  claims[reqId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":4091:4110  claims[reqId] = fin */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_106:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      0x07\n      dup3\n      add\n      sstore\n      0x0100\n      swap1\n      swap2\n      add\n      mload\n      0x08\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/FlightDelayInsurance.sol\":4120:4146  claimRequest[_insuranceid] */\n      swap6\n      dup7\n      mstore\n        /* \"contracts/FlightDelayInsurance.sol\":4120:4132  claimRequest */\n      0x0c\n        /* \"contracts/FlightDelayInsurance.sol\":4120:4146  claimRequest[_insuranceid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup9\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":4147:4157  msg.sender */\n      caller\n        /* \"contracts/FlightDelayInsurance.sol\":4120:4158  claimRequest[_insuranceid][msg.sender] */\n      dup10\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap6\n      keccak256\n        /* \"contracts/FlightDelayInsurance.sol\":4120:4166  claimRequest[_insuranceid][msg.sender] = reqId */\n      swap5\n      swap1\n      swap5\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":3351:4221  function submitMyClaim(... */\n      jump\t// out\n        /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_57:\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"CustomTokens/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"CustomTokens/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":4574:4907  function stringToBytes32(string memory source)... */\n    tag_100:\n        /* \"contracts/FlightDelayInsurance.sol\":4759:4785  tempEmptyStringTest.length */\n      dup1\n      mload\n        /* \"contracts/FlightDelayInsurance.sol\":4667:4681  bytes32 result */\n      0x00\n      swap1\n        /* \"contracts/FlightDelayInsurance.sol\":4738:4744  source */\n      dup3\n      swap1\n        /* \"contracts/FlightDelayInsurance.sol\":4755:4827  if (tempEmptyStringTest.length == 0) {... */\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":4813:4816  0x0 */\n      0x00\n      swap3\n        /* \"contracts/FlightDelayInsurance.sol\":4845:4901  {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FlightDelayInsurance.sol\":4755:4827  if (tempEmptyStringTest.length == 0) {... */\n    tag_110:\n      pop\n      pop\n        /* \"contracts/FlightDelayInsurance.sol\":4887:4889  32 */\n      0x20\n        /* \"contracts/FlightDelayInsurance.sol\":4875:4890  add(source, 32) */\n      add\n        /* \"contracts/FlightDelayInsurance.sol\":4869:4891  mload(add(source, 32)) */\n      mload\n      swap1\n        /* \"contracts/FlightDelayInsurance.sol\":4845:4901  {... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1807:2113  function buildPluginRequest(... */\n    tag_101:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1968:1989  Plugin.Request memory */\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2004:2029  Plugin.Request memory req */\n      tag_114\n      tag_112\n      jump\t// in\n    tag_114:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2042:2108  req.initialize(specId, callbackAddress, callbackFunctionSignature) */\n      tag_115\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2042:2045  req */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2057:2063  specId */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2065:2080  callbackAddress */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2082:2107  callbackFunctionSignature */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2042:2056  req.initialize */\n      tag_116\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2042:2108  req.initialize(specId, callbackAddress, callbackFunctionSignature) */\n      jump\t// in\n    tag_115:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":2035:2108  return req.initialize(specId, callbackAddress, callbackFunctionSignature) */\n      swap6\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":1807:2113  function buildPluginRequest(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3127:3308  function addUint(... */\n    tag_103:\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3245:3253  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3245:3271  self.buf.encodeString(key) */\n      tag_118\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3267:3270  key */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3245:3266  self.buf.encodeString */\n      tag_119\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3245:3271  self.buf.encodeString(key) */\n      jump\t// in\n    tag_118:\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3277:3285  self.buf */\n      0x80\n      dup4\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3277:3303  self.buf.encodeUInt(value) */\n      tag_120\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3297:3302  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3277:3296  self.buf.encodeUInt */\n      tag_121\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3277:3303  self.buf.encodeUInt(value) */\n      jump\t// in\n    tag_120:\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3127:3308  function addUint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3115:3395  function sendPluginRequestTo(... */\n    tag_105:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3260:3277  bytes32 requestId */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3299:3390  rawRequest(oracleAddress, req, payment, ORACLE_ARGS_VERSION, oracle.oracleRequest.selector) */\n      tag_123\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3310:3323  oracleAddress */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3325:3328  req */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3330:3337  payment */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":754:755  1 */\n      0x01\n      shl(0xe1, 0x20214ca3)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3299:3309  rawRequest */\n      tag_124\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3299:3390  rawRequest(oracleAddress, req, payment, ORACLE_ARGS_VERSION, oracle.oracleRequest.selector) */\n      jump\t// in\n    tag_123:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3292:3390  return rawRequest(oracleAddress, req, payment, ORACLE_ARGS_VERSION, oracle.oracleRequest.selector) */\n      swap5\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":3115:3395  function sendPluginRequestTo(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":961:1332  function initialize(... */\n    tag_116:\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1122:1143  Plugin.Request memory */\n      tag_125\n      tag_112\n      jump\t// in\n    tag_125:\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1158:1204  BufferPlugin.init(self.buf, defaultBufferSize) */\n      tag_127\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1176:1180  self */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1176:1184  self.buf */\n      0x80\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":347:350  256 */\n      0x0100\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1158:1175  BufferPlugin.init */\n      tag_128\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1158:1204  BufferPlugin.init(self.buf, defaultBufferSize) */\n      jump\t// in\n    tag_127:\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1210:1225  self.id = jobId */\n      swap2\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1231:1266  self.callbackAddress = callbackAddr */\n      and\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1231:1251  self.callbackAddress */\n      0x20\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1231:1266  self.callbackAddress = callbackAddr */\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1272:1310  self.callbackFunctionId = callbackFunc */\n      and\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1272:1295  self.callbackFunctionId */\n      0x40\n      dup3\n      add\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1272:1310  self.callbackFunctionId = callbackFunc */\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":1210:1225  self.id = jobId */\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":961:1332  function initialize(... */\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2757:2964  function encodeString(... */\n    tag_119:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2874:2929  encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length) */\n      tag_130\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2885:2888  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":371:372  3 */\n      0x03\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2915:2920  value */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2909:2928  bytes(value).length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2874:2884  encodeType */\n      tag_131\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2874:2929  encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length) */\n      jump\t// in\n    tag_130:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2935:2959  buf.append(bytes(value)) */\n      tag_120\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2935:2938  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2952:2957  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2935:2945  buf.append */\n      tag_133\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":2935:2959  buf.append(bytes(value)) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1513:1662  function encodeUInt(... */\n    tag_121:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1619:1657  encodeType(buf, MAJOR_TYPE_INT, value) */\n      tag_135\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1630:1633  buf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":222:223  0 */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1651:1656  value */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1619:1629  encodeType */\n      tag_131\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1619:1657  encodeType(buf, MAJOR_TYPE_INT, value) */\n      jump\t// in\n    tag_135:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1513:1662  function encodeUInt(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5149:6092  function rawRequest(... */\n    tag_124:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5411:5423  requestCount */\n      sload(0x04)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5388:5424  abi.encodePacked(this, requestCount) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5405:5409  this */\n      address\n        /* \"#utility.yul\":4198:4200   */\n      0x60\n        /* \"#utility.yul\":4194:4209   */\n      shl\n        /* \"#utility.yul\":4190:4243   */\n      and\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5388:5424  abi.encodePacked(this, requestCount) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4178:4244   */\n      mstore\n        /* \"#utility.yul\":4260:4272   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":4253:4281   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5334:5351  bytes32 requestId */\n      0x00\n      swap1\n        /* \"#utility.yul\":4297:4309   */\n      0x54\n      add\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5388:5424  abi.encodePacked(this, requestCount) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5378:5425  keccak256(abi.encodePacked(this, requestCount)) */\n      dup2\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5388:5424  abi.encodePacked(this, requestCount) */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5378:5425  keccak256(abi.encodePacked(this, requestCount)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5443:5455  requestCount */\n      sload(0x04)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5431:5440  req.nonce */\n      0x60\n      dup10\n      add\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5431:5455  req.nonce = requestCount */\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5461:5487  pendingRequests[requestId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5461:5476  pendingRequests */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5461:5487  pendingRequests[requestId] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5461:5503  pendingRequests[requestId] = oracleAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      or\n      swap1\n      sstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5514:5540  PluginRequested(requestId) */\n      swap1\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5378:5425  keccak256(abi.encodePacked(this, requestCount)) */\n      swap1\n      swap3\n      pop\n      dup3\n      swap2\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5514:5540  PluginRequested(requestId) */\n      0xa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe24\n      swap2\n      log2\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5546:5570  bytes memory encodedData */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5603:5615  funcSelector */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":701:702  0 */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":645:646  0 */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5835:5838  req */\n      dup9\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5835:5841  req.id */\n      0x00\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5849:5852  req */\n      dup10\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5849:5868  req.callbackAddress */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5876:5879  req */\n      dup11\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5876:5898  req.callbackFunctionId */\n      0x40\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5906:5909  req */\n      dup12\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5906:5915  req.nonce */\n      0x60\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5923:5934  argsVersion */\n      dup11\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5942:5945  req */\n      dup14\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5942:5949  req.buf */\n      0x80\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5942:5953  req.buf.buf */\n      0x00\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5573:5954  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      tag_139\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:5971  pli */\n      sload(0x02)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:6024  pli.transferAndCall(oracleAddress, payment, encodedData) */\n      swap2\n      mload\n      shl(0xe5, 0x02000575)\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5573:5954  abi.encodeWithSelector(... */\n      swap1\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:5971  pli */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:5987  pli.transferAndCall */\n      0x4000aea0\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:6024  pli.transferAndCall(oracleAddress, payment, encodedData) */\n      tag_141\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5988:6001  oracleAddress */\n      dup11\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":6003:6010  payment */\n      dup10\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5573:5954  abi.encodeWithSelector(... */\n      dup7\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5968:6024  pli.transferAndCall(oracleAddress, payment, encodedData) */\n      0x04\n      add\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5960:6064  require(pli.transferAndCall(oracleAddress, payment, encodedData), \"unable to transferAndCall to oracle\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6489:6491   */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5960:6064  require(pli.transferAndCall(oracleAddress, payment, encodedData), \"unable to transferAndCall to oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6471:6492   */\n      mstore\n        /* \"#utility.yul\":6528:6530   */\n      0x23\n        /* \"#utility.yul\":6508:6526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6501:6531   */\n      mstore\n        /* \"#utility.yul\":6567:6601   */\n      0x756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261\n        /* \"#utility.yul\":6547:6565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6540:6602   */\n      mstore\n      shl(0xe8, 0x636c65)\n        /* \"#utility.yul\":6618:6636   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6611:6644   */\n      mstore\n        /* \"#utility.yul\":6661:6680   */\n      0x84\n      add\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5960:6064  require(pli.transferAndCall(oracleAddress, payment, encodedData), \"unable to transferAndCall to oracle\") */\n      tag_60\n        /* \"#utility.yul\":6461:6686   */\n      jump\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5960:6064  require(pli.transferAndCall(oracleAddress, payment, encodedData), \"unable to transferAndCall to oracle\") */\n    tag_148:\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":6086:6087  1 */\n      0x01\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":6070:6082  requestCount */\n      0x04\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":6070:6087  requestCount += 1 */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@goplugin/contracts/src/v0.8/PluginClient.sol\":5149:6092  function rawRequest(... */\n      swap2\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":979:1412  function init(... */\n    tag_128:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1112:1125  capacity % 32 */\n      tag_156\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1123:1125  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1112:1120  capacity */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1112:1125  capacity % 32 */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1112:1130  capacity % 32 != 0 */\n      iszero\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1108:1179  if (capacity % 32 != 0) {... */\n      tag_158\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1158:1171  capacity % 32 */\n      tag_159\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1169:1171  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1158:1166  capacity */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1158:1171  capacity % 32 */\n      tag_157\n      jump\t// in\n    tag_159:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1152:1172  32 - (capacity % 32) */\n      tag_160\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1152:1154  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1152:1172  32 - (capacity % 32) */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1140:1172  capacity += 32 - (capacity % 32) */\n      tag_162\n      swap1\n      dup4\n      tag_152\n      jump\t// in\n    tag_162:\n      swap2\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1108:1179  if (capacity % 32 != 0) {... */\n    tag_158:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1226:1238  buf.capacity */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1226:1249  buf.capacity = capacity */\n      dup3\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1289:1293  0x40 */\n      0x40\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1283:1294  mload(0x40) */\n      dup1\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1301:1317  mstore(buf, ptr) */\n      dup1\n      dup6\n      mstore\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1324:1338  mstore(ptr, 0) */\n      dup2\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1366:1384  add(ptr, capacity) */\n      dup4\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1358:1385  add(32, add(ptr, capacity)) */\n      swap1\n      swap2\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1345:1386  mstore(0x40, add(32, add(ptr, capacity))) */\n      swap1\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1226:1229  buf */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":979:1412  function init(... */\n    tag_155:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":670:1337  function encodeType(... */\n    tag_131:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":804:806  23 */\n      0x17\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":795:800  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":795:806  value <= 23 */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":792:1333  if(value <= 23) {... */\n      tag_164\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":816:860  buf.appendUint8(uint8((major << 5) | value)) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":816:819  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":838:858  (major << 5) | value */\n      0xe0\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":848:849  5 */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":839:849  major << 5 */\n      dup6\n      swap1\n      shl\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":838:858  (major << 5) | value */\n      and\n      dup4\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":816:831  buf.appendUint8 */\n      tag_166\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":816:860  buf.appendUint8(uint8((major << 5) | value)) */\n      jump\t// in\n    tag_165:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/Plugin.sol\":3127:3308  function addUint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":792:1333  if(value <= 23) {... */\n    tag_164:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":885:889  0xFF */\n      0xff\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":876:881  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":876:889  value <= 0xFF */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":873:1333  if(value <= 0xFF) {... */\n      tag_168\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":899:940  buf.appendUint8(uint8((major << 5) | 24)) */\n      tag_169\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":899:902  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":936:938  24 */\n      0x18\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":922:932  major << 5 */\n      0x1fe0\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":931:932  5 */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":922:932  major << 5 */\n      dup7\n      swap1\n      shl\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":921:938  (major << 5) | 24 */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":899:914  buf.appendUint8 */\n      tag_166\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":899:940  buf.appendUint8(uint8((major << 5) | 24)) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":948:971  buf.appendInt(value, 1) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":948:951  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":962:967  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":969:970  1 */\n      0x01\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":948:961  buf.appendInt */\n      tag_171\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":948:971  buf.appendInt(value, 1) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":873:1333  if(value <= 0xFF) {... */\n    tag_168:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":996:1002  0xFFFF */\n      0xffff\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":987:992  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":987:1002  value <= 0xFFFF */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":984:1333  if(value <= 0xFFFF) {... */\n      tag_173\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1012:1053  buf.appendUint8(uint8((major << 5) | 25)) */\n      tag_174\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1012:1015  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1049:1051  25 */\n      0x19\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1035:1045  major << 5 */\n      0x1fe0\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1044:1045  5 */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1035:1045  major << 5 */\n      dup7\n      swap1\n      shl\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1034:1051  (major << 5) | 25 */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1012:1027  buf.appendUint8 */\n      tag_166\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1012:1053  buf.appendUint8(uint8((major << 5) | 25)) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1061:1084  buf.appendInt(value, 2) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1061:1064  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1075:1080  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1082:1083  2 */\n      0x02\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1061:1074  buf.appendInt */\n      tag_171\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1061:1084  buf.appendInt(value, 2) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":984:1333  if(value <= 0xFFFF) {... */\n    tag_173:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1109:1119  0xFFFFFFFF */\n      0xffffffff\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1100:1105  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1100:1119  value <= 0xFFFFFFFF */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1097:1333  if(value <= 0xFFFFFFFF) {... */\n      tag_177\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1129:1170  buf.appendUint8(uint8((major << 5) | 26)) */\n      tag_178\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1129:1132  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1166:1168  26 */\n      0x1a\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1152:1162  major << 5 */\n      0x1fe0\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1161:1162  5 */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1152:1162  major << 5 */\n      dup7\n      swap1\n      shl\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1151:1168  (major << 5) | 26 */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1129:1144  buf.appendUint8 */\n      tag_166\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1129:1170  buf.appendUint8(uint8((major << 5) | 26)) */\n      jump\t// in\n    tag_178:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1178:1201  buf.appendInt(value, 4) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1178:1181  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1192:1197  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1199:1200  4 */\n      0x04\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1178:1191  buf.appendInt */\n      tag_171\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1178:1201  buf.appendInt(value, 4) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1097:1333  if(value <= 0xFFFFFFFF) {... */\n    tag_177:\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1226:1244  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1217:1222  value */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1217:1244  value <= 0xFFFFFFFFFFFFFFFF */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1214:1333  if(value <= 0xFFFFFFFFFFFFFFFF) {... */\n      tag_120\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1254:1295  buf.appendUint8(uint8((major << 5) | 27)) */\n      tag_182\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1254:1257  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1291:1293  27 */\n      0x1b\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1277:1287  major << 5 */\n      0x1fe0\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1286:1287  5 */\n      0x05\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1277:1287  major << 5 */\n      dup7\n      swap1\n      shl\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1276:1293  (major << 5) | 27 */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1254:1269  buf.appendUint8 */\n      tag_166\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1254:1295  buf.appendUint8(uint8((major << 5) | 27)) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1303:1326  buf.appendInt(value, 8) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1303:1306  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1317:1322  value */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1324:1325  8 */\n      0x08\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1303:1316  buf.appendInt */\n      tag_171\n        /* \"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":1303:1326  buf.appendInt(value, 8) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4823:5016  function append(... */\n    tag_133:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4966:5011  write(buf, buf.buf.length, data, data.length) */\n      tag_186\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4972:4975  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4977:4980  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4977:4984  buf.buf */\n      0x00\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4977:4991  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4993:4997  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4999:5003  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4999:5010  data.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4966:4971  write */\n      tag_187\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4966:5011  write(buf, buf.buf.length, data, data.length) */\n      jump\t// in\n    tag_186:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4959:5011  return write(buf, buf.buf.length, data, data.length) */\n      swap4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4823:5016  function append(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6218:6400  function appendUint8(... */\n    tag_166:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6358:6395  writeUint8(buf, buf.buf.length, data) */\n      tag_186\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6369:6372  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6374:6377  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6374:6381  buf.buf */\n      0x00\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6374:6388  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6390:6394  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6358:6368  writeUint8 */\n      tag_191\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":6358:6395  writeUint8(buf, buf.buf.length, data) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10212:10408  function appendInt(... */\n    tag_171:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10363:10403  writeInt(buf, buf.buf.length, data, len) */\n      tag_123\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10372:10375  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10377:10380  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10377:10384  buf.buf */\n      0x00\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10377:10391  buf.buf.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10393:10397  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10399:10402  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10363:10371  writeInt */\n      tag_195\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":10363:10403  writeInt(buf, buf.buf.length, data, len) */\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2854:4076  function write(... */\n    tag_187:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3031:3035  data */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3031:3042  data.length */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3024:3027  len */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3024:3042  len <= data.length */\n      gt\n      iszero\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3016:3043  require(len <= data.length) */\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3066:3078  buf.capacity */\n      0x20\n      dup6\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3054:3063  off + len */\n      tag_199\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3060:3063  len */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3054:3057  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3054:3063  off + len */\n      tag_152\n      jump\t// in\n    tag_199:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3054:3078  off + len > buf.capacity */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3050:3140  if (off + len > buf.capacity) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3088:3133  resize(buf, max(buf.capacity, len + off) * 2) */\n      tag_201\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3095:3098  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3100:3128  max(buf.capacity, len + off) */\n      tag_202\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3104:3107  buf */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3104:3116  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3124:3127  off */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3118:3121  len */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3118:3127  len + off */\n      tag_203\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_203:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3100:3103  max */\n      tag_204\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3100:3128  max(buf.capacity, len + off) */\n      jump\t// in\n    tag_202:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3100:3132  max(buf.capacity, len + off) * 2 */\n      tag_205\n      swap1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3131:3132  2 */\n      0x02\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3100:3132  max(buf.capacity, len + off) * 2 */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3088:3094  resize */\n      tag_207\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3088:3133  resize(buf, max(buf.capacity, len + off) * 2) */\n      jump\t// in\n    tag_201:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3146:3155  uint dest */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3161:3169  uint src */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3255:3258  buf */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3249:3259  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3326:3332  bufptr */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3320:3333  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3442:3445  off */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3437:3439  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3429:3435  bufptr */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3425:3440  add(bufptr, 32) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3421:3446  add(add(bufptr, 32), off) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3413:3446  dest := add(add(bufptr, 32), off) */\n      swap4\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3526:3532  buflen */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3520:3523  off */\n      dup9\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3515:3518  len */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3511:3524  add(len, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3508:3533  gt(add(len, off), buflen) */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3505:3507  if */\n      iszero\n      tag_208\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3568:3571  off */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3563:3566  len */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3559:3572  add(len, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3551:3557  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3544:3573  mstore(bufptr, add(len, off)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3505:3507  if */\n    tag_208:\n      pop\n      pop\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3605:3607  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3595:3608  add(data, 32) */\n      dup5\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3666:3795  for (; len >= 32; len -= 32) {... */\n    tag_209:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3680:3682  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3673:3676  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3673:3682  len >= 32 */\n      lt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3666:3795  for (; len >= 32; len -= 32) {... */\n      tag_210\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3735:3745  mload(src) */\n      dup1\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3722:3746  mstore(dest, mload(src)) */\n      dup3\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3761:3771  dest += 32 */\n      tag_212\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3769:3771  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3729:3733  dest */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3761:3771  dest += 32 */\n      tag_152\n      jump\t// in\n    tag_212:\n      swap2\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3779:3788  src += 32 */\n      tag_213\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3786:3788  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3779:3788  src += 32 */\n      dup3\n      tag_152\n      jump\t// in\n    tag_213:\n      swap1\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3684:3693  len -= 32 */\n      tag_214\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3691:3693  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3684:3693  len -= 32 */\n      dup6\n      tag_161\n      jump\t// in\n    tag_214:\n      swap4\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3666:3795  for (; len >= 32; len -= 32) {... */\n      jump(tag_209)\n    tag_210:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3928:3938  mload(src) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3979:3990  mload(dest) */\n      dup2\n      mload\n      not(0x00)\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3868:3870  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3868:3876  32 - len */\n      dup7\n      swap1\n      sub\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3860:3863  256 */\n      0x0100\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3860:3877  256 ** (32 - len) */\n      exp\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3859:3882  (256 ** (32 - len)) - 1 */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3975:3997  and(mload(dest), mask) */\n      swap1\n      dup2\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3940:3949  not(mask) */\n      swap1\n      not\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":3924:3950  and(mload(src), not(mask)) */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4019:4040  or(destpart, srcpart) */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4006:4041  mstore(dest, or(destpart, srcpart)) */\n      swap1\n      mstore\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":4068:4071  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2854:4076  function write(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5310:5971  function writeUint8(... */\n    tag_191:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5467:5470  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5467:5479  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5460:5463  off */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5460:5479  off >= buf.capacity */\n      lt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5456:5525  if (off >= buf.capacity) {... */\n      tag_218\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5489:5518  resize(buf, buf.capacity * 2) */\n      tag_218\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5496:5499  buf */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5501:5504  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5501:5513  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5516:5517  2 */\n      0x02\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5501:5517  buf.capacity * 2 */\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5489:5518  resize(buf, buf.capacity * 2) */\n    tag_218:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5611:5614  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5605:5615  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5682:5688  bufptr */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5676:5689  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5794:5796  32 */\n      0x20\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5788:5791  off */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5780:5786  bufptr */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5776:5792  add(bufptr, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5772:5797  add(add(bufptr, off), 32) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5818:5822  data */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5812:5816  dest */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5804:5823  mstore8(dest, data) */\n      mstore8\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5889:5895  buflen */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5884:5887  off */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5881:5896  eq(off, buflen) */\n      eq\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5878:5880  if */\n      iszero\n      tag_220\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5934:5935  1 */\n      0x01\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5926:5932  buflen */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5922:5936  add(buflen, 1) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5914:5920  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5907:5937  mstore(bufptr, add(buflen, 1)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5878:5880  if */\n    tag_220:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5963:5966  buf */\n      swap4\n      swap5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":5310:5971  function writeUint8(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9271:9961  function writeInt(... */\n    tag_195:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9443:9455  buf.capacity */\n      0x20\n      dup6\n      add\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9431:9440  len + off */\n      tag_223\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9437:9440  off */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9431:9434  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9431:9440  len + off */\n      tag_152\n      jump\t// in\n    tag_223:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9431:9455  len + off > buf.capacity */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9427:9500  if (len + off > buf.capacity) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9465:9493  resize(buf, (len + off) * 2) */\n      tag_225\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9472:9475  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9478:9487  len + off */\n      tag_202\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9484:9487  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9478:9481  len */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9478:9487  len + off */\n      tag_152\n      jump\t// in\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9465:9493  resize(buf, (len + off) * 2) */\n    tag_225:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9506:9515  uint mask */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9533:9534  1 */\n      0x01\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9519:9529  256 ** len */\n      tag_228\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9526:9529  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9519:9522  256 */\n      0x0100\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9519:9529  256 ** len */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9518:9534  (256 ** len) - 1 */\n      tag_230\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_230:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9506:9534  uint mask = (256 ** len) - 1 */\n      swap1\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9620:9623  buf */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9614:9624  mload(buf) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9735:9738  len */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9729:9732  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9721:9727  bufptr */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9717:9733  add(bufptr, off) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9713:9739  add(add(bufptr, off), len) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9791:9795  data */\n      dup6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9783:9787  mask */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9779:9788  not(mask) */\n      not\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9772:9776  dest */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9766:9777  mload(dest) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9762:9789  and(mload(dest), not(mask)) */\n      and\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9759:9796  or(and(mload(dest), not(mask)), data) */\n      or\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9753:9757  dest */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9746:9797  mstore(dest, or(and(mload(dest), not(mask)), data)) */\n      mstore\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9879:9885  bufptr */\n      dup1\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9873:9886  mload(bufptr) */\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9867:9870  len */\n      dup5\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9862:9865  off */\n      dup8\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9858:9871  add(off, len) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9855:9887  gt(add(off, len), mload(bufptr)) */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9852:9854  if */\n      iszero\n      tag_231\n      jumpi\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9922:9925  len */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9917:9920  off */\n      dup7\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9913:9926  add(off, len) */\n      add\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9905:9911  bufptr */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9898:9927  mstore(bufptr, add(off, len)) */\n      mstore\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9852:9854  if */\n    tag_231:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9953:9956  buf */\n      swap5\n      swap6\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":9271:9961  function writeInt(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2020:2172  function max(... */\n    tag_204:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2101:2105  uint */\n      0x00\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2128:2129  b */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2124:2125  a */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2124:2129  a > b */\n      gt\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2120:2154  if (a > b) {... */\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2146:2147  a */\n      dup2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2139:2147  return a */\n      jump(tag_155)\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2120:2154  if (a > b) {... */\n    tag_233:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2166:2167  b */\n      swap2\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2020:2172  function max(... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1841:2016  function resize(... */\n    tag_207:\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1954:1961  buf.buf */\n      dup2\n      mload\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1967:1986  init(buf, capacity) */\n      tag_235\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1954:1957  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1977:1985  capacity */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1967:1971  init */\n      tag_128\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1967:1986  init(buf, capacity) */\n      jump\t// in\n    tag_235:\n      pop\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1992:2011  append(buf, oldbuf) */\n      tag_165\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1999:2002  buf */\n      dup4\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":2004:2010  oldbuf */\n      dup3\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1992:1998  append */\n      tag_133\n        /* \"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":1992:2011  append(buf, oldbuf) */\n      jump\t// in\n    tag_86:\n      dup3\n      dup1\n      sload\n      tag_237\n      swap1\n      tag_77\n      jump\t// in\n    tag_237:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_239\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_242)\n    tag_239:\n      dup3\n      0x1f\n      lt\n      tag_240\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_242)\n    tag_240:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_242\n      jumpi\n      swap2\n      dup3\n      add\n    tag_241:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_241)\n    tag_242:\n      pop\n      tag_243\n      swap3\n      swap2\n      pop\n      tag_244\n      jump\t// in\n    tag_243:\n      pop\n      swap1\n      jump\t// out\n    tag_112:\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      dup3\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup1\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      swap1\n      swap6\n      mstore\n      dup5\n      mstore\n      dup4\n      add\n      mstore\n      swap1\n      0x80\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_244:\n    tag_246:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_246)\n        /* \"#utility.yul\":14:187   */\n    tag_249:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_251:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:931   */\n    tag_252:\n        /* \"#utility.yul\":235:240   */\n      0x00\n        /* \"#utility.yul\":288:291   */\n      dup3\n        /* \"#utility.yul\":281:285   */\n      0x1f\n        /* \"#utility.yul\":273:279   */\n      dup4\n        /* \"#utility.yul\":269:286   */\n      add\n        /* \"#utility.yul\":265:292   */\n      slt\n        /* \"#utility.yul\":255:257   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":310:315   */\n      dup1\n        /* \"#utility.yul\":303:308   */\n      dup2\n        /* \"#utility.yul\":296:316   */\n      revert\n        /* \"#utility.yul\":255:257   */\n    tag_254:\n        /* \"#utility.yul\":350:356   */\n      dup2\n        /* \"#utility.yul\":337:357   */\n      calldataload\n        /* \"#utility.yul\":376:394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":413:415   */\n      dup1\n        /* \"#utility.yul\":409:411   */\n      dup3\n        /* \"#utility.yul\":406:416   */\n      gt\n        /* \"#utility.yul\":403:405   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":419:437   */\n      tag_256\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":494:496   */\n      0x40\n        /* \"#utility.yul\":488:497   */\n      mload\n        /* \"#utility.yul\":462:464   */\n      0x1f\n        /* \"#utility.yul\":548:561   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":544:566   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":568:570   */\n      0x3f\n        /* \"#utility.yul\":540:571   */\n      add\n        /* \"#utility.yul\":536:576   */\n      and\n        /* \"#utility.yul\":524:577   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":592:610   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":612:634   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":589:635   */\n      or\n        /* \"#utility.yul\":586:588   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":638:656   */\n      tag_259\n      tag_257\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":678:688   */\n      dup2\n        /* \"#utility.yul\":674:676   */\n      0x40\n        /* \"#utility.yul\":667:689   */\n      mstore\n        /* \"#utility.yul\":713:715   */\n      dup4\n        /* \"#utility.yul\":705:711   */\n      dup2\n        /* \"#utility.yul\":698:716   */\n      mstore\n        /* \"#utility.yul\":759:762   */\n      dup7\n        /* \"#utility.yul\":752:756   */\n      0x20\n        /* \"#utility.yul\":747:749   */\n      dup6\n        /* \"#utility.yul\":739:745   */\n      dup9\n        /* \"#utility.yul\":735:750   */\n      add\n        /* \"#utility.yul\":731:757   */\n      add\n        /* \"#utility.yul\":728:763   */\n      gt\n        /* \"#utility.yul\":725:727   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":780:785   */\n      dup5\n        /* \"#utility.yul\":773:778   */\n      dup6\n        /* \"#utility.yul\":766:786   */\n      revert\n        /* \"#utility.yul\":725:727   */\n    tag_260:\n        /* \"#utility.yul\":848:850   */\n      dup4\n        /* \"#utility.yul\":841:845   */\n      0x20\n        /* \"#utility.yul\":833:839   */\n      dup8\n        /* \"#utility.yul\":829:846   */\n      add\n        /* \"#utility.yul\":822:826   */\n      0x20\n        /* \"#utility.yul\":814:820   */\n      dup4\n        /* \"#utility.yul\":810:827   */\n      add\n        /* \"#utility.yul\":797:851   */\n      calldatacopy\n        /* \"#utility.yul\":871:886   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":888:892   */\n      0x20\n        /* \"#utility.yul\":867:893   */\n      add\n        /* \"#utility.yul\":860:901   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":875:881   */\n      swap4\n        /* \"#utility.yul\":245:931   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":936:1420   */\n    tag_41:\n        /* \"#utility.yul\":1023:1029   */\n      0x00\n        /* \"#utility.yul\":1031:1037   */\n      dup1\n        /* \"#utility.yul\":1039:1045   */\n      0x00\n        /* \"#utility.yul\":1092:1094   */\n      0x60\n        /* \"#utility.yul\":1080:1089   */\n      dup5\n        /* \"#utility.yul\":1071:1078   */\n      dup7\n        /* \"#utility.yul\":1067:1090   */\n      sub\n        /* \"#utility.yul\":1063:1095   */\n      slt\n        /* \"#utility.yul\":1060:1062   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":1113:1119   */\n      dup3\n        /* \"#utility.yul\":1105:1111   */\n      dup4\n        /* \"#utility.yul\":1098:1120   */\n      revert\n        /* \"#utility.yul\":1060:1062   */\n    tag_262:\n        /* \"#utility.yul\":1141:1170   */\n      tag_263\n        /* \"#utility.yul\":1160:1169   */\n      dup5\n        /* \"#utility.yul\":1141:1170   */\n      tag_249\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1131:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1217:1219   */\n      0x20\n        /* \"#utility.yul\":1206:1215   */\n      dup5\n        /* \"#utility.yul\":1202:1220   */\n      add\n        /* \"#utility.yul\":1189:1221   */\n      calldataload\n        /* \"#utility.yul\":1179:1221   */\n      swap2\n      pop\n        /* \"#utility.yul\":1272:1274   */\n      0x40\n        /* \"#utility.yul\":1261:1270   */\n      dup5\n        /* \"#utility.yul\":1257:1275   */\n      add\n        /* \"#utility.yul\":1244:1276   */\n      calldataload\n        /* \"#utility.yul\":1299:1317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1291:1297   */\n      dup2\n        /* \"#utility.yul\":1288:1318   */\n      gt\n        /* \"#utility.yul\":1285:1287   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":1336:1342   */\n      dup2\n        /* \"#utility.yul\":1328:1334   */\n      dup3\n        /* \"#utility.yul\":1321:1343   */\n      revert\n        /* \"#utility.yul\":1285:1287   */\n    tag_264:\n        /* \"#utility.yul\":1364:1414   */\n      tag_265\n        /* \"#utility.yul\":1406:1413   */\n      dup7\n        /* \"#utility.yul\":1397:1403   */\n      dup3\n        /* \"#utility.yul\":1386:1395   */\n      dup8\n        /* \"#utility.yul\":1382:1404   */\n      add\n        /* \"#utility.yul\":1364:1414   */\n      tag_252\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1354:1414   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1050:1420   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1425:1895   */\n    tag_25:\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1528:1534   */\n      dup1\n        /* \"#utility.yul\":1536:1542   */\n      0x00\n        /* \"#utility.yul\":1544:1550   */\n      dup1\n        /* \"#utility.yul\":1552:1558   */\n      0x00\n        /* \"#utility.yul\":1605:1608   */\n      0xa0\n        /* \"#utility.yul\":1593:1602   */\n      dup7\n        /* \"#utility.yul\":1584:1591   */\n      dup9\n        /* \"#utility.yul\":1580:1603   */\n      sub\n        /* \"#utility.yul\":1576:1609   */\n      slt\n        /* \"#utility.yul\":1573:1575   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1627:1633   */\n      dup1\n        /* \"#utility.yul\":1619:1625   */\n      dup2\n        /* \"#utility.yul\":1612:1634   */\n      revert\n        /* \"#utility.yul\":1573:1575   */\n    tag_267:\n        /* \"#utility.yul\":1655:1684   */\n      tag_268\n        /* \"#utility.yul\":1674:1683   */\n      dup7\n        /* \"#utility.yul\":1655:1684   */\n      tag_249\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1645:1684   */\n      swap8\n        /* \"#utility.yul\":1731:1733   */\n      0x20\n        /* \"#utility.yul\":1716:1734   */\n      dup8\n      add\n        /* \"#utility.yul\":1703:1735   */\n      calldataload\n      swap8\n      pop\n        /* \"#utility.yul\":1782:1784   */\n      0x40\n        /* \"#utility.yul\":1767:1785   */\n      dup8\n      add\n        /* \"#utility.yul\":1754:1786   */\n      calldataload\n      swap7\n        /* \"#utility.yul\":1833:1835   */\n      0x60\n        /* \"#utility.yul\":1818:1836   */\n      dup2\n      add\n        /* \"#utility.yul\":1805:1837   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":1884:1887   */\n      0x80\n        /* \"#utility.yul\":1869:1888   */\n      add\n        /* \"#utility.yul\":1856:1889   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1563:1895   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1900:2197   */\n    tag_147:\n        /* \"#utility.yul\":1967:1973   */\n      0x00\n        /* \"#utility.yul\":2020:2022   */\n      0x20\n        /* \"#utility.yul\":2008:2017   */\n      dup3\n        /* \"#utility.yul\":1999:2006   */\n      dup5\n        /* \"#utility.yul\":1995:2018   */\n      sub\n        /* \"#utility.yul\":1991:2023   */\n      slt\n        /* \"#utility.yul\":1988:1990   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2033:2039   */\n      dup2\n        /* \"#utility.yul\":2026:2048   */\n      revert\n        /* \"#utility.yul\":1988:1990   */\n    tag_270:\n        /* \"#utility.yul\":2078:2087   */\n      dup2\n        /* \"#utility.yul\":2072:2088   */\n      mload\n        /* \"#utility.yul\":2131:2136   */\n      dup1\n        /* \"#utility.yul\":2124:2137   */\n      iszero\n        /* \"#utility.yul\":2117:2138   */\n      iszero\n        /* \"#utility.yul\":2110:2115   */\n      dup2\n        /* \"#utility.yul\":2107:2139   */\n      eq\n        /* \"#utility.yul\":2097:2099   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2158:2164   */\n      dup2\n        /* \"#utility.yul\":2150:2156   */\n      dup3\n        /* \"#utility.yul\":2143:2165   */\n      revert\n        /* \"#utility.yul\":2202:2392   */\n    tag_54:\n        /* \"#utility.yul\":2261:2267   */\n      0x00\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2302:2311   */\n      dup3\n        /* \"#utility.yul\":2293:2300   */\n      dup5\n        /* \"#utility.yul\":2289:2312   */\n      sub\n        /* \"#utility.yul\":2285:2317   */\n      slt\n        /* \"#utility.yul\":2282:2284   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2335:2341   */\n      dup1\n        /* \"#utility.yul\":2327:2333   */\n      dup2\n        /* \"#utility.yul\":2320:2342   */\n      revert\n        /* \"#utility.yul\":2282:2284   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":2363:2386   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2272:2392   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2397:2758   */\n    tag_15:\n        /* \"#utility.yul\":2482:2488   */\n      0x00\n        /* \"#utility.yul\":2490:2496   */\n      dup1\n        /* \"#utility.yul\":2543:2545   */\n      0x40\n        /* \"#utility.yul\":2531:2540   */\n      dup4\n        /* \"#utility.yul\":2522:2529   */\n      dup6\n        /* \"#utility.yul\":2518:2541   */\n      sub\n        /* \"#utility.yul\":2514:2546   */\n      slt\n        /* \"#utility.yul\":2511:2513   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2564:2570   */\n      dup2\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2549:2571   */\n      revert\n        /* \"#utility.yul\":2511:2513   */\n    tag_275:\n        /* \"#utility.yul\":2605:2614   */\n      dup3\n        /* \"#utility.yul\":2592:2615   */\n      calldataload\n        /* \"#utility.yul\":2582:2615   */\n      swap2\n      pop\n        /* \"#utility.yul\":2665:2667   */\n      0x20\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2650:2668   */\n      add\n        /* \"#utility.yul\":2637:2669   */\n      calldataload\n        /* \"#utility.yul\":2698:2699   */\n      0x06\n        /* \"#utility.yul\":2691:2696   */\n      dup2\n        /* \"#utility.yul\":2688:2700   */\n      lt\n        /* \"#utility.yul\":2678:2680   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2719:2725   */\n      dup2\n        /* \"#utility.yul\":2711:2717   */\n      dup3\n        /* \"#utility.yul\":2704:2726   */\n      revert\n        /* \"#utility.yul\":2678:2680   */\n    tag_276:\n        /* \"#utility.yul\":2747:2752   */\n      dup1\n        /* \"#utility.yul\":2737:2752   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2501:2758   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2763:3027   */\n    tag_19:\n        /* \"#utility.yul\":2831:2837   */\n      0x00\n        /* \"#utility.yul\":2839:2845   */\n      dup1\n        /* \"#utility.yul\":2892:2894   */\n      0x40\n        /* \"#utility.yul\":2880:2889   */\n      dup4\n        /* \"#utility.yul\":2871:2878   */\n      dup6\n        /* \"#utility.yul\":2867:2890   */\n      sub\n        /* \"#utility.yul\":2863:2895   */\n      slt\n        /* \"#utility.yul\":2860:2862   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2913:2919   */\n      dup2\n        /* \"#utility.yul\":2905:2911   */\n      dup3\n        /* \"#utility.yul\":2898:2920   */\n      revert\n        /* \"#utility.yul\":2860:2862   */\n    tag_278:\n        /* \"#utility.yul\":2954:2963   */\n      dup3\n        /* \"#utility.yul\":2941:2964   */\n      calldataload\n        /* \"#utility.yul\":2931:2964   */\n      swap2\n      pop\n        /* \"#utility.yul\":2983:3021   */\n      tag_279\n        /* \"#utility.yul\":3017:3019   */\n      0x20\n        /* \"#utility.yul\":3006:3015   */\n      dup5\n        /* \"#utility.yul\":3002:3020   */\n      add\n        /* \"#utility.yul\":2983:3021   */\n      tag_249\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2973:3021   */\n      swap1\n      pop\n        /* \"#utility.yul\":2850:3027   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3032:3516   */\n    tag_50:\n        /* \"#utility.yul\":3119:3125   */\n      0x00\n        /* \"#utility.yul\":3127:3133   */\n      dup1\n        /* \"#utility.yul\":3135:3141   */\n      0x00\n        /* \"#utility.yul\":3188:3190   */\n      0x60\n        /* \"#utility.yul\":3176:3185   */\n      dup5\n        /* \"#utility.yul\":3167:3174   */\n      dup7\n        /* \"#utility.yul\":3163:3186   */\n      sub\n        /* \"#utility.yul\":3159:3191   */\n      slt\n        /* \"#utility.yul\":3156:3158   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3209:3215   */\n      dup3\n        /* \"#utility.yul\":3201:3207   */\n      dup4\n        /* \"#utility.yul\":3194:3216   */\n      revert\n        /* \"#utility.yul\":3156:3158   */\n    tag_281:\n        /* \"#utility.yul\":3250:3259   */\n      dup4\n        /* \"#utility.yul\":3237:3260   */\n      calldataload\n        /* \"#utility.yul\":3227:3260   */\n      swap3\n      pop\n        /* \"#utility.yul\":3279:3317   */\n      tag_282\n        /* \"#utility.yul\":3313:3315   */\n      0x20\n        /* \"#utility.yul\":3302:3311   */\n      dup6\n        /* \"#utility.yul\":3298:3316   */\n      add\n        /* \"#utility.yul\":3279:3317   */\n      tag_249\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3269:3317   */\n      swap2\n      pop\n        /* \"#utility.yul\":3368:3370   */\n      0x40\n        /* \"#utility.yul\":3357:3366   */\n      dup5\n        /* \"#utility.yul\":3353:3371   */\n      add\n        /* \"#utility.yul\":3340:3372   */\n      calldataload\n        /* \"#utility.yul\":3395:3413   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3387:3393   */\n      dup2\n        /* \"#utility.yul\":3384:3414   */\n      gt\n        /* \"#utility.yul\":3381:3383   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3432:3438   */\n      dup2\n        /* \"#utility.yul\":3424:3430   */\n      dup3\n        /* \"#utility.yul\":3417:3439   */\n      revert\n        /* \"#utility.yul\":3521:3996   */\n    tag_285:\n        /* \"#utility.yul\":3562:3565   */\n      0x00\n        /* \"#utility.yul\":3600:3605   */\n      dup2\n        /* \"#utility.yul\":3594:3606   */\n      mload\n        /* \"#utility.yul\":3627:3633   */\n      dup1\n        /* \"#utility.yul\":3622:3625   */\n      dup5\n        /* \"#utility.yul\":3615:3634   */\n      mstore\n        /* \"#utility.yul\":3652:3655   */\n      dup2\n        /* \"#utility.yul\":3664:3826   */\n    tag_287:\n        /* \"#utility.yul\":3678:3684   */\n      dup2\n        /* \"#utility.yul\":3675:3676   */\n      dup2\n        /* \"#utility.yul\":3672:3685   */\n      lt\n        /* \"#utility.yul\":3664:3826   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3796:3809   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3792:3814   */\n      dup2\n      add\n        /* \"#utility.yul\":3786:3815   */\n      mload\n        /* \"#utility.yul\":3768:3779   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3764:3784   */\n      dup3\n      add\n        /* \"#utility.yul\":3757:3816   */\n      mstore\n        /* \"#utility.yul\":3693:3705   */\n      add\n        /* \"#utility.yul\":3664:3826   */\n      jump(tag_287)\n    tag_289:\n        /* \"#utility.yul\":3844:3850   */\n      dup2\n        /* \"#utility.yul\":3841:3842   */\n      dup2\n        /* \"#utility.yul\":3838:3851   */\n      gt\n        /* \"#utility.yul\":3835:3837   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3910:3913   */\n      dup3\n        /* \"#utility.yul\":3903:3907   */\n      0x20\n        /* \"#utility.yul\":3894:3900   */\n      dup4\n        /* \"#utility.yul\":3889:3892   */\n      dup8\n        /* \"#utility.yul\":3885:3901   */\n      add\n        /* \"#utility.yul\":3881:3908   */\n      add\n        /* \"#utility.yul\":3874:3914   */\n      mstore\n        /* \"#utility.yul\":3835:3837   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":3978:3980   */\n      0x1f\n        /* \"#utility.yul\":3957:3972   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3953:3982   */\n      and\n        /* \"#utility.yul\":3944:3983   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3985:3989   */\n      0x20\n        /* \"#utility.yul\":3940:3990   */\n      add\n      swap3\n        /* \"#utility.yul\":3570:3996   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:5349   */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4929:4944   */\n      dup10\n      dup2\n      and\n        /* \"#utility.yul\":4911:4945   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4976:4978   */\n      0x20\n        /* \"#utility.yul\":4961:4979   */\n      dup3\n      add\n        /* \"#utility.yul\":4954:4988   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":5019:5021   */\n      0x40\n        /* \"#utility.yul\":5004:5022   */\n      dup3\n      add\n        /* \"#utility.yul\":4997:5031   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":5067:5082   */\n      dup7\n      and\n        /* \"#utility.yul\":5062:5064   */\n      0x60\n        /* \"#utility.yul\":5047:5065   */\n      dup3\n      add\n        /* \"#utility.yul\":5040:5083   */\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":5120:5153   */\n      dup6\n      and\n        /* \"#utility.yul\":5114:5117   */\n      0x80\n        /* \"#utility.yul\":5099:5118   */\n      dup3\n      add\n        /* \"#utility.yul\":5092:5154   */\n      mstore\n        /* \"#utility.yul\":4891:4894   */\n      0xa0\n        /* \"#utility.yul\":5170:5189   */\n      dup2\n      add\n        /* \"#utility.yul\":5163:5198   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5229:5232   */\n      0xc0\n        /* \"#utility.yul\":5214:5233   */\n      dup2\n      add\n        /* \"#utility.yul\":5207:5242   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4861:4864   */\n      0x0100\n        /* \"#utility.yul\":5136:5139   */\n      0xe0\n        /* \"#utility.yul\":5258:5277   */\n      dup3\n      add\n        /* \"#utility.yul\":5251:5282   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4832:4836   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5299:5343   */\n      tag_294\n        /* \"#utility.yul\":5324:5342   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5316:5322   */\n      dup6\n        /* \"#utility.yul\":5299:5343   */\n      tag_285\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5291:5343   */\n      swap12\n        /* \"#utility.yul\":4841:5349   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5354:5739   */\n    tag_142:\n        /* \"#utility.yul\":5586:5587   */\n      0x01\n        /* \"#utility.yul\":5582:5583   */\n      dup1\n        /* \"#utility.yul\":5577:5580   */\n      0xa0\n        /* \"#utility.yul\":5573:5584   */\n      shl\n        /* \"#utility.yul\":5569:5588   */\n      sub\n        /* \"#utility.yul\":5561:5567   */\n      dup5\n        /* \"#utility.yul\":5557:5589   */\n      and\n        /* \"#utility.yul\":5546:5555   */\n      dup2\n        /* \"#utility.yul\":5539:5590   */\n      mstore\n        /* \"#utility.yul\":5626:5632   */\n      dup3\n        /* \"#utility.yul\":5621:5623   */\n      0x20\n        /* \"#utility.yul\":5610:5619   */\n      dup3\n        /* \"#utility.yul\":5606:5624   */\n      add\n        /* \"#utility.yul\":5599:5633   */\n      mstore\n        /* \"#utility.yul\":5669:5671   */\n      0x60\n        /* \"#utility.yul\":5664:5666   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup3\n        /* \"#utility.yul\":5649:5667   */\n      add\n        /* \"#utility.yul\":5642:5672   */\n      mstore\n        /* \"#utility.yul\":5520:5524   */\n      0x00\n        /* \"#utility.yul\":5689:5733   */\n      tag_115\n        /* \"#utility.yul\":5729:5731   */\n      0x60\n        /* \"#utility.yul\":5718:5727   */\n      dup4\n        /* \"#utility.yul\":5714:5732   */\n      add\n        /* \"#utility.yul\":5706:5712   */\n      dup5\n        /* \"#utility.yul\":5689:5733   */\n      tag_285\n      jump\t// in\n        /* \"#utility.yul\":7626:8581   */\n    tag_38:\n        /* \"#utility.yul\":8006:8031   */\n      dup10\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8067:8099   */\n      dup10\n      and\n        /* \"#utility.yul\":8062:8064   */\n      0x20\n        /* \"#utility.yul\":8047:8065   */\n      dup3\n      add\n        /* \"#utility.yul\":8040:8100   */\n      mstore\n        /* \"#utility.yul\":8131:8133   */\n      0x40\n        /* \"#utility.yul\":8116:8134   */\n      dup2\n      add\n        /* \"#utility.yul\":8109:8143   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":8174:8176   */\n      0x60\n        /* \"#utility.yul\":8159:8177   */\n      dup2\n      add\n        /* \"#utility.yul\":8152:8186   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":8217:8220   */\n      0x80\n        /* \"#utility.yul\":8202:8221   */\n      dup2\n      add\n        /* \"#utility.yul\":8195:8230   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":8087:8090   */\n      0xa0\n        /* \"#utility.yul\":8246:8265   */\n      dup2\n      add\n        /* \"#utility.yul\":8239:8274   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":7993:7996   */\n      0x0120\n        /* \"#utility.yul\":7978:7997   */\n      dup2\n      add\n        /* \"#utility.yul\":8304:8305   */\n      0x06\n        /* \"#utility.yul\":8293:8306   */\n      dup6\n      lt\n        /* \"#utility.yul\":8283:8285   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":8349:8359   */\n      0x4e487b71\n        /* \"#utility.yul\":8344:8347   */\n      0xe0\n        /* \"#utility.yul\":8340:8360   */\n      shl\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8330:8361   */\n      mstore\n        /* \"#utility.yul\":8384:8388   */\n      0x21\n        /* \"#utility.yul\":8381:8382   */\n      0x04\n        /* \"#utility.yul\":8374:8389   */\n      mstore\n        /* \"#utility.yul\":8412:8416   */\n      0x24\n        /* \"#utility.yul\":8409:8410   */\n      0x00\n        /* \"#utility.yul\":8402:8417   */\n      revert\n        /* \"#utility.yul\":8283:8285   */\n    tag_304:\n        /* \"#utility.yul\":8464:8470   */\n      dup5\n        /* \"#utility.yul\":8458:8461   */\n      0xc0\n        /* \"#utility.yul\":8447:8456   */\n      dup4\n        /* \"#utility.yul\":8443:8462   */\n      add\n        /* \"#utility.yul\":8436:8471   */\n      mstore\n        /* \"#utility.yul\":8508:8514   */\n      dup4\n        /* \"#utility.yul\":8502:8505   */\n      0xe0\n        /* \"#utility.yul\":8491:8500   */\n      dup4\n        /* \"#utility.yul\":8487:8506   */\n      add\n        /* \"#utility.yul\":8480:8515   */\n      mstore\n        /* \"#utility.yul\":8566:8572   */\n      dup3\n        /* \"#utility.yul\":8559:8573   */\n      iszero\n        /* \"#utility.yul\":8552:8574   */\n      iszero\n        /* \"#utility.yul\":8546:8549   */\n      0x0100\n        /* \"#utility.yul\":8535:8544   */\n      dup4\n        /* \"#utility.yul\":8531:8550   */\n      add\n        /* \"#utility.yul\":8524:8575   */\n      mstore\n        /* \"#utility.yul\":7960:8581   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8586:9220   */\n    tag_33:\n        /* \"#utility.yul\":8875:8881   */\n      dup7\n        /* \"#utility.yul\":8864:8873   */\n      dup2\n        /* \"#utility.yul\":8857:8882   */\n      mstore\n        /* \"#utility.yul\":8918:8924   */\n      dup6\n        /* \"#utility.yul\":8913:8915   */\n      0x20\n        /* \"#utility.yul\":8902:8911   */\n      dup3\n        /* \"#utility.yul\":8898:8916   */\n      add\n        /* \"#utility.yul\":8891:8925   */\n      mstore\n        /* \"#utility.yul\":8961:8964   */\n      0xc0\n        /* \"#utility.yul\":8956:8958   */\n      0x40\n        /* \"#utility.yul\":8945:8954   */\n      dup3\n        /* \"#utility.yul\":8941:8959   */\n      add\n        /* \"#utility.yul\":8934:8965   */\n      mstore\n        /* \"#utility.yul\":8838:8842   */\n      0x00\n        /* \"#utility.yul\":8982:9027   */\n      tag_306\n        /* \"#utility.yul\":9022:9025   */\n      0xc0\n        /* \"#utility.yul\":9011:9020   */\n      dup4\n        /* \"#utility.yul\":9007:9026   */\n      add\n        /* \"#utility.yul\":8999:9005   */\n      dup8\n        /* \"#utility.yul\":8982:9027   */\n      tag_285\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9101:9116   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":9096:9098   */\n      0x60\n        /* \"#utility.yul\":9081:9099   */\n      dup5\n      add\n        /* \"#utility.yul\":9074:9117   */\n      mstore\n        /* \"#utility.yul\":9148:9151   */\n      0x80\n        /* \"#utility.yul\":9133:9152   */\n      dup4\n      add\n        /* \"#utility.yul\":9126:9161   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":9198:9213   */\n      swap3\n      and\n        /* \"#utility.yul\":9054:9057   */\n      0xa0\n        /* \"#utility.yul\":9177:9196   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":9170:9214   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9126:9161   */\n      swap4\n        /* \"#utility.yul\":8974:9027   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8847:9220   */\n      jump\t// out\n        /* \"#utility.yul\":10606:10734   */\n    tag_152:\n        /* \"#utility.yul\":10646:10649   */\n      0x00\n        /* \"#utility.yul\":10677:10678   */\n      dup3\n        /* \"#utility.yul\":10673:10679   */\n      not\n        /* \"#utility.yul\":10670:10671   */\n      dup3\n        /* \"#utility.yul\":10667:10680   */\n      gt\n        /* \"#utility.yul\":10664:10666   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":10683:10701   */\n      tag_311\n      tag_312\n      jump\t// in\n    tag_311:\n      pop\n        /* \"#utility.yul\":10719:10728   */\n      add\n      swap1\n        /* \"#utility.yul\":10654:10734   */\n      jump\t// out\n        /* \"#utility.yul\":10739:11161   */\n    tag_313:\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10871:10876   */\n      dup2\n        /* \"#utility.yul\":10828:10829   */\n      dup2\n        /* \"#utility.yul\":10885:11155   */\n    tag_315:\n        /* \"#utility.yul\":10906:10913   */\n      dup1\n        /* \"#utility.yul\":10896:10904   */\n      dup6\n        /* \"#utility.yul\":10893:10914   */\n      gt\n        /* \"#utility.yul\":10885:11155   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":10965:10969   */\n      dup2\n        /* \"#utility.yul\":10961:10962   */\n      0x00\n        /* \"#utility.yul\":10957:10963   */\n      not\n        /* \"#utility.yul\":10953:10970   */\n      div\n        /* \"#utility.yul\":10947:10951   */\n      dup3\n        /* \"#utility.yul\":10944:10971   */\n      gt\n        /* \"#utility.yul\":10941:10943   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":10974:10992   */\n      tag_319\n      tag_312\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11024:11031   */\n      dup1\n        /* \"#utility.yul\":11014:11022   */\n      dup6\n        /* \"#utility.yul\":11010:11032   */\n      and\n        /* \"#utility.yul\":11007:11009   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":11044:11060   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":11007:11009   */\n    tag_320:\n        /* \"#utility.yul\":11123:11145   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":11083:11098   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":10885:11155   */\n      jump(tag_315)\n    tag_317:\n        /* \"#utility.yul\":10889:10892   */\n      pop\n        /* \"#utility.yul\":10803:11161   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11166:11297   */\n    tag_229:\n        /* \"#utility.yul\":11226:11231   */\n      0x00\n        /* \"#utility.yul\":11255:11291   */\n      tag_186\n        /* \"#utility.yul\":11282:11290   */\n      dup4\n        /* \"#utility.yul\":11276:11280   */\n      dup4\n        /* \"#utility.yul\":11351:11356   */\n      0x00\n        /* \"#utility.yul\":11381:11389   */\n      dup3\n        /* \"#utility.yul\":11371:11373   */\n      tag_325\n      jumpi\n      pop\n        /* \"#utility.yul\":11422:11423   */\n      0x01\n        /* \"#utility.yul\":11436:11441   */\n      jump(tag_155)\n        /* \"#utility.yul\":11371:11373   */\n    tag_325:\n        /* \"#utility.yul\":11470:11474   */\n      dup2\n        /* \"#utility.yul\":11460:11462   */\n      tag_326\n      jumpi\n      pop\n        /* \"#utility.yul\":11507:11508   */\n      0x00\n        /* \"#utility.yul\":11521:11526   */\n      jump(tag_155)\n        /* \"#utility.yul\":11460:11462   */\n    tag_326:\n        /* \"#utility.yul\":11552:11556   */\n      dup2\n        /* \"#utility.yul\":11570:11571   */\n      0x01\n        /* \"#utility.yul\":11565:11624   */\n      dup2\n      eq\n      tag_328\n      jumpi\n        /* \"#utility.yul\":11638:11639   */\n      0x02\n        /* \"#utility.yul\":11633:11763   */\n      dup2\n      eq\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11545:11763   */\n      jump(tag_327)\n        /* \"#utility.yul\":11565:11624   */\n    tag_328:\n        /* \"#utility.yul\":11595:11596   */\n      0x01\n        /* \"#utility.yul\":11586:11596   */\n      swap2\n      pop\n        /* \"#utility.yul\":11609:11614   */\n      pop\n      jump(tag_155)\n        /* \"#utility.yul\":11633:11763   */\n    tag_329:\n        /* \"#utility.yul\":11670:11673   */\n      0xff\n        /* \"#utility.yul\":11660:11668   */\n      dup5\n        /* \"#utility.yul\":11657:11674   */\n      gt\n        /* \"#utility.yul\":11654:11656   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11677:11695   */\n      tag_331\n      tag_312\n      jump\t// in\n    tag_331:\n      pop\n      pop\n        /* \"#utility.yul\":11733:11734   */\n      0x01\n        /* \"#utility.yul\":11719:11735   */\n      dup3\n      shl\n        /* \"#utility.yul\":11748:11753   */\n      jump(tag_155)\n        /* \"#utility.yul\":11545:11763   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":11847:11849   */\n      0x20\n        /* \"#utility.yul\":11837:11845   */\n      dup4\n        /* \"#utility.yul\":11834:11850   */\n      lt\n        /* \"#utility.yul\":11828:11831   */\n      0x0133\n        /* \"#utility.yul\":11822:11826   */\n      dup4\n        /* \"#utility.yul\":11819:11832   */\n      lt\n        /* \"#utility.yul\":11815:11851   */\n      and\n        /* \"#utility.yul\":11809:11811   */\n      0x4e\n        /* \"#utility.yul\":11799:11807   */\n      dup5\n        /* \"#utility.yul\":11796:11812   */\n      lt\n        /* \"#utility.yul\":11791:11793   */\n      0x0b\n        /* \"#utility.yul\":11785:11789   */\n      dup5\n        /* \"#utility.yul\":11782:11794   */\n      lt\n        /* \"#utility.yul\":11778:11813   */\n      and\n        /* \"#utility.yul\":11775:11852   */\n      or\n        /* \"#utility.yul\":11772:11774   */\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"#utility.yul\":11884:11903   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":11916:11921   */\n      jump(tag_155)\n        /* \"#utility.yul\":11772:11774   */\n    tag_332:\n        /* \"#utility.yul\":11963:11997   */\n      tag_333\n        /* \"#utility.yul\":11988:11996   */\n      dup4\n        /* \"#utility.yul\":11982:11986   */\n      dup4\n        /* \"#utility.yul\":11963:11997   */\n      tag_313\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12033:12039   */\n      dup1\n        /* \"#utility.yul\":12029:12030   */\n      0x00\n        /* \"#utility.yul\":12025:12031   */\n      not\n        /* \"#utility.yul\":12021:12040   */\n      div\n        /* \"#utility.yul\":12012:12019   */\n      dup3\n        /* \"#utility.yul\":12009:12041   */\n      gt\n        /* \"#utility.yul\":12006:12008   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":12044:12062   */\n      tag_335\n      tag_312\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12082:12102   */\n      mul\n      swap4\n        /* \"#utility.yul\":11361:12108   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12113:12281   */\n    tag_206:\n        /* \"#utility.yul\":12153:12160   */\n      0x00\n        /* \"#utility.yul\":12219:12220   */\n      dup2\n        /* \"#utility.yul\":12215:12216   */\n      0x00\n        /* \"#utility.yul\":12211:12217   */\n      not\n        /* \"#utility.yul\":12207:12221   */\n      div\n        /* \"#utility.yul\":12204:12205   */\n      dup4\n        /* \"#utility.yul\":12201:12222   */\n      gt\n        /* \"#utility.yul\":12196:12197   */\n      dup3\n        /* \"#utility.yul\":12189:12198   */\n      iszero\n        /* \"#utility.yul\":12182:12199   */\n      iszero\n        /* \"#utility.yul\":12178:12223   */\n      and\n        /* \"#utility.yul\":12175:12177   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":12226:12244   */\n      tag_338\n      tag_312\n      jump\t// in\n    tag_338:\n      pop\n        /* \"#utility.yul\":12266:12275   */\n      mul\n      swap1\n        /* \"#utility.yul\":12165:12281   */\n      jump\t// out\n        /* \"#utility.yul\":12286:12411   */\n    tag_161:\n        /* \"#utility.yul\":12326:12330   */\n      0x00\n        /* \"#utility.yul\":12354:12355   */\n      dup3\n        /* \"#utility.yul\":12351:12352   */\n      dup3\n        /* \"#utility.yul\":12348:12356   */\n      lt\n        /* \"#utility.yul\":12345:12347   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":12359:12377   */\n      tag_341\n      tag_312\n      jump\t// in\n    tag_341:\n      pop\n        /* \"#utility.yul\":12396:12405   */\n      sub\n      swap1\n        /* \"#utility.yul\":12335:12411   */\n      jump\t// out\n        /* \"#utility.yul\":12416:12796   */\n    tag_77:\n        /* \"#utility.yul\":12495:12496   */\n      0x01\n        /* \"#utility.yul\":12491:12503   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12538:12550   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12559:12561   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":12613:12617   */\n      0x7f\n        /* \"#utility.yul\":12605:12611   */\n      dup3\n        /* \"#utility.yul\":12601:12618   */\n      and\n        /* \"#utility.yul\":12591:12618   */\n      swap2\n      pop\n        /* \"#utility.yul\":12559:12561   */\n    tag_343:\n        /* \"#utility.yul\":12666:12668   */\n      0x20\n        /* \"#utility.yul\":12658:12664   */\n      dup3\n        /* \"#utility.yul\":12655:12669   */\n      lt\n        /* \"#utility.yul\":12635:12653   */\n      dup2\n        /* \"#utility.yul\":12632:12670   */\n      eq\n        /* \"#utility.yul\":12629:12631   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":12712:12722   */\n      0x4e487b71\n        /* \"#utility.yul\":12707:12710   */\n      0xe0\n        /* \"#utility.yul\":12703:12723   */\n      shl\n        /* \"#utility.yul\":12700:12701   */\n      0x00\n        /* \"#utility.yul\":12693:12724   */\n      mstore\n        /* \"#utility.yul\":12747:12751   */\n      0x22\n        /* \"#utility.yul\":12744:12745   */\n      0x04\n        /* \"#utility.yul\":12737:12752   */\n      mstore\n        /* \"#utility.yul\":12775:12779   */\n      0x24\n        /* \"#utility.yul\":12772:12773   */\n      0x00\n        /* \"#utility.yul\":12765:12780   */\n      revert\n        /* \"#utility.yul\":12801:13010   */\n    tag_157:\n        /* \"#utility.yul\":12833:12834   */\n      0x00\n        /* \"#utility.yul\":12859:12860   */\n      dup3\n        /* \"#utility.yul\":12849:12851   */\n      tag_346\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":12884:12915   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12938:12942   */\n      0x12\n        /* \"#utility.yul\":12935:12936   */\n      0x04\n        /* \"#utility.yul\":12928:12943   */\n      mstore\n        /* \"#utility.yul\":12966:12970   */\n      0x24\n        /* \"#utility.yul\":12891:12892   */\n      dup2\n        /* \"#utility.yul\":12956:12971   */\n      revert\n        /* \"#utility.yul\":12849:12851   */\n    tag_346:\n      pop\n        /* \"#utility.yul\":12995:13004   */\n      mod\n      swap1\n        /* \"#utility.yul\":12839:13010   */\n      jump\t// out\n        /* \"#utility.yul\":13015:13142   */\n    tag_312:\n        /* \"#utility.yul\":13076:13086   */\n      0x4e487b71\n        /* \"#utility.yul\":13071:13074   */\n      0xe0\n        /* \"#utility.yul\":13067:13087   */\n      shl\n        /* \"#utility.yul\":13064:13065   */\n      0x00\n        /* \"#utility.yul\":13057:13088   */\n      mstore\n        /* \"#utility.yul\":13107:13111   */\n      0x11\n        /* \"#utility.yul\":13104:13105   */\n      0x04\n        /* \"#utility.yul\":13097:13112   */\n      mstore\n        /* \"#utility.yul\":13131:13135   */\n      0x24\n        /* \"#utility.yul\":13128:13129   */\n      0x00\n        /* \"#utility.yul\":13121:13136   */\n      revert\n        /* \"#utility.yul\":13147:13274   */\n    tag_257:\n        /* \"#utility.yul\":13208:13218   */\n      0x4e487b71\n        /* \"#utility.yul\":13203:13206   */\n      0xe0\n        /* \"#utility.yul\":13199:13219   */\n      shl\n        /* \"#utility.yul\":13196:13197   */\n      0x00\n        /* \"#utility.yul\":13189:13220   */\n      mstore\n        /* \"#utility.yul\":13239:13243   */\n      0x41\n        /* \"#utility.yul\":13236:13237   */\n      0x04\n        /* \"#utility.yul\":13229:13244   */\n      mstore\n        /* \"#utility.yul\":13263:13267   */\n      0x24\n        /* \"#utility.yul\":13260:13261   */\n      0x00\n        /* \"#utility.yul\":13253:13268   */\n      revert\n\n    auxdata: 0xa26469706673582212209df13f0bda88adb659c340bc1e5437e05269e0d0c486f9704482c03ef0d669a664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:326:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:14"
															},
															"nodeType": "YulIf",
															"src": "105:2:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:14"
															},
															"nodeType": "YulIf",
															"src": "214:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:14",
														"type": ""
													}
												],
												"src": "14:310:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260016004553480156200001657600080fd5b506040516200192b3803806200192b8339810160408190526200003991620000a7565b600280546001600160a01b0319166001600160a01b03831617905560088054336001600160a01b03199091161790556200008060066200009e602090811b62000b3117901c565b6200009760076200009e60201b62000b311760201c565b50620000d7565b80546001019055565b600060208284031215620000b9578081fd5b81516001600160a01b0381168114620000d0578182fd5b9392505050565b61184480620000e76000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636e8cffa2116100665780636e8cffa2146101235780638d3c9445146101ab5780638da5cb5b146101be578063c4e49cd5146101e9578063eff0f592146101fc57600080fd5b80630ebc8da61461009857806329e999f4146100ad5780632f2e01f2146100eb5780635996e024146100fe575b600080fd5b6100ab6100a6366004611420565b610264565b005b6100d86100bb366004611452565b600c60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d86100f93660046113a7565b610444565b61011161010c366004611452565b610636565b6040516100e29695949392919061160a565b610196610131366004611452565b600960209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919260ff91821692911689565b6040516100e299989796959493929190611596565b6100d86101b9366004611352565b61070b565b6008546101d1906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6100ab6101f736600461147d565b61085b565b61019661020a366004611408565b600b6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919260ff91821692911689565b60008281526005602052604090205482906001600160a01b031633146102e25760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b60648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917fa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f99891a26000838152600b602090815260408083208151610120810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460608301526004810154608083015260058082015460a0840152600682015460c084019160ff909116908111156103b057634e487b7160e01b600052602160045260246000fd5b60058111156103cf57634e487b7160e01b600052602160045260246000fd5b81526007820154602082015260089091015460ff1615156040909101526001610100820152905060c0810183600581111561041a57634e487b7160e01b600052602160045260246000fd5b9081600581111561043b57634e487b7160e01b600052602160045260246000fd5b90525050505050565b60008061045060075490565b9050610460600780546001019055565b604051806101200160405280828152602001886001600160a01b03168152602001878152602001868152602001858152602001428152602001600160058111156104ba57634e487b7160e01b600052602160045260246000fd5b60058111156104d957634e487b7160e01b600052602160045260246000fd5b8152602080820186905260006040928301819052848152600982528281206001600160a01b038c81168352908352908390208451815591840151600180840180546001600160a01b0319169290931691909117909155918301516002820155606083015160038201556080830151600482015560a083015160058083019190915560c084015160068301805493949193909260ff199091169190849081111561059257634e487b7160e01b600052602160045260246000fd5b021790555060e0828101516007830155610100909201516008909101805460ff19169115159190911790556040805183815260a0602082018190526010908201526f125b9cdd5c985b98d948109bdbdad95960821b60c08201523391810182905260608101919091524260808201527f528441e079e31bf6f9d9a91817469f3269aadfd0e41397f5139151f22d5bb541910160405180910390a19695505050505050565b600a602090815260009283526040808420909152908252902080546001820154600283018054929391926106699061178d565b80601f01602080910402602001604051908101604052809291908181526020018280546106959061178d565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b505050506003830154600484015460059094015492936001600160a01b03918216939092501686565b60008061071760065490565b9050610727600680546001019055565b6040805160c08101825282815260208082018781528284018781526001600160a01b038a16606085018190524260808601523360a08601526000878152600a85528681209181529084529490942083518155905160018201559251805192939261079792600285019201906111db565b506060828101516003830180546001600160a01b03199081166001600160a01b0393841617909155608080860151600486015560a095860151600590950180549092169490921693909317909255604080518581526020810185905260119481019490945270119b1a59da1d08149959da5cdd195c9959607a1b60c0850152339084018190529083015242908201527f31e053a200c037c2a0f3a83d8e087ea8ca9962fc3f642170571a92abc949a13c9060e00160405180910390a1949350505050565b600083815260096020908152604080832033845282528083208151610120810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460608301526004810154608083015260058082015460a0840152600682015460c084019160ff909116908111156108ee57634e487b7160e01b600052602160045260246000fd5b600581111561090d57634e487b7160e01b600052602160045260246000fd5b8152600782015460208083019190915260089092015460ff1615156040909101528101519091506001600160a01b03166109895760405162461bcd60e51b815260206004820181905260248201527f506f6c69637920486f6c646572204164647265737320697320696e76616c696460448201526064016102d9565b610100810151156109ce5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016102d9565b60006109ea6109dc84610b3a565b3063075e46d360e11b610b57565b9050610a22604051806040016040528060058152602001641d5b9d1a5b60da1b815250836080015183610b7c9092919063ffffffff16565b6000610a368583662386f26fc10000610b9f565b905082600b60008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610ae357634e487b7160e01b600052602160045260246000fd5b021790555060e08201516007820155610100909101516008909101805460ff19169115159190911790556000958652600c602090815260408088203389529091529095209490945550505050565b80546001019055565b80516000908290610b4e5750600092915050565b50506020015190565b610b5f61125f565b610b6761125f565b610b7381868686610bbe565b95945050505050565b6080830151610b8b9083610bfb565b6080830151610b9a9082610c12565b505050565b6000610bb684848460016320214ca360e11b610c22565b949350505050565b610bc661125f565b610bd68560800151610100610e2e565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b610c088260038351610e99565b610b9a8282610f6d565b610c1e82600083610e99565b5050565b6004546040516bffffffffffffffffffffffff193060601b166020820152603481019190915260009060540160408051808303601f19018152918152815160209283012060045460608901526000818152600590935281832080546001600160a01b0319166001600160a01b038b16179055905190925082917fa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe2491a2600082600080886000015189602001518a604001518b606001518a8d6080015160000151604051602401610cf9989796959493929190611507565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092526002549151630200057560e51b81529092506001600160a01b0390911690634000aea090610d61908a908990869060040161156f565b602060405180830381600087803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db391906113e8565b610e0b5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b60648201526084016102d9565b600160046000828254610e1e9190611654565b9091555091979650505050505050565b604080518082019091526060815260006020820152610e4e6020836117c2565b15610e7657610e5e6020836117c2565b610e69906020611776565b610e739083611654565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178111610eba57610eb48360e0600585901b168317610f9b565b50505050565b60ff8111610ee457610ed7836018611fe0600586901b1617610f9b565b50610eb483826001610fc0565b61ffff8111610f0f57610f02836019611fe0600586901b1617610f9b565b50610eb483826002610fc0565b63ffffffff8111610f3c57610f2f83601a611fe0600586901b1617610f9b565b50610eb483826004610fc0565b67ffffffffffffffff8111610b9a57610f6083601b611fe0600586901b1617610f9b565b50610eb483826008610fc0565b604080518082019091526060815260006020820152610f9483846000015151848551610fe6565b9392505050565b604080518082019091526060815260006020820152610f9483846000015151846110d0565b604080518082019091526060815260006020820152610bb684856000015151858561112c565b604080518082019091526060815260006020820152825182111561100957600080fd5b60208501516110188386611654565b111561104b5761104b8561103b876020015187866110369190611654565b6111ad565b611046906002611757565b6111c4565b60008086518051876020830101935080888701111561106a5787860182525b505050602084015b602084106110aa5780518252611089602083611654565b9150611096602082611654565b90506110a3602085611776565b9350611072565b51815160001960208690036101000a019081169019919091161790525083949350505050565b604080518082019091526060815260006020820152836020015183106111055761110584856020015160026110469190611757565b835180516020858301018481535080851415611122576001810182525b5093949350505050565b60408051808201909152606081526000602082015260208501516111508584611654565b1115611164576111648561103b8685611654565b60006001611174846101006116af565b61117e9190611776565b90508551838682010185831982511617815250805184870111156111a25783860181525b509495945050505050565b6000818311156111be575081610e93565b50919050565b81516111d08383610e2e565b50610eb48382610f6d565b8280546111e79061178d565b90600052602060002090601f016020900481019282611209576000855561124f565b82601f1061122257805160ff191683800117855561124f565b8280016001018555821561124f579182015b8281111561124f578251825591602001919060010190611234565b5061125b92915061129a565b5090565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b5b8082111561125b576000815560010161129b565b80356001600160a01b03811681146112c657600080fd5b919050565b600082601f8301126112db578081fd5b813567ffffffffffffffff808211156112f6576112f66117f8565b604051601f8301601f19908116603f0116810190828211818310171561131e5761131e6117f8565b81604052838152866020858801011115611336578485fd5b8360208701602083013792830160200193909352509392505050565b600080600060608486031215611366578283fd5b61136f846112af565b925060208401359150604084013567ffffffffffffffff811115611391578182fd5b61139d868287016112cb565b9150509250925092565b600080600080600060a086880312156113be578081fd5b6113c7866112af565b97602087013597506040870135966060810135965060800135945092505050565b6000602082840312156113f9578081fd5b81518015158114610f94578182fd5b600060208284031215611419578081fd5b5035919050565b60008060408385031215611432578182fd5b82359150602083013560068110611447578182fd5b809150509250929050565b60008060408385031215611464578182fd5b82359150611474602084016112af565b90509250929050565b600080600060608486031215611491578283fd5b833592506114a1602085016112af565b9150604084013567ffffffffffffffff811115611391578182fd5b60008151808452815b818110156114e1576020818501810151868301820152016114c5565b818111156114f25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e08201819052600090611560838201856114bc565b9b9a5050505050505050505050565b60018060a01b0384168152826020820152606060408201526000610b7360608301846114bc565b8981526001600160a01b038916602082015260408101889052606081018790526080810186905260a081018590526101208101600685106115e757634e487b7160e01b600052602160045260246000fd5b8460c08301528360e08301528215156101008301529a9950505050505050505050565b86815285602082015260c06040820152600061162960c08301876114bc565b6001600160a01b039586166060840152608083019490945250921660a0909201919091529392505050565b60008219821115611667576116676117e2565b500190565b600181815b808511156116a757816000190482111561168d5761168d6117e2565b8085161561169a57918102915b93841c9390800290611671565b509250929050565b6000610f9483836000826116c557506001610e93565b816116d257506000610e93565b81600181146116e857600281146116f25761170e565b6001915050610e93565b60ff841115611703576117036117e2565b50506001821b610e93565b5060208310610133831016604e8410600b8410161715611731575081810a610e93565b61173b838361166c565b806000190482111561174f5761174f6117e2565b029392505050565b6000816000190483118215151615611771576117716117e2565b500290565b600082821015611788576117886117e2565b500390565b600181811c908216806117a157607f821691505b602082108114156111be57634e487b7160e01b600052602260045260246000fd5b6000826117dd57634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209df13f0bda88adb659c340bc1e5437e05269e0d0c486f9704482c03ef0d669a664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x192B CODESIZE SUB DUP1 PUSH3 0x192B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0xA7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH3 0x80 PUSH1 0x6 PUSH3 0x9E PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0xB31 OR SWAP1 SHR JUMP JUMPDEST PUSH3 0x97 PUSH1 0x7 PUSH3 0x9E PUSH1 0x20 SHL PUSH3 0xB31 OR PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xD7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xB9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xD0 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1844 DUP1 PUSH3 0xE7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E8CFFA2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6E8CFFA2 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x8D3C9445 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xC4E49CD5 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xEFF0F592 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEBC8DA6 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x29E999F4 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x2F2E01F2 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x5996E024 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x196 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x81C995C5D595CDD PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0xA40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998 SWAP2 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP3 ADD MSTORE SWAP1 POP PUSH1 0xC0 DUP2 ADD DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x41A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x450 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x460 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP4 MSTORE SWAP1 DUP4 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP4 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x592 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9CDD5C985B98D948109BDBDAD959 PUSH1 0x82 SHL PUSH1 0xC0 DUP3 ADD MSTORE CALLER SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x528441E079E31BF6F9D9A91817469F3269AADFD0E41397F5139151F22D5BB541 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x669 SWAP1 PUSH2 0x178D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x178D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 POP AND DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x717 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x727 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA DUP6 MSTORE DUP7 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x797 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x11DB JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP1 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 SWAP6 DUP7 ADD MLOAD PUSH1 0x5 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH17 0x119B1A59DA1D08149959DA5CDD195C9959 PUSH1 0x7A SHL PUSH1 0xC0 DUP6 ADD MSTORE CALLER SWAP1 DUP5 ADD DUP2 SWAP1 MSTORE SWAP1 DUP4 ADD MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH32 0x31E053A200C037C2A0F3A83D8E087EA8CA9962FC3F642170571A92ABC949A13C SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x8EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6C69637920486F6C646572204164647265737320697320696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EA PUSH2 0x9DC DUP5 PUSH2 0xB3A JUMP JUMPDEST ADDRESS PUSH4 0x75E46D3 PUSH1 0xE1 SHL PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH2 0xA22 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1D5B9D1A5B PUSH1 0xDA SHL DUP2 MSTORE POP DUP4 PUSH1 0x80 ADD MLOAD DUP4 PUSH2 0xB7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA36 DUP6 DUP4 PUSH7 0x2386F26FC10000 PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 CALLER DUP10 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP6 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0xB4E JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB5F PUSH2 0x125F JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xB73 DUP2 DUP7 DUP7 DUP7 PUSH2 0xBBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB8B SWAP1 DUP4 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB9A SWAP1 DUP3 PUSH2 0xC12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH4 0x20214CA3 PUSH1 0xE1 SHL PUSH2 0xC22 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBC6 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xBD6 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0xE2E JUMP JUMPDEST POP POP SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC08 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xB9A DUP3 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC1E DUP3 PUSH1 0x0 DUP4 PUSH2 0xE99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x4 SLOAD PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0xA6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24 SWAP2 LOG2 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 DUP14 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCF9 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x2000575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4000AEA0 SWAP1 PUSH2 0xD61 SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x156F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xE0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x636C65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE1E SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE4E PUSH1 0x20 DUP4 PUSH2 0x17C2 JUMP JUMPDEST ISZERO PUSH2 0xE76 JUMPI PUSH2 0xE5E PUSH1 0x20 DUP4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0xE69 SWAP1 PUSH1 0x20 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0xE73 SWAP1 DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0xEBA JUMPI PUSH2 0xEB4 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0xF9B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0xEE4 JUMPI PUSH2 0xED7 DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x1 PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0xF0F JUMPI PUSH2 0xF02 DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x2 PUSH2 0xFC0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0xF3C JUMPI PUSH2 0xF2F DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x4 PUSH2 0xFC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9A JUMPI PUSH2 0xF60 DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x8 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF94 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0xFE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF94 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB6 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1018 DUP4 DUP7 PUSH2 0x1654 JUMP JUMPDEST GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B DUP6 PUSH2 0x103B DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 PUSH2 0x1036 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x1046 SWAP1 PUSH1 0x2 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x106A JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x10AA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1089 PUSH1 0x20 DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP PUSH2 0x1096 PUSH1 0x20 DUP3 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A3 PUSH1 0x20 DUP6 PUSH2 0x1776 JUMP JUMPDEST SWAP4 POP PUSH2 0x1072 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x1105 JUMPI PUSH2 0x1105 DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x1757 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 EQ ISZERO PUSH2 0x1122 JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1150 DUP6 DUP5 PUSH2 0x1654 JUMP JUMPDEST GT ISZERO PUSH2 0x1164 JUMPI PUSH2 0x1164 DUP6 PUSH2 0x103B DUP7 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1174 DUP5 PUSH2 0x100 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x117E SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0x11A2 JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x11BE JUMPI POP DUP2 PUSH2 0xE93 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x11D0 DUP4 DUP4 PUSH2 0xE2E JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH2 0xF6D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x11E7 SWAP1 PUSH2 0x178D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1209 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x124F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1222 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x124F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x124F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x124F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST POP PUSH2 0x125B SWAP3 SWAP2 POP PUSH2 0x129A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE DUP4 ADD MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x129B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x131E JUMPI PUSH2 0x131E PUSH2 0x17F8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1336 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1366 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x136F DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x139D DUP7 DUP3 DUP8 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13BE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13C7 DUP7 PUSH2 0x12AF JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF94 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1432 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x1447 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1474 PUSH1 0x20 DUP5 ADD PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1491 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x14A1 PUSH1 0x20 DUP6 ADD PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14C5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14F2 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1560 DUP4 DUP3 ADD DUP6 PUSH2 0x14BC JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14BC JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD PUSH1 0x6 DUP6 LT PUSH2 0x15E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0xC0 DUP4 ADD MSTORE DUP4 PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1629 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 AND PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x17E2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x16A7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168D PUSH2 0x17E2 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x169A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1671 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x16C5 JUMPI POP PUSH1 0x1 PUSH2 0xE93 JUMP JUMPDEST DUP2 PUSH2 0x16D2 JUMPI POP PUSH1 0x0 PUSH2 0xE93 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16E8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16F2 JUMPI PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1703 PUSH2 0x17E2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xE93 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1731 JUMPI POP DUP2 DUP2 EXP PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x173B DUP4 DUP4 PUSH2 0x166C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x174F JUMPI PUSH2 0x174F PUSH2 0x17E2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1771 PUSH2 0x17E2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x17E2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 CALL EXTCODEHASH SIGNEXTEND 0xDA DUP9 0xAD 0xB6 MSIZE 0xC3 BLOCKHASH 0xBC 0x1E SLOAD CALLDATACOPY 0xE0 MSTORE PUSH10 0xE0D0C486F9704482C03E CREATE 0xD6 PUSH10 0xA664736F6C6343000804 STOP CALLER ",
							"sourceMap": "208:4701:12:-:0;;;1194:1:1;1163:32;;824:158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7422:3:1;:35;;-1:-1:-1;;;;;;7422:35:1;-1:-1:-1;;;;;7422:35:1;;;;;890:5:12;:18;;898:10;-1:-1:-1;;;;;;890:18:12;;;;;;918:22;:10;:20;;;;;;;:22;;:::i;:::-;950:25;:13;:23;;;;;:25;;:::i;:::-;824:158;208:4701;;945:123:11;1032:19;;1050:1;1032:19;;;945:123::o;14:310:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:14;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:14:o;:::-;208:4701:12;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13276:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:14"
															},
															"nodeType": "YulIf",
															"src": "111:2:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:14",
														"type": ""
													}
												],
												"src": "14:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:686:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "294:24:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "303:5:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "310:5:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "296:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "296:20:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "296:20:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "273:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "281:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "269:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "269:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "288:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "265:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "265:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "258:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:35:14"
															},
															"nodeType": "YulIf",
															"src": "255:2:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "350:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "337:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "337:20:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "331:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "366:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "376:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "370:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "417:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "419:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "409:2:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "413:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "406:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:10:14"
															},
															"nodeType": "YulIf",
															"src": "403:2:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "462:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:7:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "474:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "494:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "488:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "478:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "506:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "552:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "556:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "548:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "548:13:14"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "563:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "544:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "544:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "568:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "540:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "540:31:14"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "536:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "510:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "636:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "638:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "638:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "638:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "595:10:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "607:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "592:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "615:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "612:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "589:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:46:14"
															},
															"nodeType": "YulIf",
															"src": "586:2:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "678:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "667:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "705:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "713:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "764:24:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "773:5:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "780:5:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "766:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "766:20:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "766:20:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "739:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "747:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "735:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "735:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "752:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "731:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "731:26:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "759:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "728:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:35:14"
															},
															"nodeType": "YulIf",
															"src": "725:2:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "822:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "833:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "841:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:17:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "848:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "797:54:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "875:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "883:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "871:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "871:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "888:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "867:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "867:26:14"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "895:5:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "860:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "860:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "910:15:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "919:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "910:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "219:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "227:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "235:5:14",
														"type": ""
													}
												],
												"src": "192:739:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:370:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1105:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1113:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1098:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1071:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1080:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1067:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1067:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1063:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:32:14"
															},
															"nodeType": "YulIf",
															"src": "1060:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1131:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1160:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1141:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1206:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1217:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1189:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1230:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1261:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1272:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1244:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1234:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1328:6:14"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1336:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1291:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1299:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1288:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:30:14"
															},
															"nodeType": "YulIf",
															"src": "1285:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1354:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1386:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1382:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1406:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1364:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:50:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1011:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1023:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1031:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1039:6:14",
														"type": ""
													}
												],
												"src": "936:484:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:332:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1610:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1619:6:14"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1627:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1612:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1612:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1612:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1584:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1593:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:33:14"
															},
															"nodeType": "YulIf",
															"src": "1573:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1645:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1674:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1655:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1693:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1731:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1703:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1744:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1771:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1782:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1754:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1795:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1822:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1833:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1805:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:32:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1795:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1846:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1884:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:19:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1856:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:33:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1497:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1508:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1520:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1528:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1536:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1544:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1552:6:14",
														"type": ""
													}
												],
												"src": "1425:470:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1978:219:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2024:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2033:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2041:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2026:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2026:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2026:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1999:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2008:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1995:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1991:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:32:14"
															},
															"nodeType": "YulIf",
															"src": "1988:2:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2059:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2078:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2072:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2063:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2150:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2158:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2110:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2131:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2124:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2124:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2117:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2117:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2107:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2107:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:40:14"
															},
															"nodeType": "YulIf",
															"src": "2097:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2176:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2186:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1944:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1955:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1967:6:14",
														"type": ""
													}
												],
												"src": "1900:297:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:120:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2318:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2327:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2335:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2320:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2320:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2320:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2293:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2302:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:32:14"
															},
															"nodeType": "YulIf",
															"src": "2282:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2376:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2363:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2238:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2249:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2261:6:14",
														"type": ""
													}
												],
												"src": "2202:190:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:257:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2547:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2556:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2564:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2549:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2549:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2549:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2522:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2531:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2518:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2514:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2514:32:14"
															},
															"nodeType": "YulIf",
															"src": "2511:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2582:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2605:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2624:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2665:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2650:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2650:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2637:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2628:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2702:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2711:6:14"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2719:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2691:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2698:1:14",
																				"type": "",
																				"value": "6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2688:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:12:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:20:14"
															},
															"nodeType": "YulIf",
															"src": "2678:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2737:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2747:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_enum$_FlightStatus_$2567",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2459:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2470:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2482:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2490:6:14",
														"type": ""
													}
												],
												"src": "2397:361:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2850:177:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2896:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2905:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2913:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2898:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2898:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2898:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2871:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2892:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:32:14"
															},
															"nodeType": "YulIf",
															"src": "2860:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2931:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2954:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2941:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2973:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3006:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3017:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3002:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3002:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2983:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2808:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2819:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2831:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2839:6:14",
														"type": ""
													}
												],
												"src": "2763:264:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3146:370:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3192:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3201:6:14"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3209:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3194:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3194:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3194:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3167:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3163:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3163:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3188:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:32:14"
															},
															"nodeType": "YulIf",
															"src": "3156:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3227:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3250:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3237:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3269:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3313:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3298:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3279:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3326:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3368:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3340:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3330:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3415:26:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3424:6:14"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3432:6:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3417:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3417:22:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3417:22:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3387:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3395:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3384:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:30:14"
															},
															"nodeType": "YulIf",
															"src": "3381:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3450:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3482:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3493:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3502:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3460:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:50:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3096:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3107:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3119:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3127:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3135:6:14",
														"type": ""
													}
												],
												"src": "3032:484:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3570:426:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3580:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3600:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3594:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3584:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3622:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3627:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:19:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3643:12:14",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "3652:3:14"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3647:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3716:110:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3730:14:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3740:4:14",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3734:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3772:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3777:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3768:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3768:11:14"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3781:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3764:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3764:20:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3800:5:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3807:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3796:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3796:13:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3811:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3792:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3792:22:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3786:29:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3757:59:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3757:59:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3675:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3678:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3672:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3686:21:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3688:17:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3697:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3693:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3693:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3688:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3668:3:14",
																"statements": []
															},
															"src": "3664:162:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3860:64:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3889:3:14"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3894:6:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3885:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3885:16:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3903:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3881:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3881:27:14"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "3910:3:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3874:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3874:40:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3874:40:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3841:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3844:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3838:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:13:14"
															},
															"nodeType": "YulIf",
															"src": "3835:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3933:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3961:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3969:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3957:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3957:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3978:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3974:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3974:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3953:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3953:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3944:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3944:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3985:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3940:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3933:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3562:3:14",
														"type": ""
													}
												],
												"src": "3521:475:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4168:147:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4198:2:14",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4202:6:14"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4194:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4194:15:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4215:26:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4211:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4211:31:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:66:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4178:66:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4264:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4269:2:14",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4260:12:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4274:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:28:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4290:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4301:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4306:2:14",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4297:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_contract$_PluginClient_$799_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4136:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4141:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4149:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4160:3:14",
														"type": ""
													}
												],
												"src": "4001:314:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4421:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4431:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4443:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4439:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4431:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4473:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4488:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4504:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4509:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4500:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4500:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4513:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4496:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4496:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4484:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4390:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4401:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4412:4:14",
														"type": ""
													}
												],
												"src": "4320:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:508:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4851:13:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4861:3:14",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4855:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4873:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4896:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4887:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4883:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:19:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4877:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4918:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4933:6:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4941:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4911:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4965:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4976:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4961:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4961:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4981:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4954:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5008:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5019:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5004:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5004:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5024:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4997:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5051:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5062:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5047:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5047:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5071:6:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5079:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5067:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5040:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5103:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5114:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5099:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5099:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5124:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5136:3:14",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5141:10:14",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5132:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5132:20:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5120:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5120:33:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5092:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5174:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5185:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:19:14"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5191:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5214:19:14"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "5235:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:19:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5279:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5291:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "5316:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5339:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5299:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5291:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4754:9:14",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4765:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4773:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4781:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4789:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4797:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4805:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4813:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4821:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4832:4:14",
														"type": ""
													}
												],
												"src": "4528:821:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:210:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5546:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5561:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5577:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5582:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5573:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5573:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5586:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5569:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5539:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5621:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5606:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5626:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5664:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5642:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5642:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5681:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5706:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5718:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5729:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5689:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5689:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5482:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5493:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5501:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5509:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5520:4:14",
														"type": ""
													}
												],
												"src": "5354:385:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5845:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5855:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5867:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5878:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5863:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5855:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5897:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5908:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5890:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5825:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5836:4:14",
														"type": ""
													}
												],
												"src": "5744:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6100:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6117:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6110:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6151:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6162:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6147:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6147:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6167:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6190:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6201:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6206:34:14",
																		"type": "",
																		"value": "Policy Holder Address is invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6250:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6262:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6273:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6258:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6258:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28c571c545ee84f31fcf0d566c5956617798f51eb6a1f1030db3d6889f5ad596__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6077:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6091:4:14",
														"type": ""
													}
												],
												"src": "5926:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6461:225:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6478:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6489:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6471:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6471:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6512:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6523:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6508:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6508:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6528:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6501:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6501:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6551:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6562:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6547:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6567:34:14",
																		"type": "",
																		"value": "unable to transferAndCall to ora"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6540:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6622:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6633:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6618:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6618:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6638:5:14",
																		"type": "",
																		"value": "cle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:33:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6653:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6665:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6676:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6661:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6653:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6438:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6452:4:14",
														"type": ""
													}
												],
												"src": "6287:399:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6865:165:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6882:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6875:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6875:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6916:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6927:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6932:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6905:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6905:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6955:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6966:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6951:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6971:17:14",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:45:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6998:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7010:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7021:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7006:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6998:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6842:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6856:4:14",
														"type": ""
													}
												],
												"src": "6691:339:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7209:230:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7226:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7219:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7219:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7271:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7256:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7256:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7249:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7299:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7310:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7295:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7295:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7315:34:14",
																		"type": "",
																		"value": "Source must be the oracle of the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7288:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7288:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7288:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7386:10:14",
																		"type": "",
																		"value": " request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:38:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7359:38:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7406:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7418:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7429:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7406:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7186:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7200:4:14",
														"type": ""
													}
												],
												"src": "7035:404:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7545:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7555:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7567:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7578:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7563:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7563:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7555:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7597:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7608:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7514:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7525:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7536:4:14",
														"type": ""
													}
												],
												"src": "7444:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:621:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7970:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7982:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7993:3:14",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7970:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8013:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8006:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8006:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8051:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8062:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8047:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8047:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8071:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8087:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8092:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8083:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8083:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8096:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8079:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8079:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8067:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8067:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8040:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:60:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8040:60:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8120:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8131:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8116:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8136:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8109:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8163:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8174:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8159:18:14"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8179:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8152:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8152:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8152:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8206:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8217:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8202:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8202:19:14"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8223:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8195:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8250:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8261:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8246:19:14"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "8267:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:35:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8316:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8337:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8344:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8349:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8340:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8340:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8330:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8330:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8330:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8381:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8384:4:14",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8374:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8374:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8374:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8409:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8412:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8402:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8402:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8402:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value6",
																				"nodeType": "YulIdentifier",
																				"src": "8296:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8304:1:14",
																				"type": "",
																				"value": "6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8293:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8293:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8286:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8286:21:14"
															},
															"nodeType": "YulIf",
															"src": "8283:2:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8447:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8458:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8443:19:14"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "8464:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8502:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8487:19:14"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "8508:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8480:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8480:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8480:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8546:3:14",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8531:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value8",
																						"nodeType": "YulIdentifier",
																						"src": "8566:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8559:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8559:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8552:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8552:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8524:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8524:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8524:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_enum$_FlightStatus_$2567_t_uint256_t_bool__to_t_uint256_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7865:9:14",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "7876:6:14",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "7884:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7892:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7900:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7908:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7916:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7924:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7932:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7940:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7951:4:14",
														"type": ""
													}
												],
												"src": "7626:955:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8847:373:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8864:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8875:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8857:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8857:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8857:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8902:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8913:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8898:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8898:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8918:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8891:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8891:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8891:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8945:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8956:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8941:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8961:3:14",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8934:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8934:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8974:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8999:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9011:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9022:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9007:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9007:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8982:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8982:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8974:4:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9036:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9059:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9050:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9063:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9046:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9046:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9040:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9085:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9096:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9081:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "9105:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9113:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9101:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9101:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9074:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9137:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9148:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9133:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9133:19:14"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9154:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9126:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9126:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9126:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9181:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9192:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9177:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9177:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "9202:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9210:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9198:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9198:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9170:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9170:44:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_uint256_t_address__to_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8776:9:14",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8787:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8795:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8803:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8811:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8819:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8827:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8838:4:14",
														"type": ""
													}
												],
												"src": "8586:634:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9511:400:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9528:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9539:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9521:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9521:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9577:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9562:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9582:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9555:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9555:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9555:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9606:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9617:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9602:19:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9623:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9595:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9595:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9646:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9657:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9642:19:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9663:19:14",
																		"type": "",
																		"value": "Flight Registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9635:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9635:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9692:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9704:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9715:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9700:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9692:4:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9728:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9746:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9751:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9742:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9742:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9755:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9738:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9738:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9732:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9777:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9788:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9773:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9773:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9797:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9805:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9793:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9766:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9766:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9840:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9849:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9857:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9845:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9845:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9818:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9818:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9881:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9892:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9877:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9877:19:14"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9898:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9870:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9870:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_6176d981f4d8d8304a5f9c48b62af25782ed16b67b022cdb98d39f2a07a486b1_t_address_t_address_t_uint256__to_t_uint256_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9456:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9467:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9475:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9483:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9491:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9502:4:14",
														"type": ""
													}
												],
												"src": "9225:686:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10202:399:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10219:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10212:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10257:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10268:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10253:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10253:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10273:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10246:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10246:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10246:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10297:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10308:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10293:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10293:19:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10314:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10286:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10286:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10348:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10333:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10333:19:14"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10354:18:14",
																		"type": "",
																		"value": "Insurance Booked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10326:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10326:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10382:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10394:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10405:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10390:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10390:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10382:4:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10418:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10441:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10432:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10432:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10445:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10428:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10422:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10467:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10478:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10463:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10463:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10487:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10495:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10483:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10483:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10456:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10456:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10519:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10530:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10515:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10515:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10539:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10547:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10535:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10508:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10508:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10571:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10582:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10567:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10567:19:14"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10588:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10560:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_d9636bc944eebbd72099b541dce06e30d43d67a802d91be641798299460ff319_t_address_t_address_t_uint256__to_t_uint256_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10147:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10158:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10166:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10174:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10182:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10193:4:14",
														"type": ""
													}
												],
												"src": "9916:685:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10654:80:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10681:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10683:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10683:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10683:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10670:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10677:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10673:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10667:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10667:13:14"
															},
															"nodeType": "YulIf",
															"src": "10664:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10712:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10723:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10726:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10712:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10637:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10640:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10646:3:14",
														"type": ""
													}
												],
												"src": "10606:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10803:358:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10813:16:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10828:1:14",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "10817:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10838:16:14",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "10847:7:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10838:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10863:13:14",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "10871:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10863:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10927:228:14",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10972:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "10974:16:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10974:18:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10974:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10947:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10961:1:14",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10957:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10957:6:14"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "10965:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "10953:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10953:17:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10944:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10944:27:14"
																		},
																		"nodeType": "YulIf",
																		"src": "10941:2:14"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11033:29:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11035:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "11048:5:14"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "11055:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "11044:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11044:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "11035:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11014:8:14"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "11024:7:14"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11010:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11010:22:14"
																		},
																		"nodeType": "YulIf",
																		"src": "11007:2:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11075:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11087:4:14"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11093:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "11083:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11083:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "11075:4:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11111:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "11127:7:14"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11136:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "11123:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11123:22:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "11111:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10896:8:14"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "10906:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10893:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10893:21:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10915:3:14",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10889:3:14",
																"statements": []
															},
															"src": "10885:270:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "10767:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10774:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10787:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10794:4:14",
														"type": ""
													}
												],
												"src": "10739:422:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11236:61:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11246:45:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11276:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11282:8:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "11255:20:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:36:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11246:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11207:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11213:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11226:5:14",
														"type": ""
													}
												],
												"src": "11166:131:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11361:747:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11399:52:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11413:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11422:1:14",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11413:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11436:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11381:8:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11374:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:16:14"
															},
															"nodeType": "YulIf",
															"src": "11371:2:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11484:52:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11498:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11507:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11498:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11521:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11470:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11463:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11463:12:14"
															},
															"nodeType": "YulIf",
															"src": "11460:2:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11572:52:14",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "11586:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11595:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11586:5:14"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11609:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11565:59:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11570:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11640:123:14",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11675:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "11677:16:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11677:18:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11677:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11660:8:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11670:3:14",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "11657:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11657:17:14"
																				},
																				"nodeType": "YulIf",
																				"src": "11654:2:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "11710:25:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11723:8:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11733:1:14",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11719:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11719:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11710:5:14"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11748:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11633:130:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11638:1:14",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "11552:4:14"
															},
															"nodeType": "YulSwitch",
															"src": "11545:218:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11861:70:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11875:28:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11888:4:14"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11894:8:14"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "11884:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11884:19:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11875:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11916:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11785:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11791:2:14",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11782:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11782:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11799:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11809:2:14",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11796:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11796:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11778:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11778:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11822:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11828:3:14",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11819:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11819:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11837:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11847:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11834:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11834:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11815:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11815:36:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11775:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:77:14"
															},
															"nodeType": "YulIf",
															"src": "11772:2:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11940:57:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11982:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11988:8:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "11963:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11963:34:14"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "11944:7:14",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "11953:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12042:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12044:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12044:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12044:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "12012:7:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12029:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "12025:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12025:6:14"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "12033:6:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12021:19:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12009:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12009:32:14"
															},
															"nodeType": "YulIf",
															"src": "12006:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12073:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "12086:7:14"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "12095:6:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12082:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12082:20:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12073:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11332:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11338:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11351:5:14",
														"type": ""
													}
												],
												"src": "11302:806:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12165:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12224:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12226:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12226:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12226:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12196:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12189:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12189:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12182:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12182:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12204:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12215:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12211:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12211:6:14"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12219:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12207:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12207:14:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12201:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:21:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12178:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12178:45:14"
															},
															"nodeType": "YulIf",
															"src": "12175:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12255:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12270:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12273:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12266:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12266:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12255:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12144:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12147:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12153:7:14",
														"type": ""
													}
												],
												"src": "12113:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12335:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12357:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12359:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12359:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12359:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12351:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12354:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12348:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12348:8:14"
															},
															"nodeType": "YulIf",
															"src": "12345:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12388:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12400:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12403:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12396:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12388:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12317:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12320:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12326:4:14",
														"type": ""
													}
												],
												"src": "12286:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12471:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12481:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12495:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12498:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12491:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12491:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12481:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12512:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12542:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12548:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12538:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12538:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12516:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12589:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12591:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12605:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12613:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12601:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12601:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12591:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12569:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12562:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12562:26:14"
															},
															"nodeType": "YulIf",
															"src": "12559:2:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12679:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12700:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12707:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12712:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12703:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12703:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12693:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12693:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12693:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12744:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12747:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12737:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12737:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12737:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12772:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12775:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12765:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12765:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12765:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12635:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12658:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12666:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12655:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12655:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12632:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:38:14"
															},
															"nodeType": "YulIf",
															"src": "12629:2:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12451:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12460:6:14",
														"type": ""
													}
												],
												"src": "12416:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12839:171:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12870:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "12891:1:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12898:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12903:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12894:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12894:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12884:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12884:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12884:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12935:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12938:4:14",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12928:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12928:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12928:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "12963:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12966:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12956:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12956:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12956:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12859:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12852:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12852:9:14"
															},
															"nodeType": "YulIf",
															"src": "12849:2:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12990:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12999:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13002:1:14"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12995:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12990:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12824:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12827:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12833:1:14",
														"type": ""
													}
												],
												"src": "12801:209:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13047:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13064:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13071:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13076:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13067:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13067:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13057:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13057:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13057:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13104:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13107:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13097:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13097:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13128:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13131:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13121:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13121:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13121:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13015:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13179:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13196:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13203:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13208:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13199:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13199:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13189:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13236:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13239:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13229:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13229:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13229:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13260:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13263:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13253:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13253:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13147:127:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_enum$_FlightStatus_$2567(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(lt(value, 6)) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_contract$_PluginClient_$799_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_address_t_bytes4_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 256\n        let _2 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _2))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _2))\n        mstore(add(headStart, 128), and(value4, shl(224, 0xffffffff)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), _1)\n        tail := abi_encode_bytes(value7, add(headStart, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_28c571c545ee84f31fcf0d566c5956617798f51eb6a1f1030db3d6889f5ad596__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Policy Holder Address is invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"unable to transferAndCall to ora\")\n        mstore(add(headStart, 96), \"cle\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Source must be the oracle of the\")\n        mstore(add(headStart, 96), \" request\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_enum$_FlightStatus_$2567_t_uint256_t_bool__to_t_uint256_t_address_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        if iszero(lt(value6, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_uint256_t_address__to_t_uint256_t_bytes32_t_string_memory_ptr_t_address_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 192)\n        tail := abi_encode_bytes(value2, add(headStart, 192))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_6176d981f4d8d8304a5f9c48b62af25782ed16b67b022cdb98d39f2a07a486b1_t_address_t_address_t_uint256__to_t_uint256_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 160)\n        mstore(add(headStart, 160), 17)\n        mstore(add(headStart, 192), \"Flight Registered\")\n        tail := add(headStart, 224)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), and(value2, _1))\n        mstore(add(headStart, 128), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_d9636bc944eebbd72099b541dce06e30d43d67a802d91be641798299460ff319_t_address_t_address_t_uint256__to_t_uint256_t_string_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 160)\n        mstore(add(headStart, 160), 16)\n        mstore(add(headStart, 192), \"Insurance Booked\")\n        tail := add(headStart, 224)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value1, _1))\n        mstore(add(headStart, 96), and(value2, _1))\n        mstore(add(headStart, 128), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80636e8cffa2116100665780636e8cffa2146101235780638d3c9445146101ab5780638da5cb5b146101be578063c4e49cd5146101e9578063eff0f592146101fc57600080fd5b80630ebc8da61461009857806329e999f4146100ad5780632f2e01f2146100eb5780635996e024146100fe575b600080fd5b6100ab6100a6366004611420565b610264565b005b6100d86100bb366004611452565b600c60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d86100f93660046113a7565b610444565b61011161010c366004611452565b610636565b6040516100e29695949392919061160a565b610196610131366004611452565b600960209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919260ff91821692911689565b6040516100e299989796959493929190611596565b6100d86101b9366004611352565b61070b565b6008546101d1906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6100ab6101f736600461147d565b61085b565b61019661020a366004611408565b600b6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919260ff91821692911689565b60008281526005602052604090205482906001600160a01b031633146102e25760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b60648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917fa40ad10b942505047c532a7399bf5eac2768b11b7155b40ec80309aea567f99891a26000838152600b602090815260408083208151610120810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460608301526004810154608083015260058082015460a0840152600682015460c084019160ff909116908111156103b057634e487b7160e01b600052602160045260246000fd5b60058111156103cf57634e487b7160e01b600052602160045260246000fd5b81526007820154602082015260089091015460ff1615156040909101526001610100820152905060c0810183600581111561041a57634e487b7160e01b600052602160045260246000fd5b9081600581111561043b57634e487b7160e01b600052602160045260246000fd5b90525050505050565b60008061045060075490565b9050610460600780546001019055565b604051806101200160405280828152602001886001600160a01b03168152602001878152602001868152602001858152602001428152602001600160058111156104ba57634e487b7160e01b600052602160045260246000fd5b60058111156104d957634e487b7160e01b600052602160045260246000fd5b8152602080820186905260006040928301819052848152600982528281206001600160a01b038c81168352908352908390208451815591840151600180840180546001600160a01b0319169290931691909117909155918301516002820155606083015160038201556080830151600482015560a083015160058083019190915560c084015160068301805493949193909260ff199091169190849081111561059257634e487b7160e01b600052602160045260246000fd5b021790555060e0828101516007830155610100909201516008909101805460ff19169115159190911790556040805183815260a0602082018190526010908201526f125b9cdd5c985b98d948109bdbdad95960821b60c08201523391810182905260608101919091524260808201527f528441e079e31bf6f9d9a91817469f3269aadfd0e41397f5139151f22d5bb541910160405180910390a19695505050505050565b600a602090815260009283526040808420909152908252902080546001820154600283018054929391926106699061178d565b80601f01602080910402602001604051908101604052809291908181526020018280546106959061178d565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b505050506003830154600484015460059094015492936001600160a01b03918216939092501686565b60008061071760065490565b9050610727600680546001019055565b6040805160c08101825282815260208082018781528284018781526001600160a01b038a16606085018190524260808601523360a08601526000878152600a85528681209181529084529490942083518155905160018201559251805192939261079792600285019201906111db565b506060828101516003830180546001600160a01b03199081166001600160a01b0393841617909155608080860151600486015560a095860151600590950180549092169490921693909317909255604080518581526020810185905260119481019490945270119b1a59da1d08149959da5cdd195c9959607a1b60c0850152339084018190529083015242908201527f31e053a200c037c2a0f3a83d8e087ea8ca9962fc3f642170571a92abc949a13c9060e00160405180910390a1949350505050565b600083815260096020908152604080832033845282528083208151610120810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460608301526004810154608083015260058082015460a0840152600682015460c084019160ff909116908111156108ee57634e487b7160e01b600052602160045260246000fd5b600581111561090d57634e487b7160e01b600052602160045260246000fd5b8152600782015460208083019190915260089092015460ff1615156040909101528101519091506001600160a01b03166109895760405162461bcd60e51b815260206004820181905260248201527f506f6c69637920486f6c646572204164647265737320697320696e76616c696460448201526064016102d9565b610100810151156109ce5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016102d9565b60006109ea6109dc84610b3a565b3063075e46d360e11b610b57565b9050610a22604051806040016040528060058152602001641d5b9d1a5b60da1b815250836080015183610b7c9092919063ffffffff16565b6000610a368583662386f26fc10000610b9f565b905082600b60008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836005811115610ae357634e487b7160e01b600052602160045260246000fd5b021790555060e08201516007820155610100909101516008909101805460ff19169115159190911790556000958652600c602090815260408088203389529091529095209490945550505050565b80546001019055565b80516000908290610b4e5750600092915050565b50506020015190565b610b5f61125f565b610b6761125f565b610b7381868686610bbe565b95945050505050565b6080830151610b8b9083610bfb565b6080830151610b9a9082610c12565b505050565b6000610bb684848460016320214ca360e11b610c22565b949350505050565b610bc661125f565b610bd68560800151610100610e2e565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b610c088260038351610e99565b610b9a8282610f6d565b610c1e82600083610e99565b5050565b6004546040516bffffffffffffffffffffffff193060601b166020820152603481019190915260009060540160408051808303601f19018152918152815160209283012060045460608901526000818152600590935281832080546001600160a01b0319166001600160a01b038b16179055905190925082917fa6745906207afb96a5801b8e5711fd7b74c5780ce893a973806e179d675bbe2491a2600082600080886000015189602001518a604001518b606001518a8d6080015160000151604051602401610cf9989796959493929190611507565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092526002549151630200057560e51b81529092506001600160a01b0390911690634000aea090610d61908a908990869060040161156f565b602060405180830381600087803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db391906113e8565b610e0b5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b60648201526084016102d9565b600160046000828254610e1e9190611654565b9091555091979650505050505050565b604080518082019091526060815260006020820152610e4e6020836117c2565b15610e7657610e5e6020836117c2565b610e69906020611776565b610e739083611654565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178111610eba57610eb48360e0600585901b168317610f9b565b50505050565b60ff8111610ee457610ed7836018611fe0600586901b1617610f9b565b50610eb483826001610fc0565b61ffff8111610f0f57610f02836019611fe0600586901b1617610f9b565b50610eb483826002610fc0565b63ffffffff8111610f3c57610f2f83601a611fe0600586901b1617610f9b565b50610eb483826004610fc0565b67ffffffffffffffff8111610b9a57610f6083601b611fe0600586901b1617610f9b565b50610eb483826008610fc0565b604080518082019091526060815260006020820152610f9483846000015151848551610fe6565b9392505050565b604080518082019091526060815260006020820152610f9483846000015151846110d0565b604080518082019091526060815260006020820152610bb684856000015151858561112c565b604080518082019091526060815260006020820152825182111561100957600080fd5b60208501516110188386611654565b111561104b5761104b8561103b876020015187866110369190611654565b6111ad565b611046906002611757565b6111c4565b60008086518051876020830101935080888701111561106a5787860182525b505050602084015b602084106110aa5780518252611089602083611654565b9150611096602082611654565b90506110a3602085611776565b9350611072565b51815160001960208690036101000a019081169019919091161790525083949350505050565b604080518082019091526060815260006020820152836020015183106111055761110584856020015160026110469190611757565b835180516020858301018481535080851415611122576001810182525b5093949350505050565b60408051808201909152606081526000602082015260208501516111508584611654565b1115611164576111648561103b8685611654565b60006001611174846101006116af565b61117e9190611776565b90508551838682010185831982511617815250805184870111156111a25783860181525b509495945050505050565b6000818311156111be575081610e93565b50919050565b81516111d08383610e2e565b50610eb48382610f6d565b8280546111e79061178d565b90600052602060002090601f016020900481019282611209576000855561124f565b82601f1061122257805160ff191683800117855561124f565b8280016001018555821561124f579182015b8281111561124f578251825591602001919060010190611234565b5061125b92915061129a565b5090565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b5b8082111561125b576000815560010161129b565b80356001600160a01b03811681146112c657600080fd5b919050565b600082601f8301126112db578081fd5b813567ffffffffffffffff808211156112f6576112f66117f8565b604051601f8301601f19908116603f0116810190828211818310171561131e5761131e6117f8565b81604052838152866020858801011115611336578485fd5b8360208701602083013792830160200193909352509392505050565b600080600060608486031215611366578283fd5b61136f846112af565b925060208401359150604084013567ffffffffffffffff811115611391578182fd5b61139d868287016112cb565b9150509250925092565b600080600080600060a086880312156113be578081fd5b6113c7866112af565b97602087013597506040870135966060810135965060800135945092505050565b6000602082840312156113f9578081fd5b81518015158114610f94578182fd5b600060208284031215611419578081fd5b5035919050565b60008060408385031215611432578182fd5b82359150602083013560068110611447578182fd5b809150509250929050565b60008060408385031215611464578182fd5b82359150611474602084016112af565b90509250929050565b600080600060608486031215611491578283fd5b833592506114a1602085016112af565b9150604084013567ffffffffffffffff811115611391578182fd5b60008151808452815b818110156114e1576020818501810151868301820152016114c5565b818111156114f25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e08201819052600090611560838201856114bc565b9b9a5050505050505050505050565b60018060a01b0384168152826020820152606060408201526000610b7360608301846114bc565b8981526001600160a01b038916602082015260408101889052606081018790526080810186905260a081018590526101208101600685106115e757634e487b7160e01b600052602160045260246000fd5b8460c08301528360e08301528215156101008301529a9950505050505050505050565b86815285602082015260c06040820152600061162960c08301876114bc565b6001600160a01b039586166060840152608083019490945250921660a0909201919091529392505050565b60008219821115611667576116676117e2565b500190565b600181815b808511156116a757816000190482111561168d5761168d6117e2565b8085161561169a57918102915b93841c9390800290611671565b509250929050565b6000610f9483836000826116c557506001610e93565b816116d257506000610e93565b81600181146116e857600281146116f25761170e565b6001915050610e93565b60ff841115611703576117036117e2565b50506001821b610e93565b5060208310610133831016604e8410600b8410161715611731575081810a610e93565b61173b838361166c565b806000190482111561174f5761174f6117e2565b029392505050565b6000816000190483118215151615611771576117716117e2565b500290565b600082821015611788576117886117e2565b500390565b600181811c908216806117a157607f821691505b602082108114156111be57634e487b7160e01b600052602260045260246000fd5b6000826117dd57634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209df13f0bda88adb659c340bc1e5437e05269e0d0c486f9704482c03ef0d669a664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E8CFFA2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6E8CFFA2 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x8D3C9445 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xC4E49CD5 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xEFF0F592 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEBC8DA6 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x29E999F4 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x2F2E01F2 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x5996E024 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x196 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x81C995C5D595CDD PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0xA40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998 SWAP2 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x3CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP3 ADD MSTORE SWAP1 POP PUSH1 0xC0 DUP2 ADD DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x41A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x450 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x460 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x4D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP4 MSTORE SWAP1 DUP4 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP4 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x592 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9CDD5C985B98D948109BDBDAD959 PUSH1 0x82 SHL PUSH1 0xC0 DUP3 ADD MSTORE CALLER SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x528441E079E31BF6F9D9A91817469F3269AADFD0E41397F5139151F22D5BB541 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x669 SWAP1 PUSH2 0x178D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x178D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 POP AND DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x717 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x727 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA DUP6 MSTORE DUP7 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP5 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x797 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x11DB JUMP JUMPDEST POP PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP1 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 SWAP6 DUP7 ADD MLOAD PUSH1 0x5 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH17 0x119B1A59DA1D08149959DA5CDD195C9959 PUSH1 0x7A SHL PUSH1 0xC0 DUP6 ADD MSTORE CALLER SWAP1 DUP5 ADD DUP2 SWAP1 MSTORE SWAP1 DUP4 ADD MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH32 0x31E053A200C037C2A0F3A83D8E087EA8CA9962FC3F642170571A92ABC949A13C SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x8EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6C69637920486F6C646572204164647265737320697320696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EA PUSH2 0x9DC DUP5 PUSH2 0xB3A JUMP JUMPDEST ADDRESS PUSH4 0x75E46D3 PUSH1 0xE1 SHL PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH2 0xA22 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1D5B9D1A5B PUSH1 0xDA SHL DUP2 MSTORE POP DUP4 PUSH1 0x80 ADD MLOAD DUP4 PUSH2 0xB7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA36 DUP6 DUP4 PUSH7 0x2386F26FC10000 PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 CALLER DUP10 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP6 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0xB4E JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB5F PUSH2 0x125F JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xB73 DUP2 DUP7 DUP7 DUP7 PUSH2 0xBBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB8B SWAP1 DUP4 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB9A SWAP1 DUP3 PUSH2 0xC12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH4 0x20214CA3 PUSH1 0xE1 SHL PUSH2 0xC22 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBC6 PUSH2 0x125F JUMP JUMPDEST PUSH2 0xBD6 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0xE2E JUMP JUMPDEST POP POP SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC08 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xB9A DUP3 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC1E DUP3 PUSH1 0x0 DUP4 PUSH2 0xE99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x4 SLOAD PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0xA6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24 SWAP2 LOG2 PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x60 ADD MLOAD DUP11 DUP14 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCF9 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x2000575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4000AEA0 SWAP1 PUSH2 0xD61 SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x156F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xE0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x636C65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE1E SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE4E PUSH1 0x20 DUP4 PUSH2 0x17C2 JUMP JUMPDEST ISZERO PUSH2 0xE76 JUMPI PUSH2 0xE5E PUSH1 0x20 DUP4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0xE69 SWAP1 PUSH1 0x20 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0xE73 SWAP1 DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0xEBA JUMPI PUSH2 0xEB4 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0xF9B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0xEE4 JUMPI PUSH2 0xED7 DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x1 PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0xF0F JUMPI PUSH2 0xF02 DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x2 PUSH2 0xFC0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0xF3C JUMPI PUSH2 0xF2F DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x4 PUSH2 0xFC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9A JUMPI PUSH2 0xF60 DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0xF9B JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH1 0x8 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF94 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0xFE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xF94 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xBB6 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1018 DUP4 DUP7 PUSH2 0x1654 JUMP JUMPDEST GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B DUP6 PUSH2 0x103B DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 PUSH2 0x1036 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x1046 SWAP1 PUSH1 0x2 PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x106A JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x10AA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1089 PUSH1 0x20 DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP PUSH2 0x1096 PUSH1 0x20 DUP3 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A3 PUSH1 0x20 DUP6 PUSH2 0x1776 JUMP JUMPDEST SWAP4 POP PUSH2 0x1072 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x1105 JUMPI PUSH2 0x1105 DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x1757 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 EQ ISZERO PUSH2 0x1122 JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1150 DUP6 DUP5 PUSH2 0x1654 JUMP JUMPDEST GT ISZERO PUSH2 0x1164 JUMPI PUSH2 0x1164 DUP6 PUSH2 0x103B DUP7 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1174 DUP5 PUSH2 0x100 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x117E SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0x11A2 JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x11BE JUMPI POP DUP2 PUSH2 0xE93 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x11D0 DUP4 DUP4 PUSH2 0xE2E JUMP JUMPDEST POP PUSH2 0xEB4 DUP4 DUP3 PUSH2 0xF6D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x11E7 SWAP1 PUSH2 0x178D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1209 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x124F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1222 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x124F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x124F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x124F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST POP PUSH2 0x125B SWAP3 SWAP2 POP PUSH2 0x129A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE DUP4 ADD MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x129B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x131E JUMPI PUSH2 0x131E PUSH2 0x17F8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1336 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1366 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x136F DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x139D DUP7 DUP3 DUP8 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13BE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13C7 DUP7 PUSH2 0x12AF JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF94 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1432 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x1447 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1474 PUSH1 0x20 DUP5 ADD PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1491 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x14A1 PUSH1 0x20 DUP6 ADD PUSH2 0x12AF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14C5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14F2 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1560 DUP4 DUP3 ADD DUP6 PUSH2 0x14BC JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14BC JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD PUSH1 0x6 DUP6 LT PUSH2 0x15E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 PUSH1 0xC0 DUP4 ADD MSTORE DUP4 PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP7 DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1629 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 AND PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x17E2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x16A7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168D PUSH2 0x17E2 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x169A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1671 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x16C5 JUMPI POP PUSH1 0x1 PUSH2 0xE93 JUMP JUMPDEST DUP2 PUSH2 0x16D2 JUMPI POP PUSH1 0x0 PUSH2 0xE93 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16E8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16F2 JUMPI PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1703 PUSH2 0x17E2 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xE93 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1731 JUMPI POP DUP2 DUP2 EXP PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x173B DUP4 DUP4 PUSH2 0x166C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x174F JUMPI PUSH2 0x174F PUSH2 0x17E2 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1771 PUSH2 0x17E2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x17E2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 CALL EXTCODEHASH SIGNEXTEND 0xDA DUP9 0xAD 0xB6 MSIZE 0xC3 BLOCKHASH 0xBC 0x1E SLOAD CALLDATACOPY 0xE0 MSTORE PUSH10 0xE0D0C486F9704482C03E CREATE 0xD6 PUSH10 0xA664736F6C6343000804 STOP CALLER ",
							"sourceMap": "208:4701:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:290;;;;;;:::i;:::-;;:::i;:::-;;750:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5890:25:14;;;5878:2;5863:18;750:67:12;;;;;;;;2504:841;;;;;;:::i;:::-;;:::i;622:67::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;543:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1765:698::-;;;;;;:::i;:::-;;:::i;517:20::-;;;;;-1:-1:-1;;;;;517:20:12;;;;;;-1:-1:-1;;;;;4484:32:14;;;4466:51;;4454:2;4439:18;517:20:12;4421:102:14;3351:870:12;;;;;;:::i;:::-;;:::i;695:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;695:49:12;;;;;;;;;;;;;;;;;;;;;4227:290;10427:26:1;;;;:15;:26;;;;;;;;-1:-1:-1;;;;;10427:26:1;10413:10;:40;10405:105;;;;-1:-1:-1;;;10405:105:1;;7237:2:14;10405:105:1;;;7219:21:14;7276:2;7256:18;;;7249:30;7315:34;7295:18;;;7288:62;-1:-1:-1;;;7366:18:14;;;7359:38;7414:19;;10405:105:1;;;;;;;;;10523:26;;;;:15;:26;;;;;;10516:33;;-1:-1:-1;;;;;;10516:33:1;;;10560:26;10539:9;;10560:26;;;4377::12::1;4406:18:::0;;;:6:::1;:18;::::0;;;;;;;4377:47;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4377:47:12::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;::::1;;;;-1:-1:-1::0;;;4377:47:12::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;4377:47:12::1;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;::::1;4434:13:::0;::::1;:20:::0;4377:47;-1:-1:-1;4464:16:12::1;::::0;::::1;4496:13:::0;4464:46:::1;::::0;::::1;;;;-1:-1:-1::0;;;4464:46:12::1;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4464:46:12::1;;;;;;;;;::::0;;-1:-1:-1;;;;;4227:290:12:o;2504:841::-;2708:7;2727:20;2750:23;:13;918:14:11;;827:112;2750:23:12;2727:46;;2783:25;:13;1032:19:11;;1050:1;1032:19;;;945:123;2783:25:12;2865:267;;;;;;;;2894:12;2865:267;;;;2920:17;-1:-1:-1;;;;;2865:267:12;;;;;2951:20;2865:267;;;;2985:12;2865:267;;;;3011:10;2865:267;;;;3035:15;2865:267;;;;3077:1;3064:15;;;;;;-1:-1:-1;;;3064:15:12;;;;;;;;;2865:267;;;;;;-1:-1:-1;;;2865:267:12;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:267:12;;;;;;;2819:24;;;:10;:24;;;;;-1:-1:-1;;;;;2819:43:12;;;;;;;;;;;;:313;;;;;;;;2865:267;2819:313;;;;;-1:-1:-1;;;;;;2819:313:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:43;;:313;;;;-1:-1:-1;;2819:313:12;;;;2865:267;2819:313;;;;;;;-1:-1:-1;;;2819:313:12;;;;;;;;;;;;;-1:-1:-1;2819:313:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2819:313:12;;;;;;;;;;3148:160;;;10212:25:14;;;10273:3;10268:2;10253:18;;10246:31;;;10314:2;10293:19;;;10286:31;-1:-1:-1;;;10348:3:14;10333:19;;10326:47;3235:10:12;10463:18:14;;;10456:43;;;-1:-1:-1;10515:18:14;;10508:43;;;;3283:15:12;-1:-1:-1;10567:19:14;;10560:35;3148:160:12;;10390:19:14;3148:160:12;;;;;;;3326:12;2504:841;-1:-1:-1;;;;;;2504:841:12:o;622:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;622:67:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;622:67:12;;;;;;-1:-1:-1;622:67:12;;:::o;1765:698::-;1926:7;1945:17;1965:20;:10;918:14:11;;827:112;1965:20:12;1945:40;;1995:22;:10;1032:19:11;;1050:1;1032:19;;;945:123;1995:22:12;2065:194;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2065:194:12;;;;;;;;2210:15;2065:194;;;;2239:10;2065:194;;;;-1:-1:-1;2028:18:12;;;:7;:18;;;;;:34;;;;;;;;;;:231;;;;;;;;;;;;;;2065:194;;2028:34;:231;;;;;;;;;:::i;:::-;-1:-1:-1;2028:231:12;;;;;;;;;;-1:-1:-1;;;;;;2028:231:12;;;-1:-1:-1;;;;;2028:231:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2274:155;;;9521:25:14;;;9577:2;9562:18;;9555:31;;;9623:2;9602:19;;;9595:31;;;;-1:-1:-1;;;9657:3:14;9642:19;;9635:48;2356:10:12;9773:18:14;;;9766:43;;;9825:18;;;9818:43;2404:15:12;9877:19:14;;;9870:35;2274:155:12;;9715:3:14;9700:19;2274:155:12;;;;;;;2447:9;1765:698;-1:-1:-1;;;;1765:698:12:o;3351:870::-;3489:26;3518:24;;;:10;:24;;;;;;;;3543:10;3518:36;;;;;;;3489:65;;;;;;;;;;;;;;;-1:-1:-1;;;;;3489:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3489:65:12;;;;;;;;;;;;;;;-1:-1:-1;;;3489:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3585:13;;;3489:65;;-1:-1:-1;;;;;;3585:27:12;3564:106;;;;-1:-1:-1;;;3564:106:12;;6128:2:14;3564:106:12;;;6110:21:14;;;6147:18;;;6140:30;6206:34;6186:18;;;6179:62;6258:18;;3564:106:12;6100:182:14;3564:106:12;3688:13;;;;:22;3680:50;;;;-1:-1:-1;;;3680:50:12;;6893:2:14;3680:50:12;;;6875:21:14;6932:2;6912:18;;;6905:30;-1:-1:-1;;;6951:18:14;;;6944:45;7006:18;;3680:50:12;6865:165:14;3680:50:12;3741:25;3769:139;3801:23;3817:6;3801:15;:23::i;:::-;3846:4;-1:-1:-1;;;3769:18:12;:139::i;:::-;3741:167;;3918:35;;;;;;;;;;;;;;-1:-1:-1;;;3918:35:12;;;3939:3;:13;;;3918:3;:11;;:35;;;;;:::i;:::-;3963:13;3979:102;4012:14;4040:3;482:13;3979:19;:102::i;:::-;3963:118;;4107:3;4091:6;:13;4098:5;4091:13;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4091:19:12;;;;;-1:-1:-1;;;;;4091:19:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4091:19:12;;;;;;;;;;;;;-1:-1:-1;4091:19:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4091:19:12;;;;;;;;;;-1:-1:-1;4120:26:12;;;:12;:26;;;;;;;;4147:10;4120:38;;;;;;;;:46;;;;-1:-1:-1;;;;3351:870:12:o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;4574:333:12:-;4759:26;;4667:14;;4738:6;;4755:72;;-1:-1:-1;4813:3:12;;4845:56;-1:-1:-1;;4845:56:12:o;4755:72::-;-1:-1:-1;;4887:2:12;4875:15;4869:22;;4845:56::o;1807:306:1:-;1968:21;;:::i;:::-;2004:25;;:::i;:::-;2042:66;:3;2057:6;2065:15;2082:25;2042:14;:66::i;:::-;2035:73;1807:306;-1:-1:-1;;;;;1807:306:1:o;3127:181:0:-;3245:8;;;;:26;;3267:3;3245:21;:26::i;:::-;3277:8;;;;:26;;3297:5;3277:19;:26::i;:::-;3127:181;;;:::o;3115:280:1:-;3260:17;3299:91;3310:13;3325:3;3330:7;754:1;-1:-1:-1;;;3299:10:1;:91::i;:::-;3292:98;3115:280;-1:-1:-1;;;;3115:280:1:o;961:371:0:-;1122:21;;:::i;:::-;1158:46;1176:4;:8;;;347:3;1158:17;:46::i;:::-;-1:-1:-1;;1210:15:0;;;-1:-1:-1;;;;;1231:35:0;:20;;;:35;-1:-1:-1;;;;;;1272:38:0;:23;;;:38;1210:15;961:371::o;2757:207:9:-;2874:55;2885:3;371:1;2915:5;2909:19;2874:10;:55::i;:::-;2935:24;:3;2952:5;2935:10;:24::i;1513:149::-;1619:38;1630:3;222:1;1651:5;1619:10;:38::i;:::-;1513:149;;:::o;5149:943:1:-;5411:12;;5388:36;;-1:-1:-1;;5405:4:1;4198:2:14;4194:15;4190:53;5388:36:1;;;4178:66:14;4260:12;;;4253:28;;;;5334:17:1;;4297:12:14;;5388:36:1;;;;;;-1:-1:-1;;5388:36:1;;;;;;5378:47;;5388:36;5378:47;;;;5443:12;;5431:9;;;:24;5461:26;;;;:15;:26;;;;;;:42;;-1:-1:-1;;;;;;5461:42:1;-1:-1:-1;;;;;5461:42:1;;;;;5514:26;;5378:47;;-1:-1:-1;5378:47:1;;5514:26;;;5546:24;5603:12;701:1;645;5835:3;:6;;;5849:3;:19;;;5876:3;:22;;;5906:3;:9;;;5923:11;5942:3;:7;;;:11;;;5573:381;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5573:381:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5573:381:1;-1:-1:-1;;;;;;5573:381:1;;;;;;;;;;5968:3;;:56;;-1:-1:-1;;;5968:56:1;;5573:381;;-1:-1:-1;;;;;;5968:3:1;;;;:19;;:56;;5988:13;;6003:7;;5573:381;;5968:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5960:104;;;;-1:-1:-1;;;5960:104:1;;6489:2:14;5960:104:1;;;6471:21:14;6528:2;6508:18;;;6501:30;6567:34;6547:18;;;6540:62;-1:-1:-1;;;6618:18:14;;;6611:33;6661:19;;5960:104:1;6461:225:14;5960:104:1;6086:1;6070:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;5149:943:1;;;-1:-1:-1;;;;;;;5149:943:1:o;979:433:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;1112:13:8;1123:2;1112:8;:13;:::i;:::-;:18;1108:71;;1158:13;1169:2;1158:8;:13;:::i;:::-;1152:20;;:2;:20;:::i;:::-;1140:32;;;;:::i;:::-;;;1108:71;-1:-1:-1;1226:12:8;;;;:23;;;1289:4;1283:11;;1301:16;;;-1:-1:-1;1324:14:8;;1366:18;;1358:27;;;1345:41;;1226:3;979:433;;;;;:::o;670:667:9:-;804:2;795:5;:11;792:541;;816:44;:3;838:20;848:1;839:10;;;838:20;;;816:15;:44::i;:::-;;3127:181:0;;;:::o;792:541:9:-;885:4;876:5;:13;873:460;;899:41;:3;936:2;922:10;931:1;922:10;;;;921:17;899:15;:41::i;:::-;-1:-1:-1;948:23:9;:3;962:5;969:1;948:13;:23::i;873:460::-;996:6;987:5;:15;984:349;;1012:41;:3;1049:2;1035:10;1044:1;1035:10;;;;1034:17;1012:15;:41::i;:::-;-1:-1:-1;1061:23:9;:3;1075:5;1082:1;1061:13;:23::i;984:349::-;1109:10;1100:5;:19;1097:236;;1129:41;:3;1166:2;1152:10;1161:1;1152:10;;;;1151:17;1129:15;:41::i;:::-;-1:-1:-1;1178:23:9;:3;1192:5;1199:1;1178:13;:23::i;1097:236::-;1226:18;1217:5;:27;1214:119;;1254:41;:3;1291:2;1277:10;1286:1;1277:10;;;;1276:17;1254:15;:41::i;:::-;-1:-1:-1;1303:23:9;:3;1317:5;1324:1;1303:13;:23::i;4823:193:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;4966:45:8;4972:3;4977;:7;;;:14;4993:4;4999;:11;4966:5;:45::i;:::-;4959:52;4823:193;-1:-1:-1;;;4823:193:8:o;6218:182::-;-1:-1:-1;;;;;;;;;;;;;;;;;6358:37:8;6369:3;6374;:7;;;:14;6390:4;6358:10;:37::i;10212:196::-;-1:-1:-1;;;;;;;;;;;;;;;;;10363:40:8;10372:3;10377;:7;;;:14;10393:4;10399:3;10363:8;:40::i;2854:1222::-;-1:-1:-1;;;;;;;;;;;;;;;;;3031:4:8;:11;3024:3;:18;;3016:27;;;;;;3066:12;;;;3054:9;3060:3;3054;:9;:::i;:::-;:24;3050:90;;;3088:45;3095:3;3100:28;3104:3;:12;;;3124:3;3118;:9;;;;:::i;:::-;3100:3;:28::i;:::-;:32;;3131:1;3100:32;:::i;:::-;3088:6;:45::i;:::-;3146:9;3161:8;3255:3;3249:10;3326:6;3320:13;3442:3;3437:2;3429:6;3425:15;3421:25;3413:33;;3526:6;3520:3;3515;3511:13;3508:25;3505:2;;;3568:3;3563;3559:13;3551:6;3544:29;3505:2;-1:-1:-1;;;3605:2:8;3595:13;;3666:129;3680:2;3673:3;:9;3666:129;;3735:10;;3722:24;;3761:10;3769:2;3729:4;3761:10;:::i;:::-;;-1:-1:-1;3779:9:8;3786:2;3779:9;;:::i;:::-;;-1:-1:-1;3684:9:8;3691:2;3684:9;;:::i;:::-;;;3666:129;;;3928:10;3979:11;;-1:-1:-1;;3868:2:8;:8;;;3860:3;:17;3859:23;3975:22;;;3940:9;;3924:26;;;;4019:21;4006:35;;-1:-1:-1;4068:3:8;2854:1222;;;;;;:::o;5310:661::-;-1:-1:-1;;;;;;;;;;;;;;;;;5467:3:8;:12;;;5460:3;:19;5456:69;;5489:29;5496:3;5501;:12;;;5516:1;5501:16;;;;:::i;5489:29::-;5611:3;5605:10;5682:6;5676:13;5794:2;5788:3;5780:6;5776:16;5772:25;5818:4;5812;5804:19;;5889:6;5884:3;5881:15;5878:2;;;5934:1;5926:6;5922:14;5914:6;5907:30;5878:2;-1:-1:-1;5963:3:8;;5310:661;-1:-1:-1;;;;5310:661:8:o;9271:690::-;-1:-1:-1;;;;;;;;;;;;;;;;;9443:12:8;;;;9431:9;9437:3;9431;:9;:::i;:::-;:24;9427:73;;;9465:28;9472:3;9478:9;9484:3;9478;:9;:::i;9465:28::-;9506:9;9533:1;9519:10;9526:3;9519;:10;:::i;:::-;9518:16;;;;:::i;:::-;9506:28;;9620:3;9614:10;9735:3;9729;9721:6;9717:16;9713:26;9791:4;9783;9779:9;9772:4;9766:11;9762:27;9759:37;9753:4;9746:51;;9879:6;9873:13;9867:3;9862;9858:13;9855:32;9852:2;;;9922:3;9917;9913:13;9905:6;9898:29;9852:2;-1:-1:-1;9953:3:8;;9271:690;-1:-1:-1;;;;;9271:690:8:o;2020:152::-;2101:4;2128:1;2124;:5;2120:34;;;-1:-1:-1;2146:1:8;2139:8;;2120:34;-1:-1:-1;2166:1:8;2020:152;-1:-1:-1;2020:152:8:o;1841:175::-;1954:7;;1967:19;1954:3;1977:8;1967:4;:19::i;:::-;;1992;1999:3;2004:6;1992;:19::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:173:14;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:739::-;235:5;288:3;281:4;273:6;269:17;265:27;255:2;;310:5;303;296:20;255:2;350:6;337:20;376:18;413:2;409;406:10;403:2;;;419:18;;:::i;:::-;494:2;488:9;462:2;548:13;;-1:-1:-1;;544:22:14;;;568:2;540:31;536:40;524:53;;;592:18;;;612:22;;;589:46;586:2;;;638:18;;:::i;:::-;678:10;674:2;667:22;713:2;705:6;698:18;759:3;752:4;747:2;739:6;735:15;731:26;728:35;725:2;;;780:5;773;766:20;725:2;848;841:4;833:6;829:17;822:4;814:6;810:17;797:54;871:15;;;888:4;867:26;860:41;;;;-1:-1:-1;875:6:14;245:686;-1:-1:-1;;;245:686:14:o;936:484::-;1023:6;1031;1039;1092:2;1080:9;1071:7;1067:23;1063:32;1060:2;;;1113:6;1105;1098:22;1060:2;1141:29;1160:9;1141:29;:::i;:::-;1131:39;;1217:2;1206:9;1202:18;1189:32;1179:42;;1272:2;1261:9;1257:18;1244:32;1299:18;1291:6;1288:30;1285:2;;;1336:6;1328;1321:22;1285:2;1364:50;1406:7;1397:6;1386:9;1382:22;1364:50;:::i;:::-;1354:60;;;1050:370;;;;;:::o;1425:470::-;1520:6;1528;1536;1544;1552;1605:3;1593:9;1584:7;1580:23;1576:33;1573:2;;;1627:6;1619;1612:22;1573:2;1655:29;1674:9;1655:29;:::i;:::-;1645:39;1731:2;1716:18;;1703:32;;-1:-1:-1;1782:2:14;1767:18;;1754:32;;1833:2;1818:18;;1805:32;;-1:-1:-1;1884:3:14;1869:19;1856:33;;-1:-1:-1;1563:332:14;-1:-1:-1;;;1563:332:14:o;1900:297::-;1967:6;2020:2;2008:9;1999:7;1995:23;1991:32;1988:2;;;2041:6;2033;2026:22;1988:2;2078:9;2072:16;2131:5;2124:13;2117:21;2110:5;2107:32;2097:2;;2158:6;2150;2143:22;2202:190;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:2;;;2335:6;2327;2320:22;2282:2;-1:-1:-1;2363:23:14;;2272:120;-1:-1:-1;2272:120:14:o;2397:361::-;2482:6;2490;2543:2;2531:9;2522:7;2518:23;2514:32;2511:2;;;2564:6;2556;2549:22;2511:2;2605:9;2592:23;2582:33;;2665:2;2654:9;2650:18;2637:32;2698:1;2691:5;2688:12;2678:2;;2719:6;2711;2704:22;2678:2;2747:5;2737:15;;;2501:257;;;;;:::o;2763:264::-;2831:6;2839;2892:2;2880:9;2871:7;2867:23;2863:32;2860:2;;;2913:6;2905;2898:22;2860:2;2954:9;2941:23;2931:33;;2983:38;3017:2;3006:9;3002:18;2983:38;:::i;:::-;2973:48;;2850:177;;;;;:::o;3032:484::-;3119:6;3127;3135;3188:2;3176:9;3167:7;3163:23;3159:32;3156:2;;;3209:6;3201;3194:22;3156:2;3250:9;3237:23;3227:33;;3279:38;3313:2;3302:9;3298:18;3279:38;:::i;:::-;3269:48;;3368:2;3357:9;3353:18;3340:32;3395:18;3387:6;3384:30;3381:2;;;3432:6;3424;3417:22;3521:475;3562:3;3600:5;3594:12;3627:6;3622:3;3615:19;3652:3;3664:162;3678:6;3675:1;3672:13;3664:162;;;3740:4;3796:13;;;3792:22;;3786:29;3768:11;;;3764:20;;3757:59;3693:12;3664:162;;;3844:6;3841:1;3838:13;3835:2;;;3910:3;3903:4;3894:6;3889:3;3885:16;3881:27;3874:40;3835:2;-1:-1:-1;3978:2:14;3957:15;-1:-1:-1;;3953:29:14;3944:39;;;;3985:4;3940:50;;3570:426;-1:-1:-1;;3570:426:14:o;4528:821::-;-1:-1:-1;;;;;4929:15:14;;;4911:34;;4976:2;4961:18;;4954:34;;;5019:2;5004:18;;4997:34;;;5067:15;;5062:2;5047:18;;5040:43;-1:-1:-1;;;;;;5120:33:14;;5114:3;5099:19;;5092:62;4891:3;5170:19;;5163:35;;;5229:3;5214:19;;5207:35;;;4861:3;5136;5258:19;;5251:31;;;4832:4;;5299:44;5324:18;;;5316:6;5299:44;:::i;:::-;5291:52;4841:508;-1:-1:-1;;;;;;;;;;;4841:508:14:o;5354:385::-;5586:1;5582;5577:3;5573:11;5569:19;5561:6;5557:32;5546:9;5539:51;5626:6;5621:2;5610:9;5606:18;5599:34;5669:2;5664;5653:9;5649:18;5642:30;5520:4;5689:44;5729:2;5718:9;5714:18;5706:6;5689:44;:::i;7626:955::-;8006:25;;;-1:-1:-1;;;;;8067:32:14;;8062:2;8047:18;;8040:60;8131:2;8116:18;;8109:34;;;8174:2;8159:18;;8152:34;;;8217:3;8202:19;;8195:35;;;8087:3;8246:19;;8239:35;;;7993:3;7978:19;;8304:1;8293:13;;8283:2;;8349:10;8344:3;8340:20;8337:1;8330:31;8384:4;8381:1;8374:15;8412:4;8409:1;8402:15;8283:2;8464:6;8458:3;8447:9;8443:19;8436:35;8508:6;8502:3;8491:9;8487:19;8480:35;8566:6;8559:14;8552:22;8546:3;8535:9;8531:19;8524:51;7960:621;;;;;;;;;;;;:::o;8586:634::-;8875:6;8864:9;8857:25;8918:6;8913:2;8902:9;8898:18;8891:34;8961:3;8956:2;8945:9;8941:18;8934:31;8838:4;8982:45;9022:3;9011:9;9007:19;8999:6;8982:45;:::i;:::-;-1:-1:-1;;;;;9101:15:14;;;9096:2;9081:18;;9074:43;9148:3;9133:19;;9126:35;;;;-1:-1:-1;9198:15:14;;9054:3;9177:19;;;9170:44;;;;9126:35;8974:53;-1:-1:-1;;;8847:373:14:o;10606:128::-;10646:3;10677:1;10673:6;10670:1;10667:13;10664:2;;;10683:18;;:::i;:::-;-1:-1:-1;10719:9:14;;10654:80::o;10739:422::-;10828:1;10871:5;10828:1;10885:270;10906:7;10896:8;10893:21;10885:270;;;10965:4;10961:1;10957:6;10953:17;10947:4;10944:27;10941:2;;;10974:18;;:::i;:::-;11024:7;11014:8;11010:22;11007:2;;;11044:16;;;;11007:2;11123:22;;;;11083:15;;;;10885:270;;;10889:3;10803:358;;;;;:::o;11166:131::-;11226:5;11255:36;11282:8;11276:4;11351:5;11381:8;11371:2;;-1:-1:-1;11422:1:14;11436:5;;11371:2;11470:4;11460:2;;-1:-1:-1;11507:1:14;11521:5;;11460:2;11552:4;11570:1;11565:59;;;;11638:1;11633:130;;;;11545:218;;11565:59;11595:1;11586:10;;11609:5;;;11633:130;11670:3;11660:8;11657:17;11654:2;;;11677:18;;:::i;:::-;-1:-1:-1;;11733:1:14;11719:16;;11748:5;;11545:218;;11847:2;11837:8;11834:16;11828:3;11822:4;11819:13;11815:36;11809:2;11799:8;11796:16;11791:2;11785:4;11782:12;11778:35;11775:77;11772:2;;;-1:-1:-1;11884:19:14;;;11916:5;;11772:2;11963:34;11988:8;11982:4;11963:34;:::i;:::-;12033:6;12029:1;12025:6;12021:19;12012:7;12009:32;12006:2;;;12044:18;;:::i;:::-;12082:20;;11361:747;-1:-1:-1;;;11361:747:14:o;12113:168::-;12153:7;12219:1;12215;12211:6;12207:14;12204:1;12201:21;12196:1;12189:9;12182:17;12178:45;12175:2;;;12226:18;;:::i;:::-;-1:-1:-1;12266:9:14;;12165:116::o;12286:125::-;12326:4;12354:1;12351;12348:8;12345:2;;;12359:18;;:::i;:::-;-1:-1:-1;12396:9:14;;12335:76::o;12416:380::-;12495:1;12491:12;;;;12538;;;12559:2;;12613:4;12605:6;12601:17;12591:27;;12559:2;12666;12658:6;12655:14;12635:18;12632:38;12629:2;;;12712:10;12707:3;12703:20;12700:1;12693:31;12747:4;12744:1;12737:15;12775:4;12772:1;12765:15;12801:209;12833:1;12859;12849:2;;-1:-1:-1;;;12884:31:14;;12938:4;12935:1;12928:15;12966:4;12891:1;12956:15;12849:2;-1:-1:-1;12995:9:14;;12839:171::o;13015:127::-;13076:10;13071:3;13067:20;13064:1;13057:31;13107:4;13104:1;13097:15;13131:4;13128:1;13121:15;13147:127;13208:10;13203:3;13199:20;13196:1;13189:31;13239:4;13236:1;13229:15;13263:4;13260:1;13253:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1242400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bookInsurance(address,bytes32,uint256,uint256,uint256)": "208054",
								"claimRequest(uint256,address)": "1329",
								"claims(bytes32)": "8056",
								"flights(uint256,address)": "infinite",
								"fulfillClaimInquiry(bytes32,uint8)": "30975",
								"insurances(uint256,address)": "8147",
								"owner()": "1081",
								"registerFlights(address,bytes32,string)": "infinite",
								"submitMyClaim(uint256,address,string)": "infinite"
							},
							"internal": {
								"stringToBytes32(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1195,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 824,
									"end": 982,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 824,
									"end": 982,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7422,
									"end": 7425,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7457,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 890,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 890,
									"end": 908,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 898,
									"end": 908,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 890,
									"end": 908,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 890,
									"end": 908,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 918,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 918,
									"end": 928,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 918,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 918,
									"end": 938,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 918,
									"end": 938,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 938,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 918,
									"end": 938,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 918,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18446744073709551673"
								},
								{
									"begin": 918,
									"end": 938,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 918,
									"end": 940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 940,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 918,
									"end": 940,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 918,
									"end": 940,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 918,
									"end": 940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 950,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 950,
									"end": 963,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 950,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 950,
									"end": 973,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 950,
									"end": 973,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 950,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18446744073709551673"
								},
								{
									"begin": 950,
									"end": 973,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 950,
									"end": 975,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 950,
									"end": 975,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 950,
									"end": 975,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 950,
									"end": 975,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 950,
									"end": 975,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 824,
									"end": 982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 4909,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209df13f0bda88adb659c340bc1e5437e05269e0d0c486f9704482c03ef0d669a664736f6c63430008040033",
									".code": [
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "6E8CFFA2"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "6E8CFFA2"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "8D3C9445"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "C4E49CD5"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "EFF0F592"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "EBC8DA6"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "29E999F4"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "2F2E01F2"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "5996E024"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 208,
											"end": 4909,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 5915,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5915,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 750,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 817,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 750,
											"end": 817,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 543,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 543,
											"end": 616,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 517,
											"end": 537,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 537,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4516,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4517,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 517,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4421,
											"end": 4523,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 695,
											"end": 744,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10423,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10453,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7249,
											"end": 7279,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7315,
											"end": 7349,
											"name": "PUSH",
											"source": 14,
											"value": "536F75726365206D75737420626520746865206F7261636C65206F6620746865"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7288,
											"end": 7350,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81C995C5D595CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7359,
											"end": 7397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7414,
											"end": 7433,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7414,
											"end": 7433,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10405,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10549,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "PUSH",
											"source": 1,
											"value": "A40AD10B942505047C532A7399BF5EAC2768B11B7155B40EC80309AEA567F998"
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4434,
											"end": 4447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4454,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4480,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4464,
											"end": 4480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4227,
											"end": 4517,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 2937,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2971,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 3021,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3035,
											"end": 3050,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2862,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 3132,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10273,
											"end": 10276,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10268,
											"end": 10270,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10246,
											"end": 10277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10246,
											"end": 10277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10246,
											"end": 10277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10314,
											"end": 10316,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 10293,
											"end": 10312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10293,
											"end": 10312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10293,
											"end": 10312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10317,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD5C985B98D948109BDBDAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10348,
											"end": 10351,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 10333,
											"end": 10352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10333,
											"end": 10352,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10326,
											"end": 10373,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3235,
											"end": 3245,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10456,
											"end": 10499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10456,
											"end": 10499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10456,
											"end": 10499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10551,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10551,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10551,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10551,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10567,
											"end": 10586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10567,
											"end": 10586,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10560,
											"end": 10595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "PUSH",
											"source": 12,
											"value": "528441E079E31BF6F9D9A91817469F3269AADFD0E41397F5139151F22D5BB541"
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3308,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 3345,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 622,
											"end": 689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 622,
											"end": 689,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1965,
											"end": 1975,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1965,
											"end": 1985,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1965,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 1985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 1985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1995,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2225,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2249,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2035,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2259,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2259,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9546,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9521,
											"end": 9546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9521,
											"end": 9546,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9562,
											"end": 9580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9562,
											"end": 9580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9586,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9586,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9623,
											"end": 9625,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9602,
											"end": 9621,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9602,
											"end": 9621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9602,
											"end": 9621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119B1A59DA1D08149959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9657,
											"end": 9660,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 9642,
											"end": 9661,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9642,
											"end": 9661,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9635,
											"end": 9683,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2356,
											"end": 2366,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9809,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9809,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9818,
											"end": 9861,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2419,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9896,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9877,
											"end": 9896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9877,
											"end": 9896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9870,
											"end": 9905,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "31E053A200C037C2A0F3A83D8E087EA8CA9962FC3F642170571A92ABC949A13C"
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9718,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9700,
											"end": 9719,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2429,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1765,
											"end": 2463,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3528,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3554,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6110,
											"end": 6131,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6140,
											"end": 6170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6206,
											"end": 6240,
											"name": "PUSH",
											"source": 14,
											"value": "506F6C69637920486F6C646572204164647265737320697320696E76616C6964"
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6179,
											"end": 6241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6100,
											"end": 6282,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3564,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3688,
											"end": 3710,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6875,
											"end": 6896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6932,
											"end": 6934,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6905,
											"end": 6935,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E4818DB185A5B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6944,
											"end": 6989,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6865,
											"end": 7030,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3680,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3801,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "75E46D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3769,
											"end": 3908,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3908,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3769,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B9D1A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3942,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3952,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3939,
											"end": 3952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3952,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3918,
											"end": 3929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3918,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 4012,
											"end": 4026,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 482,
											"end": 495,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 3979,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3979,
											"end": 4081,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4081,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3979,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4104,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4132,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4158,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4166,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4166,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4166,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 4221,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4574,
											"end": 4907,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4574,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4785,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4785,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4667,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4755,
											"end": 4827,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4755,
											"end": 4827,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4755,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 2113,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1807,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2004,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2004,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2004,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2042,
											"end": 2045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2107,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2108,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 2113,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 2113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3245,
											"end": 3253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3285,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3277,
											"end": 3285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3277,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3395,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3115,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3310,
											"end": 3323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20214CA3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3390,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3395,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3115,
											"end": 3395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1332,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 961,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 347,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1158,
											"end": 1204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1204,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1158,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1231,
											"end": 1266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1332,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2757,
											"end": 2964,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2757,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2885,
											"end": 2888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2874,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2935,
											"end": 2938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2935,
											"end": 2959,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1513,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1619,
											"end": 1657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1619,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1662,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4194,
											"end": 4209,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4243,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "PUSH",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4281,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "PUSH",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5431,
											"end": 5440,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5487,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "A6745906207AFB96A5801B8E5711FD7B74C5780CE893A973806E179D675BBE24"
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5838,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5852,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5945,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5949,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5942,
											"end": 5949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5953,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2000575"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "PUSH",
											"source": 1,
											"value": "4000AEA0"
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6010,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5968,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6491,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6528,
											"end": 6530,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6501,
											"end": 6531,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6567,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261"
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6540,
											"end": 6602,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6611,
											"end": 6644,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6661,
											"end": 6680,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6661,
											"end": 6680,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6461,
											"end": 6686,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5960,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6070,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 6092,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1112,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1108,
											"end": 1179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1166,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1152,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1179,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1108,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1293,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1317,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1317,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1324,
											"end": 1338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1412,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 1337,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 670,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 792,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 792,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 816,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 816,
											"end": 819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 838,
											"end": 858,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 839,
											"end": 849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 839,
											"end": 849,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 838,
											"end": 858,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 838,
											"end": 858,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 838,
											"end": 858,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 816,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 816,
											"end": 860,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 860,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 816,
											"end": 860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3308,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 792,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 792,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 876,
											"end": 881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 876,
											"end": 889,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 873,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 873,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 899,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 899,
											"end": 902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 936,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 922,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "1FE0"
										},
										{
											"begin": 931,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 922,
											"end": 932,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 922,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 932,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 922,
											"end": 932,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 921,
											"end": 938,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 899,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 899,
											"end": 940,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 940,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 899,
											"end": 940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 962,
											"end": 967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 948,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 873,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 987,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1002,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 984,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1012,
											"end": 1015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "PUSH",
											"source": 9,
											"value": "1FE0"
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1012,
											"end": 1053,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1012,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1061,
											"end": 1064,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1061,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 984,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1119,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1097,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1168,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "PUSH",
											"source": 9,
											"value": "1FE0"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1168,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1129,
											"end": 1170,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1129,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1178,
											"end": 1181,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1178,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1097,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1244,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1214,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1254,
											"end": 1257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSH",
											"source": 9,
											"value": "1FE0"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1254,
											"end": 1295,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1254,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1303,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1303,
											"end": 1306,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1303,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1303,
											"end": 1326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 5016,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4823,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4966,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 4997,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5003,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 4966,
											"end": 5011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 5011,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4966,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 5011,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 5016,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 5016,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6218,
											"end": 6400,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6218,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6358,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6377,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6381,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6388,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6390,
											"end": 6394,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6358,
											"end": 6395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10408,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10212,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 10372,
											"end": 10375,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10380,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10391,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10402,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10363,
											"end": 10403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3042,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3016,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3060,
											"end": 3063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3078,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3140,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3050,
											"end": 3140,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3121,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3118,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3100,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3132,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3088,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3259,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3333,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3518,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3533,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3573,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3608,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3595,
											"end": 3608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3722,
											"end": 3746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3722,
											"end": 3746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3691,
											"end": 3693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3666,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3938,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3990,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3868,
											"end": 3876,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3876,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3863,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3997,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4019,
											"end": 4040,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4041,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 4076,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5310,
											"end": 5971,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5310,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5470,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5479,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5456,
											"end": 5525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5496,
											"end": 5499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5489,
											"end": 5518,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5489,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5614,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5615,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5689,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5791,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5772,
											"end": 5797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5884,
											"end": 5887,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5896,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5935,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 5920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5907,
											"end": 5937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5971,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5971,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9271,
											"end": 9961,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9271,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9434,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 9431,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9431,
											"end": 9455,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9427,
											"end": 9500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9427,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 9427,
											"end": 9500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9465,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 9472,
											"end": 9475,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 9484,
											"end": 9487,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9478,
											"end": 9487,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9465,
											"end": 9493,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 9465,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9526,
											"end": 9529,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9522,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9519,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 9518,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9620,
											"end": 9623,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9614,
											"end": 9624,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9735,
											"end": 9738,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9729,
											"end": 9732,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9717,
											"end": 9733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9791,
											"end": 9795,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9783,
											"end": 9787,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9766,
											"end": 9777,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9789,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9759,
											"end": 9796,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9873,
											"end": 9886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9867,
											"end": 9870,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9865,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9920,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9898,
											"end": 9927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9271,
											"end": 9961,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9271,
											"end": 9961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2020,
											"end": 2172,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2020,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2146,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2139,
											"end": 2147,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2020,
											"end": 2172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2172,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 2016,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1841,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1985,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1999,
											"end": 2002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1992,
											"end": 2011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "242"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "244"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "112"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "244"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "246"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "246"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 931,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 192,
											"end": 931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 235,
											"end": 240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 291,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 281,
											"end": 285,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 269,
											"end": 286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 265,
											"end": 292,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 255,
											"end": 257,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 310,
											"end": 315,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 303,
											"end": 308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 296,
											"end": 316,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 255,
											"end": 257,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 255,
											"end": 257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 337,
											"end": 357,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 415,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 409,
											"end": 411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 406,
											"end": 416,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 403,
											"end": 405,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 403,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 403,
											"end": 405,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 419,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 419,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 419,
											"end": 437,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 419,
											"end": 437,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 419,
											"end": 437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 462,
											"end": 464,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 548,
											"end": 561,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 544,
											"end": 566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 544,
											"end": 566,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 544,
											"end": 566,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 568,
											"end": 570,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 540,
											"end": 571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 536,
											"end": 576,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 524,
											"end": 577,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 524,
											"end": 577,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 524,
											"end": 577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 592,
											"end": 610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 592,
											"end": 610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 592,
											"end": 610,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 612,
											"end": 634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 612,
											"end": 634,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 612,
											"end": 634,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 589,
											"end": 635,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 586,
											"end": 588,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 586,
											"end": 588,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 678,
											"end": 688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 674,
											"end": 676,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 689,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 713,
											"end": 715,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 698,
											"end": 716,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 759,
											"end": 762,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 749,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 735,
											"end": 750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 731,
											"end": 757,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 728,
											"end": 763,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 725,
											"end": 727,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 725,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 725,
											"end": 727,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 766,
											"end": 786,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 725,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 725,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 848,
											"end": 850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 841,
											"end": 845,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 839,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 829,
											"end": 846,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 822,
											"end": 826,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 810,
											"end": 827,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 797,
											"end": 851,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 871,
											"end": 886,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 871,
											"end": 886,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 871,
											"end": 886,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 860,
											"end": 901,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 860,
											"end": 901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 860,
											"end": 901,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 860,
											"end": 901,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 875,
											"end": 881,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 245,
											"end": 931,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 245,
											"end": 931,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1420,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 936,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1067,
											"end": 1090,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1141,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 1160,
											"end": 1169,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1141,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 1141,
											"end": 1170,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1170,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 1141,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1131,
											"end": 1170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1244,
											"end": 1276,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1288,
											"end": 1318,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1343,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1364,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1403,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1382,
											"end": 1404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1364,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 1364,
											"end": 1414,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1414,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 1364,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1354,
											"end": 1414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1420,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1425,
											"end": 1895,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1425,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 1593,
											"end": 1602,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1584,
											"end": 1591,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1580,
											"end": 1603,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1576,
											"end": 1609,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1674,
											"end": 1683,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1655,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1645,
											"end": 1684,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1785,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1767,
											"end": 1785,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1754,
											"end": 1786,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1754,
											"end": 1786,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1837,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1869,
											"end": 1888,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1895,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1895,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1900,
											"end": 2197,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1900,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1967,
											"end": 1973,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2006,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1995,
											"end": 2018,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2088,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2131,
											"end": 2136,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2137,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2138,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2110,
											"end": 2115,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2139,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2202,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 2202,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2300,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2312,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2317,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2342,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 2386,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2386,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2272,
											"end": 2392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2392,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2397,
											"end": 2758,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 2397,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2540,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2541,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2514,
											"end": 2546,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2549,
											"end": 2571,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2592,
											"end": 2615,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2582,
											"end": 2615,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2582,
											"end": 2615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 2691,
											"end": 2696,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2717,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2501,
											"end": 2758,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2763,
											"end": 3027,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2763,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2863,
											"end": 2895,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2941,
											"end": 2964,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2931,
											"end": 2964,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2931,
											"end": 2964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2983,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2983,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2983,
											"end": 3021,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3021,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 2983,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 3027,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3032,
											"end": 3516,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3032,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3141,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3185,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3186,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3159,
											"end": 3191,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3209,
											"end": 3215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3260,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3313,
											"end": 3315,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3279,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3269,
											"end": 3317,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3269,
											"end": 3317,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3372,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3387,
											"end": 3393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3384,
											"end": 3414,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3417,
											"end": 3439,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3996,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 3521,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3605,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3594,
											"end": 3606,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3652,
											"end": 3655,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3685,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3792,
											"end": 3814,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3815,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3779,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3779,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3779,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3757,
											"end": 3816,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3693,
											"end": 3705,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3664,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3851,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3910,
											"end": 3913,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 3892,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3885,
											"end": 3901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3881,
											"end": 3908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3914,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3957,
											"end": 3972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3944,
											"end": 3983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3944,
											"end": 3983,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3944,
											"end": 3983,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3944,
											"end": 3983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3990,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3996,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3996,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4528,
											"end": 5349,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 4528,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4929,
											"end": 4944,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 4944,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 4944,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4911,
											"end": 4945,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4911,
											"end": 4945,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 4979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4988,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4988,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4997,
											"end": 5031,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4997,
											"end": 5031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4997,
											"end": 5031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5062,
											"end": 5064,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5047,
											"end": 5065,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5047,
											"end": 5065,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5040,
											"end": 5083,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5153,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5120,
											"end": 5153,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5114,
											"end": 5117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5099,
											"end": 5118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5099,
											"end": 5118,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5154,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4891,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5198,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5198,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5198,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5232,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 5214,
											"end": 5233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5214,
											"end": 5233,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 5136,
											"end": 5139,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5258,
											"end": 5277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5282,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5299,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5299,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 5299,
											"end": 5343,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5343,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 5299,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5291,
											"end": 5343,
											"name": "SWAP12",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 5349,
											"name": "SWAP11",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4841,
											"end": 5349,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5354,
											"end": 5739,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 5354,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5573,
											"end": 5584,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5569,
											"end": 5588,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5557,
											"end": 5589,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5599,
											"end": 5633,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5642,
											"end": 5672,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5524,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 5689,
											"end": 5733,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7626,
											"end": 8581,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 7626,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8006,
											"end": 8031,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8006,
											"end": 8031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8006,
											"end": 8031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8067,
											"end": 8099,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8099,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8062,
											"end": 8064,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8040,
											"end": 8100,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8133,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8143,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8143,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8174,
											"end": 8176,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8159,
											"end": 8177,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 8177,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8152,
											"end": 8186,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8152,
											"end": 8186,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8152,
											"end": 8186,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8220,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8202,
											"end": 8221,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8202,
											"end": 8221,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8087,
											"end": 8090,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 8246,
											"end": 8265,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8246,
											"end": 8265,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 7996,
											"name": "PUSH",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 7978,
											"end": 7997,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7978,
											"end": 7997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 8293,
											"end": 8306,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8293,
											"end": 8306,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8349,
											"end": 8359,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8361,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8384,
											"end": 8388,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 8381,
											"end": 8382,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8374,
											"end": 8389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8409,
											"end": 8410,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8458,
											"end": 8461,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 8447,
											"end": 8456,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8443,
											"end": 8462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8436,
											"end": 8471,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8514,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8502,
											"end": 8505,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 8491,
											"end": 8500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8487,
											"end": 8506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8559,
											"end": 8573,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8552,
											"end": 8574,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8546,
											"end": 8549,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8531,
											"end": 8550,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8575,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "SWAP11",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "SWAP10",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 8581,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8586,
											"end": 9220,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 8586,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8875,
											"end": 8881,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8857,
											"end": 8882,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8918,
											"end": 8924,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8915,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8902,
											"end": 8911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8891,
											"end": 8925,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8934,
											"end": 8965,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 9022,
											"end": 9025,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 9011,
											"end": 9020,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9007,
											"end": 9026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8982,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 8982,
											"end": 9027,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8982,
											"end": 9027,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 8982,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9101,
											"end": 9116,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9101,
											"end": 9116,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9101,
											"end": 9116,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9096,
											"end": 9098,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9074,
											"end": 9117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9151,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9133,
											"end": 9152,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9133,
											"end": 9152,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9161,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9161,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9161,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9054,
											"end": 9057,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 9177,
											"end": 9196,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9177,
											"end": 9196,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9177,
											"end": 9196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9214,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9214,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9214,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9161,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8847,
											"end": 9220,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10606,
											"end": 10734,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 10606,
											"end": 10734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10646,
											"end": 10649,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10673,
											"end": 10679,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10670,
											"end": 10671,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10667,
											"end": 10680,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 10683,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10719,
											"end": 10728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10719,
											"end": 10728,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10654,
											"end": 10734,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10739,
											"end": 11161,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 10739,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10871,
											"end": 10876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10913,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10896,
											"end": 10904,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 10914,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10965,
											"end": 10969,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10961,
											"end": 10962,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10963,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10953,
											"end": 10970,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10944,
											"end": 10971,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 10943,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 10941,
											"end": 10943,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11031,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11014,
											"end": 11022,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11010,
											"end": 11032,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11060,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11060,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11060,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11145,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11145,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11145,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11145,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11083,
											"end": 11098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11083,
											"end": 11098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11083,
											"end": 11098,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11083,
											"end": 11098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 10885,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10889,
											"end": 10892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10803,
											"end": 11161,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11166,
											"end": 11297,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 11166,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11226,
											"end": 11231,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 11282,
											"end": 11290,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11276,
											"end": 11280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11351,
											"end": 11356,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11436,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 11436,
											"end": 11441,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 11460,
											"end": 11462,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11462,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 11460,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11570,
											"end": 11571,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11639,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 11545,
											"end": 11763,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 11565,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11595,
											"end": 11596,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11586,
											"end": 11596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11586,
											"end": 11596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11609,
											"end": 11614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11609,
											"end": 11614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 11609,
											"end": 11614,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 11633,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11670,
											"end": 11673,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 11660,
											"end": 11668,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11657,
											"end": 11674,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11734,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11719,
											"end": 11735,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11719,
											"end": 11735,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11748,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 11748,
											"end": 11753,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11763,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 11545,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11545,
											"end": 11763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11847,
											"end": 11849,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11837,
											"end": 11845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11834,
											"end": 11850,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11828,
											"end": 11831,
											"name": "PUSH",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 11822,
											"end": 11826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11819,
											"end": 11832,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11851,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11809,
											"end": 11811,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 11799,
											"end": 11807,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11796,
											"end": 11812,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11791,
											"end": 11793,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11785,
											"end": 11789,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11782,
											"end": 11794,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11778,
											"end": 11813,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11775,
											"end": 11852,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11884,
											"end": 11903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11884,
											"end": 11903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11884,
											"end": 11903,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 11916,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 11916,
											"end": 11921,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11963,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 11988,
											"end": 11996,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11982,
											"end": 11986,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11963,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 11963,
											"end": 11997,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11963,
											"end": 11997,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 11963,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12029,
											"end": 12030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 12021,
											"end": 12040,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12019,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12009,
											"end": 12041,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12082,
											"end": 12102,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12082,
											"end": 12102,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11361,
											"end": 12108,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11361,
											"end": 12108,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12113,
											"end": 12281,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 12113,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12220,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12215,
											"end": 12216,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12217,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 12207,
											"end": 12221,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12204,
											"end": 12205,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12201,
											"end": 12222,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12189,
											"end": 12198,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12178,
											"end": 12223,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12266,
											"end": 12275,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12266,
											"end": 12275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12165,
											"end": 12281,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12286,
											"end": 12411,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 12286,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12326,
											"end": 12330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12354,
											"end": 12355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12351,
											"end": 12352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12348,
											"end": 12356,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12335,
											"end": 12411,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12416,
											"end": 12796,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 12416,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12496,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12491,
											"end": 12503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12491,
											"end": 12503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12491,
											"end": 12503,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 12491,
											"end": 12503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12538,
											"end": 12550,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12538,
											"end": 12550,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12538,
											"end": 12550,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12559,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 12559,
											"end": 12561,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12617,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 12605,
											"end": 12611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12601,
											"end": 12618,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12618,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12559,
											"end": 12561,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 12559,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 12668,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12658,
											"end": 12664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12655,
											"end": 12669,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12632,
											"end": 12670,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12631,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12629,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 12629,
											"end": 12631,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12712,
											"end": 12722,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12703,
											"end": 12723,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12693,
											"end": 12724,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12747,
											"end": 12751,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 12744,
											"end": 12745,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12737,
											"end": 12752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12775,
											"end": 12779,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12772,
											"end": 12773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12765,
											"end": 12780,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12801,
											"end": 13010,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 12801,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12859,
											"end": 12860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12884,
											"end": 12915,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12884,
											"end": 12915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12928,
											"end": 12943,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12966,
											"end": 12970,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12891,
											"end": 12892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12956,
											"end": 12971,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12995,
											"end": 13004,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 12995,
											"end": 13004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 13010,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13015,
											"end": 13142,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 13015,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 13071,
											"end": 13074,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 13067,
											"end": 13087,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13064,
											"end": 13065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13057,
											"end": 13088,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13107,
											"end": 13111,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 13104,
											"end": 13105,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13097,
											"end": 13112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13131,
											"end": 13135,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13121,
											"end": 13136,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13274,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 13147,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13218,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 13203,
											"end": 13206,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 13199,
											"end": 13219,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13189,
											"end": 13220,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13239,
											"end": 13243,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 13229,
											"end": 13244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13267,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13260,
											"end": 13261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13268,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bookInsurance(address,bytes32,uint256,uint256,uint256)": "2f2e01f2",
							"claimRequest(uint256,address)": "29e999f4",
							"claims(bytes32)": "eff0f592",
							"flights(uint256,address)": "5996e024",
							"fulfillClaimInquiry(bytes32,uint8)": "0ebc8da6",
							"insurances(uint256,address)": "6e8cffa2",
							"owner()": "8da5cb5b",
							"registerFlights(address,bytes32,string)": "8d3c9445",
							"submitMyClaim(uint256,address,string)": "c4e49cd5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pli\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flightId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"flight\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"performedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performedOn\",\"type\":\"uint256\"}],\"name\":\"FlightEvents\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuranceid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"passenger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"performedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performedOn\",\"type\":\"uint256\"}],\"name\":\"InsuranceEvents\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"PluginRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"otp\",\"type\":\"uint256\"}],\"name\":\"RequestPermissionFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"jobId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"requestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_passengerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_carrierFlightNumber\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_departureOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_arrivalOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_travelday\",\"type\":\"uint256\"}],\"name\":\"bookInsurance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"polictyid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"passenger\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"carrierFlightNumber\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"departureOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"arrivalOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bookedOn\",\"type\":\"uint256\"},{\"internalType\":\"enum IFlightStatus.FlightStatus\",\"name\":\"flightStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"yearmonthdate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"flights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flightId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"carrierFlightNumber\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"serviceProviderName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"serviceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registeredOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IFlightStatus.FlightStatus\",\"name\":\"_flightStatus\",\"type\":\"uint8\"}],\"name\":\"fulfillClaimInquiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"insurances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"polictyid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"passenger\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"carrierFlightNumber\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"departureOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"arrivalOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bookedOn\",\"type\":\"uint256\"},{\"internalType\":\"enum IFlightStatus.FlightStatus\",\"name\":\"flightStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"yearmonthdate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_flightAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_carrierFlightNumber\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_serviceProviderName\",\"type\":\"string\"}],\"name\":\"registerFlights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_insuranceid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_jobid\",\"type\":\"string\"}],\"name\":\"submitMyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlightDelayInsurance.sol\":\"FlightDelayInsurance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@goplugin/contracts/src/v0.8/Plugin.sol\":{\"keccak256\":\"0x3d4f45b99494d19284524a09102e09a1a3fc74d9b0fa27d2861f0957d79e30e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76e85c584eb74eb8669fb3773da1c938c584ecec9a6ac29e856c6b2138337978\",\"dweb:/ipfs/Qmeag6GbPJApYgKmzRokqHyJez7Eaz5AZMhytDjkiDo9Ln\"]},\"@goplugin/contracts/src/v0.8/PluginClient.sol\":{\"keccak256\":\"0x54572ca17cd364505bf62036e4022c4f5a0f224869459ca0e2e85f94d734e53b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f46d5ac8893c45d9a501002a61bffa773521cf8d50ff21cc5557e9b02e25ce3\",\"dweb:/ipfs/QmSj2XAvNFS927Ustu4ZA9xec5YNxebjaK9gqYjAad3fQW\"]},\"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xd8545d2e73f7aa517543d97e1763d95c11ddd52a5050cf1933047c9f22f10b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de663408f7c1937e46aef8d86e180a2528f31cdcbc43e1682297c20be03af461\",\"dweb:/ipfs/QmVpFw2fJkaegf6hGRYtjx932KJCs6bAuKvCRoXrhV7GMF\"]},\"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0xcb216db11216856f68499495aea5c5e3d3c6998e68ed34eb65576dd7517e8eae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb66491241d9abbc2074a5bbb86518a64b360b848a632c9d8bb9fe6cfe3b75c\",\"dweb:/ipfs/QmPWxkMewrA49GcJ5cifAhb95XsNWjRNa9i2jrBM5nvgVX\"]},\"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x55fb2c156150379d285ab89081ff5add6f37343d7992bd2ec1485a2652af94d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1fc4c0fb89f7de9ec68fdc582950c63d581f3822ef71d9a8fd240a73b37778\",\"dweb:/ipfs/QmdvboNgXzaQXMaceVQPGwpZHMC5fe9LU9GkippzA8quPJ\"]},\"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol\":{\"keccak256\":\"0x82c31fff77f022d56bde5ae1b251380644c3496221421245300824b25bc11f6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ca1f74f75b6986778c3a7c499ba9d430d267cb797b12b93d47a4b4a5f583799\",\"dweb:/ipfs/QmU9hUjmtAJaJTz1fekwAYVWwWmYufRYXzEW9M5hgE49dR\"]},\"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol\":{\"keccak256\":\"0x30e0b2e375a8e3ae9f4f1ca448a30a5670d78685276302aa902b4331947a46d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4a540852961f706b270135c7bf16a2269deab62d4288d9bc762a4fbcf179cc\",\"dweb:/ipfs/QmQfDAbiU1WNCHxpJdrm89fFnA7RwCMJw81Pq4gU5qQjrx\"]},\"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0xc3d897e7c93b02e53f21b40accd4a0bd5c38f9780a4f74a7109b70fbfde03b40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11166ec1ac48aaf14f5a7053283371341e0418eaced385b7ed7c9140d9f1f1df\",\"dweb:/ipfs/QmV4bkHEEpeqC6pr3nmmQQURkVKMroucA31YoGcysnByt7\"]},\"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol\":{\"keccak256\":\"0x16cb401b48de656645a2a98614d0a9ca1e2bd3fc57e79b964f8c15c06b2d086b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f6b3a0e1e427421b90f88d825737bc5feab5724ff0d1ff6f28e275255c0b2d7\",\"dweb:/ipfs/QmViHBvvXStg3qdsVqSAPNKAUgWxBLhuT5EtoDnc2WX5c1\"]},\"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol\":{\"keccak256\":\"0xb64a0acf3a0be6f51bc0f8a84c532832ddef56402e926fbf371cd91589eaecf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6959894153d714583ca2212d25afd5a1ca5b348aa07cadf91e88b7de322668\",\"dweb:/ipfs/QmUb4R5nT2wnvYNWaph9mP4PGM1uYD8YoW1dwYNck5aZSh\"]},\"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0xeed48a6a522c400f024f8725ad931833205cb63cc87285b46c5c0e88ca090352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4065aed34d3fae897ac7eb7c5e3af1ba9f458fc31c9f165acae8fa448125ec5\",\"dweb:/ipfs/Qmejzy7Kdw4mHiv5QqyvA8nUU5SeqH6n6dQoe1VEWZUnsi\"]},\"CustomTokens/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/FlightDelayInsurance.sol\":{\"keccak256\":\"0x6e9952513f99f0aff8ace24369166085e89d6f4b23c7714ea2056e8c61411419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9373d89c6bd689083266ffae5194fa069d944973114e2e03abfe8e6fd62e6a04\",\"dweb:/ipfs/QmPxBe2vkCtC35CGEwmXRNmXQ6xk5GiFq7YL2okb84VTBG\"]},\"contracts/interface/IFlightStatus.sol\":{\"keccak256\":\"0x497d483c51464a7306bb61f17492afa973ad3411e075726a55898bebda380a2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5bc021732281ff65637d0b24a3a07ecf5c966bd9b1bf5c7f8a127042450a67a\",\"dweb:/ipfs/Qmd426N3udwuGvDvZi4GHiPm6tyTxwaET8P7PuiTSukjNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 318,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "ens",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ENSInterface)879"
							},
							{
								"astId": 320,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "ensNode",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							},
							{
								"astId": 323,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "pli",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(PliTokenInterface)1095"
							},
							{
								"astId": 326,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "oracle",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(OperatorInterface)961"
							},
							{
								"astId": 329,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "requestCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "pendingRequests",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_address)"
							},
							{
								"astId": 2183,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "_flightIds",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)2099_storage"
							},
							{
								"astId": 2186,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "_insuranceIds",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)2099_storage"
							},
							{
								"astId": 2199,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 2206,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "insurances",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(FlightInsurance)2600_storage))"
							},
							{
								"astId": 2213,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "flights",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(FlightMaster)2580_storage))"
							},
							{
								"astId": 2218,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "claims",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_bytes32,t_struct(FlightInsurance)2600_storage)"
							},
							{
								"astId": 2224,
								"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
								"label": "claimRequest",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ENSInterface)879": {
								"encoding": "inplace",
								"label": "contract ENSInterface",
								"numberOfBytes": "20"
							},
							"t_contract(OperatorInterface)961": {
								"encoding": "inplace",
								"label": "contract OperatorInterface",
								"numberOfBytes": "20"
							},
							"t_contract(PliTokenInterface)1095": {
								"encoding": "inplace",
								"label": "contract PliTokenInterface",
								"numberOfBytes": "20"
							},
							"t_enum(FlightStatus)2567": {
								"encoding": "inplace",
								"label": "enum IFlightStatus.FlightStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_address,t_struct(FlightInsurance)2600_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IFlightStatus.FlightInsurance)",
								"numberOfBytes": "32",
								"value": "t_struct(FlightInsurance)2600_storage"
							},
							"t_mapping(t_address,t_struct(FlightMaster)2580_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IFlightStatus.FlightMaster)",
								"numberOfBytes": "32",
								"value": "t_struct(FlightMaster)2580_storage"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_bytes32,t_struct(FlightInsurance)2600_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct IFlightStatus.FlightInsurance)",
								"numberOfBytes": "32",
								"value": "t_struct(FlightInsurance)2600_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bytes32))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bytes32)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(FlightInsurance)2600_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightInsurance))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(FlightInsurance)2600_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(FlightMaster)2580_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightMaster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(FlightMaster)2580_storage)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)2099_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2098,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(FlightInsurance)2600_storage": {
								"encoding": "inplace",
								"label": "struct IFlightStatus.FlightInsurance",
								"members": [
									{
										"astId": 2582,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "polictyid",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2584,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "passenger",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2586,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "carrierFlightNumber",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 2588,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "departureOn",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2590,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "arrivalOn",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2592,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "bookedOn",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2595,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "flightStatus",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(FlightStatus)2567"
									},
									{
										"astId": 2597,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "yearmonthdate",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2599,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "processed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(FlightMaster)2580_storage": {
								"encoding": "inplace",
								"label": "struct IFlightStatus.FlightMaster",
								"members": [
									{
										"astId": 2569,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "flightId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2571,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "carrierFlightNumber",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 2573,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "serviceProviderName",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2575,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "serviceProvider",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 2577,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "registeredOn",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2579,
										"contract": "contracts/FlightDelayInsurance.sol:FlightDelayInsurance",
										"label": "registeredBy",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IFlightStatus.sol": {
				"IFlightStatus": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IFlightStatus.sol\":\"IFlightStatus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IFlightStatus.sol\":{\"keccak256\":\"0x497d483c51464a7306bb61f17492afa973ad3411e075726a55898bebda380a2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5bc021732281ff65637d0b24a3a07ecf5c966bd9b1bf5c7f8a127042450a67a\",\"dweb:/ipfs/Qmd426N3udwuGvDvZi4GHiPm6tyTxwaET8P7PuiTSukjNQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:35:5:\n   |\n35 |     address owner\n   |     ^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:53:3:\n   |\n53 |   function owner(\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1033,
						"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
						"message": "The other declaration is here:",
						"start": 940
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 705,
					"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
					"start": 692
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:40:5:\n   |\n40 |     address resolver\n   |     ^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:62:3:\n   |\n62 |   function resolver(\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1133,
						"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
						"message": "The other declaration is here:",
						"start": 1037
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 783,
					"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
					"start": 767
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:45:5:\n   |\n45 |     address owner\n   |     ^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:53:3:\n   |\n53 |   function owner(\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1033,
						"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
						"message": "The other declaration is here:",
						"start": 940
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 855,
					"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
					"start": 842
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:50:5:\n   |\n50 |     uint64 ttl\n   |     ^^^^^^^^^^\nNote: The other declaration is here:\n  --> @goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol:71:3:\n   |\n71 |   function ttl(\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1227,
						"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
						"message": "The other declaration is here:",
						"start": 1137
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 922,
					"file": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
					"start": 912
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@goplugin/contracts/src/v0.8/Plugin.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/Plugin.sol",
					"exportedSymbols": {
						"BufferPlugin": [
							1658
						],
						"CBORPlugin": [
							2083
						],
						"Plugin": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol",
							"file": "./vendor/CBORPlugin.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 2084,
							"src": "57:53:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "CBORPlugin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "66:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol",
							"file": "./vendor/BufferPlugin.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 1659,
							"src": "111:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "BufferPlugin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "120:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "170:111:0",
								"text": " @title Library for common Plugin functions\n @dev Uses imported CBOR library for encoding to buffer"
							},
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "Plugin",
							"nameLocation": "290:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "defaultBufferSize",
									"nameLocation": "327:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "301:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323536",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "347:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_256_by_1",
											"typeString": "int_const 256"
										},
										"value": "256"
									},
									"visibility": "internal"
								},
								{
									"id": 13,
									"libraryName": {
										"id": 10,
										"name": "CBORPlugin",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2083,
										"src": "406:10:0"
									},
									"nodeType": "UsingForDirective",
									"src": "400:41:0",
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "BufferPlugin.buffer",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1144,
											"src": "421:19:0"
										},
										"referencedDeclaration": 1144,
										"src": "421:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
											"typeString": "struct BufferPlugin.buffer"
										}
									}
								},
								{
									"canonicalName": "Plugin.Request",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "474:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "466:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 14,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "callbackAddress",
											"nameLocation": "490:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "482:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "482:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "callbackFunctionId",
											"nameLocation": "518:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "511:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 18,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "511:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "550:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "542:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "542:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "buf",
											"nameLocation": "581:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "561:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
												"typeString": "struct BufferPlugin.buffer"
											},
											"typeName": {
												"id": 23,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 22,
													"name": "BufferPlugin.buffer",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1144,
													"src": "561:19:0"
												},
												"referencedDeclaration": 1144,
												"src": "561:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
													"typeString": "struct BufferPlugin.buffer"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "452:7:0",
									"nodeType": "StructDefinition",
									"scope": 268,
									"src": "445:144:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1152:180:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 44,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1176:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "1176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 46,
															"name": "defaultBufferSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1186:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 41,
															"name": "BufferPlugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "1158:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BufferPlugin_$1658_$",
																"typeString": "type(library BufferPlugin)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "1158:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1158:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1158:46:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 49,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "1210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "jobId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1220:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1210:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1210:15:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 55,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "callbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "1231:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "callbackAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1254:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1231:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1231:35:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 61,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1272:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "callbackFunctionId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1272:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "callbackFunc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1298:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1272:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1272:38:0"
											},
											{
												"expression": {
													"id": 67,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"functionReturnParameters": 40,
												"id": 68,
												"nodeType": "Return",
												"src": "1316:11:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "593:365:0",
										"text": " @notice Initializes a Plugin request\n @dev Sets the ID, callback address, and callback function signature on the request\n @param self The uninitialized request\n @param jobId The Job Specification ID\n @param callbackAddr The callback address\n @param callbackFunc The callback function signature\n @return The initialized request"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "970:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "986:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 28,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 27,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "986:7:0"
													},
													"referencedDeclaration": 25,
													"src": "986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "jobId",
												"nameLocation": "1019:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "callbackAddr",
												"nameLocation": "1038:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1030:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "callbackFunc",
												"nameLocation": "1063:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1056:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 34,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:99:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1122:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 38,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 37,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1122:14:0"
													},
													"referencedDeclaration": 25,
													"src": "1122:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:35:0"
									},
									"scope": 268,
									"src": "961:371:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1664:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 82,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1688:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "1688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"id": 84,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1698:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1698:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 79,
															"name": "BufferPlugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "1670:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BufferPlugin_$1658_$",
																"typeString": "type(library BufferPlugin)"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "1670:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1670:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 91,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1736:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "1736:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 93,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 88,
															"name": "BufferPlugin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "1716:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BufferPlugin_$1658_$",
																"typeString": "type(library BufferPlugin)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "1716:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1716:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1716:35:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1336:230:0",
										"text": " @notice Sets the data for the buffer without encoding CBOR on-chain\n @dev CBOR can be closed with curly-brackets {} or they can be left off\n @param self The initialized request\n @param data The CBOR data"
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBuffer",
									"nameLocation": "1578:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1593:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 73,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 72,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1593:7:0"
													},
													"referencedDeclaration": 25,
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1618:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 75,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:52:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:0:0"
									},
									"scope": 268,
									"src": "1569:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2075:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2103:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 108,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2081:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2081:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "2081:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2081:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 116,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2113:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2113:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "2113:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2113:28:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "1760:198:0",
										"text": " @notice Adds a string value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The string value to add"
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1970:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1994:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1979:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 100,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 99,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1979:7:0"
													},
													"referencedDeclaration": 25,
													"src": "1979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2018:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2004:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2027:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2027:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:77:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:0"
									},
									"scope": 268,
									"src": "1961:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "2467:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2495:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 136,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2473:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2473:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "2473:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2473:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2526:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"expression": {
																"id": 144,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2505:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2505:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeBytes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1947,
														"src": "2505:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2505:27:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2150:196:0",
										"text": " @notice Adds a bytes value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The bytes value to add"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addBytes",
									"nameLocation": "2358:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2387:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2372:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 127,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2372:7:0"
													},
													"referencedDeclaration": 25,
													"src": "2372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2411:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2397:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2420:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2366:76:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2467:0:0"
									},
									"scope": 268,
									"src": "2349:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2852:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2880:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 164,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2858:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "2858:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2858:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"expression": {
																"id": 172,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2890:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "2890:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1925,
														"src": "2890:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,int256) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2890:25:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "2541:198:0",
										"text": " @notice Adds a int256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The int256 value to add"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addInt",
									"nameLocation": "2751:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2763:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 155,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2763:7:0"
													},
													"referencedDeclaration": 25,
													"src": "2763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2802:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2788:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2788:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2818:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2811:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 160,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:70:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2852:0:0"
									},
									"scope": 268,
									"src": "2742:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3239:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "3267:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 192,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "3245:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "3245:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "3245:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "3245:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "3297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 200,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "3277:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "3277:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeUInt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1868,
														"src": "3277:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3277:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3277:26:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2924:200:0",
										"text": " @notice Adds a uint256 value to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param value The uint256 value to add"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addUint",
									"nameLocation": "3136:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3164:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3149:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "3149:7:0"
													},
													"referencedDeclaration": 25,
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3188:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3174:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3205:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3143:71:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:0:0"
									},
									"scope": 268,
									"src": "3127:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3657:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3685:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"expression": {
																"id": 221,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3663:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "3663:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "encodeString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2046,
														"src": "3663:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3663:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 229,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3695:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "3695:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startArray",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "3695:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3695:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3695:21:0"
											},
											{
												"body": {
													"id": 257,
													"nodeType": "Block",
													"src": "3766:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 252,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "3796:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 254,
																		"indexExpression": {
																			"id": 253,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "3803:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3796:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 247,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "3774:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																				"typeString": "struct Plugin.Request memory"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "buf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 24,
																		"src": "3774:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "encodeString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2046,
																	"src": "3774:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																		"typeString": "function (struct BufferPlugin.buffer memory,string memory) pure"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3774:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 256,
															"nodeType": "ExpressionStatement",
															"src": "3774:32:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3742:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 241,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3746:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3746:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3742:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 258,
												"initializationExpression": {
													"assignments": [
														237
													],
													"declarations": [
														{
															"constant": false,
															"id": 237,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3735:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 258,
															"src": "3727:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 236,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 239,
													"initialValue": {
														"hexValue": "30",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3739:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3727:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3761:3:0",
														"subExpression": {
															"id": 244,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3761:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 246,
													"nodeType": "ExpressionStatement",
													"src": "3761:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3722:91:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 259,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3818:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "3818:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "endSequence",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2082,
														"src": "3818:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$returns$__$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3818:22:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3312:214:0",
										"text": " @notice Adds an array of strings to the request with a given key name\n @param self The initialized request\n @param key The name of the key\n @param values The array of string values to add"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addStringArray",
									"nameLocation": "3538:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3573:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3558:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 211,
														"name": "Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "3558:7:0"
													},
													"referencedDeclaration": 25,
													"src": "3558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3597:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3583:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3583:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "3622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3606:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 216,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3606:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 217,
													"nodeType": "ArrayTypeName",
													"src": "3606:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:80:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3657:0:0"
									},
									"scope": 268,
									"src": "3529:316:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 269,
							"src": "282:3565:0",
							"usedErrors": []
						}
					],
					"src": "32:3816:0"
				},
				"id": 0
			},
			"@goplugin/contracts/src/v0.8/PluginClient.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/PluginClient.sol",
					"exportedSymbols": {
						"BufferPlugin": [
							1658
						],
						"CBORPlugin": [
							2083
						],
						"ENSInterface": [
							879
						],
						"ENSResolver_Plugin": [
							2093
						],
						"OperatorInterface": [
							961
						],
						"OracleInterface": [
							1000
						],
						"PliTokenInterface": [
							1095
						],
						"Plugin": [
							268
						],
						"PluginClient": [
							799
						],
						"PluginRequestInterface": [
							1128
						],
						"PointerInterface": [
							1136
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/Plugin.sol",
							"file": "./Plugin.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 269,
							"src": "57:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
							"file": "./interfaces/ENSInterface.sol",
							"id": 272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 880,
							"src": "80:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol",
							"file": "./interfaces/PliTokenInterface.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1096,
							"src": "120:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol",
							"file": "./interfaces/OperatorInterface.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 962,
							"src": "165:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol",
							"file": "./interfaces/PointerInterface.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1137,
							"src": "210:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol",
							"file": "./vendor/ENSResolver.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 2094,
							"src": "254:77:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 276,
										"name": "ENSResolver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "263:11:1",
										"typeDescriptions": {}
									},
									"local": "ENSResolver_Plugin",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 278,
								"nodeType": "StructuredDocumentation",
								"src": "333:151:1",
								"text": " @title The PluginClient contract\n @notice Contract writers can inherit this contract in order to create requests for the\n Plugin network"
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799
							],
							"name": "PluginClient",
							"nameLocation": "494:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 282,
									"libraryName": {
										"id": 279,
										"name": "Plugin",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 268,
										"src": "517:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "511:32:1",
									"typeName": {
										"id": 281,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 280,
											"name": "Plugin.Request",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 25,
											"src": "528:14:1"
										},
										"referencedDeclaration": 25,
										"src": "528:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
											"typeString": "struct Plugin.Request"
										}
									}
								},
								{
									"constant": true,
									"id": 287,
									"mutability": "constant",
									"name": "PLI_DIVISIBILITY",
									"nameLocation": "573:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "547:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 283,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 284,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "592:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 285,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "596:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "592:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "AMOUNT_OVERRIDE",
									"nameLocation": "627:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "602:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "645:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 296,
									"mutability": "constant",
									"name": "SENDER_OVERRIDE",
									"nameLocation": "675:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "650:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 294,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "701:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 293,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "693:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 292,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "693:7:1",
												"typeDescriptions": {}
											}
										},
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "693:10:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 299,
									"mutability": "constant",
									"name": "ORACLE_ARGS_VERSION",
									"nameLocation": "732:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "707:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "707:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 302,
									"mutability": "constant",
									"name": "OPERATOR_ARGS_VERSION",
									"nameLocation": "784:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "759:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 300,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "808:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 307,
									"mutability": "constant",
									"name": "ENS_TOKEN_SUBNAME",
									"nameLocation": "838:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "813:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 303,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "813:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "706c69",
												"id": 305,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "868:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_673b1587d9769c3a3badcba38ab7aa1a367ce6235a55e6b1061e2d2788397154",
													"typeString": "literal_string \"pli\""
												},
												"value": "pli"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_673b1587d9769c3a3badcba38ab7aa1a367ce6235a55e6b1061e2d2788397154",
													"typeString": "literal_string \"pli\""
												}
											],
											"id": 304,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "858:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "858:16:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 312,
									"mutability": "constant",
									"name": "ENS_ORACLE_SUBNAME",
									"nameLocation": "903:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "878:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 308,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "878:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f7261636c65",
												"id": 310,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "934:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
													"typeString": "literal_string \"oracle\""
												},
												"value": "oracle"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6",
													"typeString": "literal_string \"oracle\""
												}
											],
											"id": 309,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "924:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "924:19:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 315,
									"mutability": "constant",
									"name": "PLI_TOKEN_POINTER",
									"nameLocation": "972:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "947:87:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 313,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "947:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843383962443445313633324433413433434230334141416435323632636265343033384263353731",
										"id": 314,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "992:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 318,
									"mutability": "mutable",
									"name": "ens",
									"nameLocation": "1060:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1039:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ENSInterface_$879",
										"typeString": "contract ENSInterface"
									},
									"typeName": {
										"id": 317,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 316,
											"name": "ENSInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 879,
											"src": "1039:12:1"
										},
										"referencedDeclaration": 879,
										"src": "1039:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ENSInterface_$879",
											"typeString": "contract ENSInterface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 320,
									"mutability": "mutable",
									"name": "ensNode",
									"nameLocation": "1083:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1067:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 319,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1067:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "pli",
									"nameLocation": "1120:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1094:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
										"typeString": "contract PliTokenInterface"
									},
									"typeName": {
										"id": 322,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 321,
											"name": "PliTokenInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1095,
											"src": "1094:17:1"
										},
										"referencedDeclaration": 1095,
										"src": "1094:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
											"typeString": "contract PliTokenInterface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "1153:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1127:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_OperatorInterface_$961",
										"typeString": "contract OperatorInterface"
									},
									"typeName": {
										"id": 325,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 324,
											"name": "OperatorInterface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 961,
											"src": "1127:17:1"
										},
										"referencedDeclaration": 961,
										"src": "1127:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OperatorInterface_$961",
											"typeString": "contract OperatorInterface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 329,
									"mutability": "mutable",
									"name": "requestCount",
									"nameLocation": "1179:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1163:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1163:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1194:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "pendingRequests",
									"nameLocation": "1235:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1199:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 332,
										"keyType": {
											"id": 330,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 331,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1218:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 337,
									"name": "PluginRequested",
									"nameLocation": "1261:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1298:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1282:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:28:1"
									},
									"src": "1255:50:1"
								},
								{
									"anonymous": false,
									"id": 341,
									"name": "PluginFulfilled",
									"nameLocation": "1314:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1351:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1335:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:28:1"
									},
									"src": "1308:50:1"
								},
								{
									"anonymous": false,
									"id": 345,
									"name": "PluginCancelled",
									"nameLocation": "1367:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1404:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1388:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:28:1"
									},
									"src": "1361:50:1"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1998:115:1",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "req",
														"nameLocation": "2026:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 371,
														"src": "2004:25:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
															"typeString": "struct Plugin.Request"
														},
														"typeName": {
															"id": 361,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 360,
																"name": "Plugin.Request",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 25,
																"src": "2004:14:1"
															},
															"referencedDeclaration": 25,
															"src": "2004:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
																"typeString": "struct Plugin.Request"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"nodeType": "VariableDeclarationStatement",
												"src": "2004:25:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "specId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2057:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 367,
															"name": "callbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "2065:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "callbackFunctionSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2082:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 364,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "2042:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "2042:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$bound_to$_t_struct$_Request_$25_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,bytes32,address,bytes4) pure returns (struct Plugin.Request memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"functionReturnParameters": 357,
												"id": 370,
												"nodeType": "Return",
												"src": "2035:73:1"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1415:389:1",
										"text": " @notice Creates a request that can hold additional parameters\n @param specId The Job Specification ID that the request will be created for\n @param callbackAddress The callback address that the response will be sent to\n @param callbackFunctionSignature The callback function signature to use for the callback address\n @return A Plugin Request struct in memory"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buildPluginRequest",
									"nameLocation": "1816:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "specId",
												"nameLocation": "1848:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1840:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "callbackAddress",
												"nameLocation": "1868:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1860:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "callbackFunctionSignature",
												"nameLocation": "1896:25:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1889:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 351,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1889:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:91:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1968:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1968:14:1"
													},
													"referencedDeclaration": 25,
													"src": "1968:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:35:1"
									},
									"scope": 799,
									"src": "1807:306:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2540:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 386,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "2581:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2573:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2573:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "2590:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"id": 389,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "sendPluginRequestTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2553:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 382,
												"id": 391,
												"nodeType": "Return",
												"src": "2546:57:1"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2117:288:1",
										"text": " @notice Creates a Plugin request to the stored oracle address\n @dev Calls `pluginRequestTo` with the stored oracle address\n @param req The initialized Plugin Request\n @param payment The amount of PLI to send for the request\n @return requestId The request ID"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendPluginRequest",
									"nameLocation": "2417:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "2462:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2440:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 374,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2440:14:1"
													},
													"referencedDeclaration": 25,
													"src": "2440:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "2479:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2471:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:56:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2524:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:21:1"
									},
									"scope": 799,
									"src": "2408:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "3286:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "oracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3310:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3325:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"id": 409,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "3330:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 410,
															"name": "ORACLE_ARGS_VERSION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "3339:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 411,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "3360:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "oracleRequest",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1116,
																"src": "3360:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,uint256,bytes32,address,bytes4,uint256,uint256,bytes memory) external"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3360:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 406,
														"name": "rawRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "3299:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes4_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256,uint256,bytes4) returns (bytes32)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3299:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 405,
												"id": 415,
												"nodeType": "Return",
												"src": "3292:98:1"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2612:500:1",
										"text": " @notice Creates a Plugin request to the specified oracle address\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send PLI which creates a request on the target oracle contract.\n Emits PluginRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Plugin Request\n @param payment The amount of PLI to send for the request\n @return requestId The request ID"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendPluginRequestTo",
									"nameLocation": "3124:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "3157:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3149:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "3198:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3176:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 397,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "3176:14:1"
													},
													"referencedDeclaration": 25,
													"src": "3176:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "3215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3143:83:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3268:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3260:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:31:1"
									},
									"scope": 799,
									"src": "3115:280:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3881:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 431,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "3924:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																],
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3916:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 429,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3916:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3916:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3933:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"id": 434,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "requestOracleDataFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3894:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 427,
												"id": 436,
												"nodeType": "Return",
												"src": "3887:59:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "3399:347:1",
										"text": " @notice Creates a Plugin request to the stored oracle address\n @dev This function supports multi-word response\n @dev Calls `requestOracleDataFrom` with the stored oracle address\n @param req The initialized Plugin Request\n @param payment The amount of PLI to send for the request\n @return requestId The request ID"
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestOracleData",
									"nameLocation": "3758:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "3803:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3781:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "3781:14:1"
													},
													"referencedDeclaration": 25,
													"src": "3781:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "3820:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:56:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3865:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:21:1"
									},
									"scope": 799,
									"src": "3749:202:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4684:115:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 452,
															"name": "oracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4708:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4723:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"id": 454,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4728:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 455,
															"name": "OPERATOR_ARGS_VERSION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4737:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 456,
																	"name": "oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "4760:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OperatorInterface_$961",
																		"typeString": "contract OperatorInterface"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "requestOracleData",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "4760:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,uint256,bytes32,address,bytes4,uint256,uint256,bytes memory) external"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4760:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 451,
														"name": "rawRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "4697:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes4_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256,uint256,bytes4) returns (bytes32)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4697:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 450,
												"id": 460,
												"nodeType": "Return",
												"src": "4690:104:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3955:553:1",
										"text": " @notice Creates a Plugin request to the specified oracle address\n @dev This function supports multi-word response\n @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n send PLI which creates a request on the target oracle contract.\n Emits PluginRequested event.\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Plugin Request\n @param payment The amount of PLI to send for the request\n @return requestId The request ID"
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestOracleDataFrom",
									"nameLocation": "4520:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "4555:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4547:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "4596:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4574:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 443,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 442,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "4574:14:1"
													},
													"referencedDeclaration": 25,
													"src": "4574:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "4613:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4605:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4541:83:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "4666:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4658:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:31:1"
									},
									"scope": 799,
									"src": "4511:288:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "5360:732:1",
										"statements": [
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "5366:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 483,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5405:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PluginClient_$799",
																			"typeString": "contract PluginClient"
																		}
																	},
																	{
																		"id": 484,
																		"name": "requestCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "5411:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PluginClient_$799",
																			"typeString": "contract PluginClient"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 481,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5388:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "5388:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5388:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 480,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "5378:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5378:47:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5366:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5366:59:1"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 489,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5431:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5431:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 492,
														"name": "requestCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "5443:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5431:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "5431:24:1"
											},
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 495,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5461:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 497,
														"indexExpression": {
															"id": 496,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5477:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5461:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 498,
														"name": "oracleAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5490:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5461:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "5461:42:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 502,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5530:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 501,
														"name": "PluginRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5514:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5514:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "EmitStatement",
												"src": "5509:31:1"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "encodedData",
														"nameLocation": "5559:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "5546:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 505,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5546:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "funcSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5603:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 510,
															"name": "SENDER_OVERRIDE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5623:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "AMOUNT_OVERRIDE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "5731:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 512,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5835:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "5835:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 514,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5849:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "callbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "5849:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 516,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5876:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "callbackFunctionId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "5876:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"expression": {
																"id": 518,
																"name": "req",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5906:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																	"typeString": "struct Plugin.Request memory"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "5906:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 520,
															"name": "argsVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5923:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 521,
																	"name": "req",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "5942:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																		"typeString": "struct Plugin.Request memory"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 24,
																"src": "5942:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																	"typeString": "struct BufferPlugin.buffer memory"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1141,
															"src": "5942:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 507,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5573:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "5573:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5573:381:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5546:408:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 529,
																	"name": "oracleAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "5988:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 530,
																	"name": "payment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6003:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 531,
																	"name": "encodedData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "6012:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 527,
																	"name": "pli",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "5968:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
																		"typeString": "contract PliTokenInterface"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "5968:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5968:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6026:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96",
																"typeString": "literal_string \"unable to transferAndCall to oracle\""
															},
															"value": "unable to transferAndCall to oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b3efd608222b424e5ed8427d7f6a272069793e6a1f5930c93db5c7960c3ce96",
																"typeString": "literal_string \"unable to transferAndCall to oracle\""
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:104:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5960:104:1"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 536,
														"name": "requestCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "6070:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6070:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "6070:17:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4803:343:1",
										"text": " @notice Make a request to an oracle\n @param oracleAddress The address of the oracle for the request\n @param req The initialized Plugin Request\n @param payment The amount of PLI to send for the request\n @param argsVersion The version of data support (single word, multi word)\n @return requestId The request ID"
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawRequest",
									"nameLocation": "5158:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "5182:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5174:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "5223:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5201:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
													"typeString": "struct Plugin.Request"
												},
												"typeName": {
													"id": 467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 466,
														"name": "Plugin.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "5201:14:1"
													},
													"referencedDeclaration": 25,
													"src": "5201:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
														"typeString": "struct Plugin.Request"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "5240:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5232:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "argsVersion",
												"nameLocation": "5261:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5253:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "funcSelector",
												"nameLocation": "5285:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5278:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 473,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:133:1"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5342:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5334:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5326:31:1"
									},
									"scope": 799,
									"src": "5149:943:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "6745:243:1",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "requested",
														"nameLocation": "6769:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "6751:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_OperatorInterface_$961",
															"typeString": "contract OperatorInterface"
														},
														"typeName": {
															"id": 554,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 553,
																"name": "OperatorInterface",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 961,
																"src": "6751:17:1"
															},
															"referencedDeclaration": 961,
															"src": "6751:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OperatorInterface_$961",
																"typeString": "contract OperatorInterface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 557,
																"name": "pendingRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "6799:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																	"typeString": "mapping(bytes32 => address)"
																}
															},
															"id": 559,
															"indexExpression": {
																"id": 558,
																"name": "requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6815:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6799:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 556,
														"name": "OperatorInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "6781:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_OperatorInterface_$961_$",
															"typeString": "type(contract OperatorInterface)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6781:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_OperatorInterface_$961",
														"typeString": "contract OperatorInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6751:75:1"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6832:33:1",
													"subExpression": {
														"baseExpression": {
															"id": 562,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6839:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 564,
														"indexExpression": {
															"id": 563,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6855:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6839:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "6832:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 568,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6892:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 567,
														"name": "PluginCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "6876:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6876:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "6871:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6938:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 575,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6949:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 576,
															"name": "callbackFunc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6958:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 577,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "6972:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 571,
															"name": "requested",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "6908:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OperatorInterface_$961",
																"typeString": "contract OperatorInterface"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "cancelOracleRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1127,
														"src": "6908:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes4_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,bytes4,uint256) external"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6908:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "6908:75:1"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "6096:505:1",
										"text": " @notice Allows a request to be cancelled if it has not been fulfilled\n @dev Requires keeping track of the expiration value emitted from the oracle contract.\n Deletes the request from the `pendingRequests` mapping.\n Emits PluginCancelled event.\n @param requestId The request ID\n @param payment The amount of PLI sent for the request\n @param callbackFunc The callback function specified for the request\n @param expiration The time of the expiration for the request"
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelPluginRequest",
									"nameLocation": "6613:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6646:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6638:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "6669:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6661:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "callbackFunc",
												"nameLocation": "6689:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6682:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 547,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6682:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "6715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6707:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:97:1"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6745:0:1"
									},
									"scope": 799,
									"src": "6604:384:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "7180:52:1",
										"statements": [
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 587,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "7186:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_OperatorInterface_$961",
															"typeString": "contract OperatorInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 589,
																"name": "oracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "7213:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 588,
															"name": "OperatorInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "7195:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OperatorInterface_$961_$",
																"typeString": "type(contract OperatorInterface)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7195:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_OperatorInterface_$961",
															"typeString": "contract OperatorInterface"
														}
													},
													"src": "7186:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_OperatorInterface_$961",
														"typeString": "contract OperatorInterface"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "7186:41:1"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "6992:114:1",
										"text": " @notice Sets the stored oracle address\n @param oracleAddress The address of the oracle contract"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPluginOracle",
									"nameLocation": "7118:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "7147:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "7139:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7133:31:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7180:0:1"
									},
									"scope": 799,
									"src": "7109:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "7416:46:1",
										"statements": [
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "pli",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "7422:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
															"typeString": "contract PliTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 602,
																"name": "pliAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "7446:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 601,
															"name": "PliTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "7428:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PliTokenInterface_$1095_$",
																"typeString": "type(contract PliTokenInterface)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7428:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
															"typeString": "contract PliTokenInterface"
														}
													},
													"src": "7422:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
														"typeString": "contract PliTokenInterface"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "7422:35:1"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "7236:110:1",
										"text": " @notice Sets the PLI token address\n @param pliAddress The address of the PLI token contract"
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPluginToken",
									"nameLocation": "7358:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "pliAddress",
												"nameLocation": "7386:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "7378:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7372:28:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7416:0:1"
									},
									"scope": 799,
									"src": "7349:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "7630:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 613,
																			"name": "PLI_TOKEN_POINTER",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7668:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 612,
																		"name": "PointerInterface",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "7651:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PointerInterface_$1136_$",
																			"typeString": "type(contract PointerInterface)"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7651:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PointerInterface_$1136",
																		"typeString": "contract PointerInterface"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1135,
																"src": "7651:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7651:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 611,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7636:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7636:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "7636:64:1"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "7466:113:1",
										"text": " @notice Sets the Plugin token address for the public\n network as given by the Pointer contract"
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPublicPluginToken",
									"nameLocation": "7591:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7611:2:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7630:0:1"
									},
									"scope": 799,
									"src": "7582:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "7910:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "pli",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "7931:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
																"typeString": "contract PliTokenInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_PliTokenInterface_$1095",
																"typeString": "contract PliTokenInterface"
															}
														],
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7923:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7923:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7923:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 625,
												"id": 630,
												"nodeType": "Return",
												"src": "7916:19:1"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "7709:110:1",
										"text": " @notice Retrieves the stored address of the PLI token\n @return The address of the PLI token"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pluginTokenAddress",
									"nameLocation": "7831:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7849:2:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7894:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7886:21:1"
									},
									"scope": 799,
									"src": "7822:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8158:33:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "8179:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OperatorInterface_$961",
																"typeString": "contract OperatorInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_OperatorInterface_$961",
																"typeString": "contract OperatorInterface"
															}
														],
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8171:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 638,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 637,
												"id": 642,
												"nodeType": "Return",
												"src": "8164:22:1"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "7944:122:1",
										"text": " @notice Retrieves the stored address of the oracle contract\n @return The address of the oracle contract"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pluginOracleAddress",
									"nameLocation": "8078:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8097:2:1"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8142:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8142:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:21:1"
									},
									"scope": 799,
									"src": "8069:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "8603:53:1",
										"statements": [
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 655,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "8609:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8625:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8609:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 658,
														"name": "oracleAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "8638:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8609:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "8609:42:1"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8195:269:1",
										"text": " @notice Allows for a request which was created on another contract to be fulfilled\n on this contract\n @param oracleAddress The address of the oracle contract that will fulfill the request\n @param requestId The request ID used for the response"
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 652,
													"name": "requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 649,
													"src": "8590:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 651,
												"name": "notPendingRequest",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 798,
												"src": "8572:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "8572:28:1"
										}
									],
									"name": "addPluginExternalRequest",
									"nameLocation": "8476:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "8514:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "8506:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "8541:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "8533:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8500:54:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8603:0:1"
									},
									"scope": 799,
									"src": "8467:189:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "9003:303:1",
										"statements": [
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "ens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "9009:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSInterface_$879",
															"typeString": "contract ENSInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 672,
																"name": "ensAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "9028:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 671,
															"name": "ENSInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9015:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ENSInterface_$879_$",
																"typeString": "type(contract ENSInterface)"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9015:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSInterface_$879",
															"typeString": "contract ENSInterface"
														}
													},
													"src": "9009:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSInterface_$879",
														"typeString": "contract ENSInterface"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "9009:30:1"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 676,
														"name": "ensNode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 677,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9055:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9045:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9045:14:1"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "pliSubnode",
														"nameLocation": "9073:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "9065:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 680,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 685,
																	"name": "ensNode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "9113:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 686,
																	"name": "ENS_TOKEN_SUBNAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "9122:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 683,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9096:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9096:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9096:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 682,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9086:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9086:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9065:76:1"
											},
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "resolver",
														"nameLocation": "9166:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "9147:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSResolver_$2093",
															"typeString": "contract ENSResolver"
														},
														"typeName": {
															"id": 691,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 690,
																"name": "ENSResolver_Plugin",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2093,
																"src": "9147:18:1"
															},
															"referencedDeclaration": 2093,
															"src": "9147:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENSResolver_$2093",
																"typeString": "contract ENSResolver"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 696,
																	"name": "pliSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9209:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 694,
																	"name": "ens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9196:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSInterface_$879",
																		"typeString": "contract ENSInterface"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resolver",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "9196:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9196:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 693,
														"name": "ENSResolver_Plugin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "9177:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ENSResolver_$2093_$",
															"typeString": "type(contract ENSResolver)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9177:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSResolver_$2093",
														"typeString": "contract ENSResolver"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9147:74:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 703,
																	"name": "pliSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9256:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 701,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "9242:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSResolver_$2093",
																		"typeString": "contract ENSResolver"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2092,
																"src": "9242:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9242:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 700,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "9227:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9227:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "9227:41:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 707,
														"name": "updatePluginOracleWithENS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "9274:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9274:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "9274:27:1"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "8660:253:1",
										"text": " @notice Sets the stored oracle and PLI token contracts with the addresses resolved by ENS\n @dev Accounts for subnodes having different resolvers\n @param ensAddress The address of the ENS contract\n @param node The ENS node hash"
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "usePluginWithENS",
									"nameLocation": "8925:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "ensAddress",
												"nameLocation": "8955:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8947:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "8979:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8971:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8941:46:1"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9003:0:1"
									},
									"scope": 799,
									"src": "8916:390:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "9549:225:1",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "oracleSubnode",
														"nameLocation": "9563:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "9555:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 715,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9555:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 720,
																	"name": "ensNode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "9606:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 721,
																	"name": "ENS_ORACLE_SUBNAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "9615:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9589:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9589:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9589:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 717,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9579:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9579:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9555:80:1"
											},
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "resolver",
														"nameLocation": "9660:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "9641:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ENSResolver_$2093",
															"typeString": "contract ENSResolver"
														},
														"typeName": {
															"id": 726,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 725,
																"name": "ENSResolver_Plugin",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2093,
																"src": "9641:18:1"
															},
															"referencedDeclaration": 2093,
															"src": "9641:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ENSResolver_$2093",
																"typeString": "contract ENSResolver"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "oracleSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9703:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 729,
																	"name": "ens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9690:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSInterface_$879",
																		"typeString": "contract ENSInterface"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "resolver",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "9690:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9690:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "ENSResolver_Plugin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "9671:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ENSResolver_$2093_$",
															"typeString": "type(contract ENSResolver)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9671:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ENSResolver_$2093",
														"typeString": "contract ENSResolver"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9641:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 738,
																	"name": "oracleSubnode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9754:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 736,
																	"name": "resolver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "9740:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ENSResolver_$2093",
																		"typeString": "contract ENSResolver"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2092,
																"src": "9740:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32) view external returns (address)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9740:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 735,
														"name": "setPluginOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "9724:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9724:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "9724:45:1"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "9310:184:1",
										"text": " @notice Sets the stored oracle contract with the address resolved by ENS\n @dev This may be called on its own as long as `usePluginWithENS` has been called previously"
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePluginOracleWithENS",
									"nameLocation": "9506:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9531:2:1"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9549:0:1"
									},
									"scope": 799,
									"src": "9497:277:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "10166:2:1",
										"statements": []
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "9778:223:1",
										"text": " @notice Ensures that the fulfillment is valid for this contract\n @dev Use if the contract developer prefers methods instead of modifiers for validation\n @param requestId The request ID for fulfillment"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 749,
													"name": "requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 746,
													"src": "10104:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 750,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 748,
												"name": "recordPluginFulfillment",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "10080:23:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10080:34:1"
										}
									],
									"name": "validatePluginCallback",
									"nameLocation": "10013:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "10049:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "10041:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 745,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10035:27:1"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10166:0:1"
									},
									"scope": 799,
									"src": "10004:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "10399:199:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 759,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10413:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10413:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 761,
																	"name": "pendingRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "10427:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																		"typeString": "mapping(bytes32 => address)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"id": 762,
																	"name": "requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "10443:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10427:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10413:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10467:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4",
																"typeString": "literal_string \"Source must be the oracle of the request\""
															},
															"value": "Source must be the oracle of the request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5cafe2745dab6273b51cca76f8727c7664db74ede49af049a5b5ca6a3b184e4",
																"typeString": "literal_string \"Source must be the oracle of the request\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10405:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10405:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "10405:105:1"
											},
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10516:33:1",
													"subExpression": {
														"baseExpression": {
															"id": 768,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "10523:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 770,
														"indexExpression": {
															"id": 769,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10539:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10523:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "10516:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 774,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10576:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 773,
														"name": "PluginFulfilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "10560:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10560:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "EmitStatement",
												"src": "10555:31:1"
											},
											{
												"id": 777,
												"nodeType": "PlaceholderStatement",
												"src": "10592:1:1"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "10172:162:1",
										"text": " @dev Reverts if the sender is not the oracle of the request.\n Emits PluginFulfilled event.\n @param requestId The request ID for fulfillment"
									},
									"id": 779,
									"name": "recordPluginFulfillment",
									"nameLocation": "10346:23:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "10383:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "10375:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10369:27:1"
									},
									"src": "10337:261:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10775:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 785,
																	"name": "pendingRequests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "10789:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																		"typeString": "mapping(bytes32 => address)"
																	}
																},
																"id": 787,
																"indexExpression": {
																	"id": 786,
																	"name": "requestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "10805:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10789:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10827:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10819:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10819:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10819:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10789:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420697320616c72656164792070656e64696e67",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10831:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa",
																"typeString": "literal_string \"Request is already pending\""
															},
															"value": "Request is already pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efa688de2ca2442cd2f76ca864c7a15bdcb24ac77ed3de01d4cf9f6afd58c7aa",
																"typeString": "literal_string \"Request is already pending\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10781:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "10781:79:1"
											},
											{
												"id": 796,
												"nodeType": "PlaceholderStatement",
												"src": "10866:1:1"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "10602:114:1",
										"text": " @dev Reverts if the request is already pending\n @param requestId The request ID for fulfillment"
									},
									"id": 798,
									"name": "notPendingRequest",
									"nameLocation": "10728:17:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "10759:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10751:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 781,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10745:27:1"
									},
									"src": "10719:153:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "485:10389:1",
							"usedErrors": []
						}
					],
					"src": "32:10843:1"
				},
				"id": 1
			},
			"@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/ENSInterface.sol",
					"exportedSymbols": {
						"ENSInterface": [
							879
						]
					},
					"id": 880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 879,
							"linearizedBaseContracts": [
								879
							],
							"name": "ENSInterface",
							"nameLocation": "67:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 809,
									"name": "NewOwner",
									"nameLocation": "162:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "192:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "176:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "218:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "202:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 804,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "237:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "229:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:76:2"
									},
									"src": "156:91:2"
								},
								{
									"anonymous": false,
									"id": 815,
									"name": "Transfer",
									"nameLocation": "332:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "362:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "346:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "380:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "372:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:49:2"
									},
									"src": "326:64:2"
								},
								{
									"anonymous": false,
									"id": 821,
									"name": "NewResolver",
									"nameLocation": "450:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "467:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 816,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": false,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "501:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "493:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:52:2"
									},
									"src": "444:70:2"
								},
								{
									"anonymous": false,
									"id": 827,
									"name": "NewTTL",
									"nameLocation": "567:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "595:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "579:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"indexed": false,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "612:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "605:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 824,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "605:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:46:2"
									},
									"src": "561:59:2"
								},
								{
									"functionSelector": "06ab5923",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeOwner",
									"nameLocation": "634:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "663:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "655:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "label",
												"nameLocation": "681:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "673:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "700:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "692:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "649:60:2"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:0:2"
									},
									"scope": 879,
									"src": "625:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1896f70a",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResolver",
									"nameLocation": "732:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "757:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "749:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "775:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "767:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:44:2"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:2"
									},
									"scope": 879,
									"src": "723:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0fc9c3",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "810:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "832:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "824:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "850:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "842:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:41:2"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:0:2"
									},
									"scope": 879,
									"src": "801:68:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14ab9038",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTTL",
									"nameLocation": "882:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "902:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "894:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "ttl",
												"nameLocation": "919:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "912:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 853,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "912:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:38:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:2"
									},
									"scope": 879,
									"src": "873:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02571be3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "949:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "968:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "960:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:22:2"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1019:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:21:2"
									},
									"scope": 879,
									"src": "940:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0178b8bf",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolver",
									"nameLocation": "1046:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1068:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1060:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:22:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:21:2"
									},
									"scope": 879,
									"src": "1037:96:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "16a25cbd",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ttl",
									"nameLocation": "1146:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "1163:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1155:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:22:2"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1214:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 875,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1214:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:20:2"
									},
									"scope": 879,
									"src": "1137:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 880,
							"src": "57:1173:2",
							"usedErrors": []
						}
					],
					"src": "32:1199:2"
				},
				"id": 2
			},
			"@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/OperatorInterface.sol",
					"exportedSymbols": {
						"OperatorInterface": [
							961
						],
						"OracleInterface": [
							1000
						],
						"PluginRequestInterface": [
							1128
						]
					},
					"id": 962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol",
							"file": "./OracleInterface.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 1001,
							"src": "57:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol",
							"file": "./PluginRequestInterface.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 1129,
							"src": "89:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 884,
										"name": "OracleInterface",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1000,
										"src": "160:15:3"
									},
									"id": 885,
									"nodeType": "InheritanceSpecifier",
									"src": "160:15:3"
								},
								{
									"baseName": {
										"id": 886,
										"name": "PluginRequestInterface",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1128,
										"src": "177:22:3"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "177:22:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 961,
							"linearizedBaseContracts": [
								961,
								1128,
								1000
							],
							"name": "OperatorInterface",
							"nameLocation": "139:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6de879d6",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestOracleData",
									"nameLocation": "214:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "265:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "257:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "specId",
												"nameLocation": "286:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "278:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 892,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "callbackAddress",
												"nameLocation": "306:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "298:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "callbackFunctionId",
												"nameLocation": "334:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "327:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 896,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "327:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "358:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "dataVersion",
												"nameLocation": "385:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "377:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "417:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "402:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 902,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "402:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:194:3"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:0:3"
									},
									"scope": 961,
									"src": "205:234:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ae0bc76",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillOracleRequest2",
									"nameLocation": "452:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "487:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "479:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 907,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "510:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "502:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "callbackAddress",
												"nameLocation": "531:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "523:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "callbackFunctionId",
												"nameLocation": "559:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "552:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 913,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "591:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "622:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "607:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "607:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:157:3"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "664:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:18:3"
									},
									"scope": 961,
									"src": "443:232:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "902fc370",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerTransferAndCall",
									"nameLocation": "688:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "722:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "714:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "738:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "730:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:64:3"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "811:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "806:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:26:3"
									},
									"scope": 961,
									"src": "679:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6bd59ec0",
									"id": 943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distributeFunds",
									"nameLocation": "838:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "886:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "859:36:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 935,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "859:15:3",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 936,
													"nodeType": "ArrayTypeName",
													"src": "859:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "901:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 938,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "901:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 939,
													"nodeType": "ArrayTypeName",
													"src": "901:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:75:3"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:0:3"
									},
									"scope": 961,
									"src": "829:125:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2408afaa",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorizedSenders",
									"nameLocation": "967:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:3"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1023:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 945,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1023:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 946,
													"nodeType": "ArrayTypeName",
													"src": "1023:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:30:3"
									},
									"scope": 961,
									"src": "958:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ee56997b",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAuthorizedSenders",
									"nameLocation": "1059:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "senders",
												"nameLocation": "1104:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1085:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 950,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1085:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 951,
													"nodeType": "ArrayTypeName",
													"src": "1085:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:36:3"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:3"
									},
									"scope": 961,
									"src": "1050:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0042526",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getForwarder",
									"nameLocation": "1138:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:2:3"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1186:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:21:3"
									},
									"scope": 961,
									"src": "1129:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 962,
							"src": "129:1073:3",
							"usedErrors": []
						}
					],
					"src": "32:1171:3"
				},
				"id": 3
			},
			"@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/OracleInterface.sol",
					"exportedSymbols": {
						"OracleInterface": [
							1000
						]
					},
					"id": 1001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "OracleInterface",
							"nameLocation": "67:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4ab0d190",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillOracleRequest",
									"nameLocation": "96:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "130:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "122:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "callbackAddress",
												"nameLocation": "174:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "166:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "callbackFunctionId",
												"nameLocation": "202:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "195:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 970,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "195:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "234:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "226:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "258:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "250:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:150:4"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "300:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:18:4"
									},
									"scope": 1000,
									"src": "87:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fa00763a",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAuthorizedSender",
									"nameLocation": "324:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "356:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "348:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:22:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "407:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:18:4"
									},
									"scope": 1000,
									"src": "315:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "431:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "453:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "445:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "476:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "468:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:47:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:4"
									},
									"scope": 1000,
									"src": "422:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "50188301",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawable",
									"nameLocation": "509:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:2:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "566:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:21:4"
									},
									"scope": 1000,
									"src": "500:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1001,
							"src": "57:525:4",
							"usedErrors": []
						}
					],
					"src": "32:551:4"
				},
				"id": 4
			},
			"@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PliTokenInterface.sol",
					"exportedSymbols": {
						"PliTokenInterface": [
							1095
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1002,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1095,
							"linearizedBaseContracts": [
								1095
							],
							"name": "PliTokenInterface",
							"nameLocation": "67:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dd62ed3e",
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "99:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "122:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "114:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "141:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "133:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:44:5"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "203:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "195:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:31:5"
									},
									"scope": 1095,
									"src": "90:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "232:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "253:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "245:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "274:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "266:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:44:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "322:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "317:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "317:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:26:5"
									},
									"scope": 1095,
									"src": "223:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "349:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "372:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "364:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:23:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "432:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "424:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:29:5"
									},
									"scope": 1095,
									"src": "340:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "459:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:5"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nameLocation": "518:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "512:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1029,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "512:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:33:5"
									},
									"scope": 1095,
									"src": "450:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66188463",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nameLocation": "551:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "581:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "573:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "602:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "594:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:49:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "655:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "650:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "650:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:26:5"
									},
									"scope": 1095,
									"src": "542:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d73dd623",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nameLocation": "682:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "712:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "704:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "733:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "725:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:54:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:5"
									},
									"scope": 1095,
									"src": "673:89:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "775:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:5"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "838:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "824:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1050,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:37:5"
									},
									"scope": 1095,
									"src": "766:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "867:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "932:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "918:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "918:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:39:5"
									},
									"scope": 1095,
									"src": "858:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "963:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nameLocation": "1027:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1019:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:39:5"
									},
									"scope": 1095,
									"src": "954:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1064:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1086:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1078:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1102:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1094:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:39:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1150:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1145:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:26:5"
									},
									"scope": 1095,
									"src": "1055:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4000aea0",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1177:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1206:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1198:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1222:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1214:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1248:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1233:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:64:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1295:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1290:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:26:5"
									},
									"scope": 1095,
									"src": "1168:141:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1322:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1348:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1340:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1366:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1358:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1382:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1374:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:57:5"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1430:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1425:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:26:5"
									},
									"scope": 1095,
									"src": "1313:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1096,
							"src": "57:1390:5",
							"usedErrors": []
						}
					],
					"src": "32:1416:5"
				},
				"id": 5
			},
			"@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PluginRequestInterface.sol",
					"exportedSymbols": {
						"PluginRequestInterface": [
							1128
						]
					},
					"id": 1129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1128,
							"linearizedBaseContracts": [
								1128
							],
							"name": "PluginRequestInterface",
							"nameLocation": "67:22:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40429946",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "oracleRequest",
									"nameLocation": "103:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "130:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "122:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "requestPrice",
												"nameLocation": "150:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "142:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "serviceAgreementID",
												"nameLocation": "176:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "168:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "callbackAddress",
												"nameLocation": "208:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "200:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "callbackFunctionId",
												"nameLocation": "236:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "229:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "229:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "260:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "dataVersion",
												"nameLocation": "287:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "279:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "319:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "304:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "304:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:211:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:6"
									},
									"scope": 1128,
									"src": "94:243:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ee4d553",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOracleRequest",
									"nameLocation": "350:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "383:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "375:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "406:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "398:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "callbackFunctionId",
												"nameLocation": "426:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "419:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "419:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "458:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "450:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:103:6"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:0:6"
									},
									"scope": 1128,
									"src": "341:141:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1129,
							"src": "57:427:6",
							"usedErrors": []
						}
					],
					"src": "32:453:6"
				},
				"id": 6
			},
			"@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/interfaces/PointerInterface.sol",
					"exportedSymbols": {
						"PointerInterface": [
							1136
						]
					},
					"id": 1137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1136,
							"linearizedBaseContracts": [
								1136
							],
							"name": "PointerInterface",
							"nameLocation": "67:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38cc4831",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "100:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "155:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:21:7"
									},
									"scope": 1136,
									"src": "91:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1137,
							"src": "57:114:7",
							"usedErrors": []
						}
					],
					"src": "32:140:7"
				},
				"id": 7
			},
			"@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol",
					"exportedSymbols": {
						"BufferPlugin": [
							1658
						]
					},
					"id": 1659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1139,
								"nodeType": "StructuredDocumentation",
								"src": "57:376:8",
								"text": " @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for writing to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."
							},
							"fullyImplemented": true,
							"id": 1658,
							"linearizedBaseContracts": [
								1658
							],
							"name": "BufferPlugin",
							"nameLocation": "442:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BufferPlugin.buffer",
									"id": 1144,
									"members": [
										{
											"constant": false,
											"id": 1141,
											"mutability": "mutable",
											"name": "buf",
											"nameLocation": "729:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 1144,
											"src": "723:9:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1140,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "723:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1143,
											"mutability": "mutable",
											"name": "capacity",
											"nameLocation": "743:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1144,
											"src": "738:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1142,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "738:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "buffer",
									"nameLocation": "710:6:8",
									"nodeType": "StructDefinition",
									"scope": 1658,
									"src": "703:53:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "1102:310:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1156,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "1112:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3332",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1123:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1112:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1129:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1112:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "1108:71:8",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "1132:47:8",
													"statements": [
														{
															"expression": {
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1161,
																	"name": "capacity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "1140:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3332",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1152:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1163,
																					"name": "capacity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1150,
																					"src": "1158:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "3332",
																					"id": 1164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1169:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_32_by_1",
																						"typeString": "int_const 32"
																					},
																					"value": "32"
																				},
																				"src": "1158:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1157:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1152:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1140:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "1140:32:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1172,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "1226:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "1226:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1175,
														"name": "capacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "1241:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1226:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1226:23:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1264:128:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1272:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1283:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:11:8"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1276:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "1308:3:8"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1313:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1301:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1301:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1301:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1331:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1324:14:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:2:8",
																				"type": "",
																				"value": "32"
																			},
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "1370:3:8"
																					},
																					{
																						"name": "capacity",
																						"nodeType": "YulIdentifier",
																						"src": "1375:8:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1366:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1366:18:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:27:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:41:8"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1148,
														"isOffset": false,
														"isSlot": false,
														"src": "1308:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "1375:8:8",
														"valueSize": 1
													}
												],
												"id": 1178,
												"nodeType": "InlineAssembly",
												"src": "1255:137:8"
											},
											{
												"expression": {
													"id": 1179,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1148,
													"src": "1404:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1180,
												"nodeType": "Return",
												"src": "1397:10:8"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "760:216:8",
										"text": " @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "988:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1012:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "998:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1146,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "998:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "998:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "1026:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1021:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:46:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1152,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1080:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "1080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:27:8"
									},
									"scope": 1658,
									"src": "979:433:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "1747:90:8",
										"statements": [
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "buf",
														"nameLocation": "1767:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "1753:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
															"typeString": "struct BufferPlugin.buffer"
														},
														"typeName": {
															"id": 1192,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1191,
																"name": "buffer",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1144,
																"src": "1753:6:8"
															},
															"referencedDeclaration": 1144,
															"src": "1753:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
																"typeString": "struct BufferPlugin.buffer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"nodeType": "VariableDeclarationStatement",
												"src": "1753:17:8"
											},
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1195,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1776:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1141,
														"src": "1776:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1198,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "1786:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1776:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "1776:11:8"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1201,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1793:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "1793:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1204,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "1808:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1808:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "1793:23:8"
											},
											{
												"expression": {
													"id": 1208,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1193,
													"src": "1829:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1190,
												"id": 1209,
												"nodeType": "Return",
												"src": "1822:10:8"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "1416:222:8",
										"text": " @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromBytes",
									"nameLocation": "1650:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1678:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1665:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1665:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1659:24:8"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1725:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1188,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1187,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1725:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "1725:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:27:8"
									},
									"scope": 1658,
									"src": "1641:196:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "1926:90:8",
										"statements": [
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "oldbuf",
														"nameLocation": "1945:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "1932:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1932:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"expression": {
														"id": 1221,
														"name": "buf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1954:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
															"typeString": "struct BufferPlugin.buffer memory"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "buf",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1141,
													"src": "1954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1932:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "1972:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 1226,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1977:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "1967:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1967:19:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "1999:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 1231,
															"name": "oldbuf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2004:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1229,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1378,
															1401
														],
														"referencedDeclaration": 1401,
														"src": "1992:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1992:19:8"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resize",
									"nameLocation": "1850:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1876:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1862:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1212,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1862:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "1862:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "1890:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1885:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1885:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:46:8"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:0:8"
									},
									"scope": 1658,
									"src": "1841:175:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "2114:58:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "2124:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1245,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "2128:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2124:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "2120:34:8",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "2131:23:8",
													"statements": [
														{
															"expression": {
																"id": 1247,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "2146:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1243,
															"id": 1248,
															"nodeType": "Return",
															"src": "2139:8:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1251,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1239,
													"src": "2166:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1252,
												"nodeType": "Return",
												"src": "2159:8:8"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2029:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2043:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2038:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2038:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2055:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2050:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:28:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2101:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2101:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:18:8"
									},
									"scope": 1658,
									"src": "2020:152:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2417:97:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2432:62:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2440:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "2460:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2454:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:10:8"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "2444:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:17:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:17:8"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1258,
														"isOffset": false,
														"isSlot": false,
														"src": "2460:3:8",
														"valueSize": 1
													}
												],
												"id": 1264,
												"nodeType": "InlineAssembly",
												"src": "2423:71:8"
											},
											{
												"expression": {
													"id": 1265,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "2506:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1266,
												"nodeType": "Return",
												"src": "2499:10:8"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "2176:129:8",
										"text": " @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "truncate",
									"nameLocation": "2317:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2345:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2331:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1256,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2331:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "2331:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:27:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2395:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1260,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2395:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "2395:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:27:8"
									},
									"scope": 1658,
									"src": "2308:206:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "3010:1066:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "3024:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1286,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "3031:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3031:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3024:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3016:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3016:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3016:27:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1291,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3054:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1292,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3060:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3054:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1294,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3066:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "3066:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3054:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "3050:90:8",
												"trueBody": {
													"id": 1310,
													"nodeType": "Block",
													"src": "3080:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1298,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "3095:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1300,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1272,
																						"src": "3104:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																							"typeString": "struct BufferPlugin.buffer memory"
																						}
																					},
																					"id": 1301,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "capacity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1143,
																					"src": "3104:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1302,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "3118:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1303,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1274,
																						"src": "3124:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3118:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1299,
																				"name": "max",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1254,
																				"src": "3100:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3100:28:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3131:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3100:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1297,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "3088:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3088:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1309,
															"nodeType": "ExpressionStatement",
															"src": "3088:45:8"
														}
													]
												}
											},
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "dest",
														"nameLocation": "3151:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "3146:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1312,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3146:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"nodeType": "VariableDeclarationStatement",
												"src": "3146:9:8"
											},
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "3166:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "3161:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1315,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3161:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"nodeType": "VariableDeclarationStatement",
												"src": "3161:8:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3184:430:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3235:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "3255:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3249:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:10:8"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "3239:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3306:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "3326:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3320:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:13:8"
															},
															"variables": [
																{
																	"name": "buflen",
																	"nodeType": "YulTypedName",
																	"src": "3310:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3413:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "3429:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:15:8"
																	},
																	{
																		"name": "off",
																		"nodeType": "YulIdentifier",
																		"src": "3442:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:25:8"
															},
															"variableNames": [
																{
																	"name": "dest",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3534:47:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "3551:6:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "3563:3:8"
																						},
																						{
																							"name": "off",
																							"nodeType": "YulIdentifier",
																							"src": "3568:3:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3559:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3559:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3544:29:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3515:3:8"
																			},
																			{
																				"name": "off",
																				"nodeType": "YulIdentifier",
																				"src": "3520:3:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:13:8"
																	},
																	{
																		"name": "buflen",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3508:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:25:8"
															},
															"nodeType": "YulIf",
															"src": "3505:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3588:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3599:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:13:8"
															},
															"variableNames": [
																{
																	"name": "src",
																	"nodeType": "YulIdentifier",
																	"src": "3588:3:8"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1272,
														"isOffset": false,
														"isSlot": false,
														"src": "3255:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1276,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1313,
														"isOffset": false,
														"isSlot": false,
														"src": "3413:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1278,
														"isOffset": false,
														"isSlot": false,
														"src": "3515:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1278,
														"isOffset": false,
														"isSlot": false,
														"src": "3563:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1274,
														"isOffset": false,
														"isSlot": false,
														"src": "3442:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1274,
														"isOffset": false,
														"isSlot": false,
														"src": "3520:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1274,
														"isOffset": false,
														"isSlot": false,
														"src": "3568:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1316,
														"isOffset": false,
														"isSlot": false,
														"src": "3588:3:8",
														"valueSize": 1
													}
												],
												"id": 1318,
												"nodeType": "InlineAssembly",
												"src": "3175:439:8"
											},
											{
												"body": {
													"id": 1335,
													"nodeType": "Block",
													"src": "3695:100:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3712:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "3729:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3741:3:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3735:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3735:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3722:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3722:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3722:24:8"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1313,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3729:4:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1316,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3741:3:8",
																	"valueSize": 1
																}
															],
															"id": 1326,
															"nodeType": "InlineAssembly",
															"src": "3703:51:8"
														},
														{
															"expression": {
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1327,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "3761:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3769:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3761:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "3761:10:8"
														},
														{
															"expression": {
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1331,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "3779:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3786:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3779:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "3779:9:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3673:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3680:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3673:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"loopExpression": {
													"expression": {
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1322,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3684:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "3332",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "3684:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"nodeType": "ExpressionStatement",
													"src": "3684:9:8"
												},
												"nodeType": "ForStatement",
												"src": "3666:129:8"
											},
											{
												"id": 1350,
												"nodeType": "UncheckedBlock",
												"src": "3829:226:8",
												"statements": [
													{
														"assignments": [
															1338
														],
														"declarations": [
															{
																"constant": false,
																"id": 1338,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "3852:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1350,
																"src": "3847:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1337,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "3847:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1348,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3860:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3332",
																						"id": 1340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3868:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1341,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "3873:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3868:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1343,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3867:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3860:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3859:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3881:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3859:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3847:35:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3899:150:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3909:41:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "src",
																						"nodeType": "YulIdentifier",
																						"src": "3934:3:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3928:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3928:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mask",
																						"nodeType": "YulIdentifier",
																						"src": "3944:4:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3940:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3940:9:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:26:8"
																	},
																	"variables": [
																		{
																			"name": "srcpart",
																			"nodeType": "YulTypedName",
																			"src": "3913:7:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3959:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "dest",
																						"nodeType": "YulIdentifier",
																						"src": "3985:4:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3979:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3979:11:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3992:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:22:8"
																	},
																	"variables": [
																		{
																			"name": "destpart",
																			"nodeType": "YulTypedName",
																			"src": "3963:8:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "4013:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "destpart",
																						"nodeType": "YulIdentifier",
																						"src": "4022:8:8"
																					},
																					{
																						"name": "srcpart",
																						"nodeType": "YulIdentifier",
																						"src": "4032:7:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "4019:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4019:21:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4006:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4006:35:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4006:35:8"
																}
															]
														},
														"evmVersion": "istanbul",
														"externalReferences": [
															{
																"declaration": 1313,
																"isOffset": false,
																"isSlot": false,
																"src": "3985:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1313,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1338,
																"isOffset": false,
																"isSlot": false,
																"src": "3944:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1338,
																"isOffset": false,
																"isSlot": false,
																"src": "3992:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1316,
																"isOffset": false,
																"isSlot": false,
																"src": "3934:3:8",
																"valueSize": 1
															}
														],
														"id": 1349,
														"nodeType": "InlineAssembly",
														"src": "3890:159:8"
													}
												]
											},
											{
												"expression": {
													"id": 1351,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1272,
													"src": "4068:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1352,
												"nodeType": "Return",
												"src": "4061:10:8"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2518:333:8",
										"text": " @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The start offset to write to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nameLocation": "2863:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2888:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2874:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2874:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "2874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "2902:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2897:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2924:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2911:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2911:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "2939:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2934:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2934:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:78:8"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2988:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2988:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "2988:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:27:8"
									},
									"scope": 1658,
									"src": "2854:1222:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "4516:55:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "4535:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1370,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "4540:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "4540:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4540:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "4556:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1374,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4562:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1368,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1354,
															1514
														],
														"referencedDeclaration": 1354,
														"src": "4529:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4529:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1376,
												"nodeType": "Return",
												"src": "4522:44:8"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "4080:289:8",
										"text": " @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "4381:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "4407:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "4393:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1357,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1356,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "4393:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "4393:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4429:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "4416:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4416:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "4444:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "4439:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4439:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4387:64:8"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "4494:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1364,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "4494:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "4494:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:27:8"
									},
									"scope": 1658,
									"src": "4372:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "4953:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "4972:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1392,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "4977:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "4977:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4977:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "4993:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 1396,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "4999:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4999:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1390,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1354,
															1514
														],
														"referencedDeclaration": 1354,
														"src": "4966:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,bytes memory,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1389,
												"id": 1399,
												"nodeType": "Return",
												"src": "4959:52:8"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "4575:245:8",
										"text": " @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "4832:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "4858:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4844:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "4844:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "4844:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4880:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4867:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4867:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:50:8"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "4931:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1386,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "4931:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "4931:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4923:27:8"
									},
									"scope": 1658,
									"src": "4823:193:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "5450:521:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1415,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "5460:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1416,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "5467:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "5467:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5460:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1428,
												"nodeType": "IfStatement",
												"src": "5456:69:8",
												"trueBody": {
													"id": 1427,
													"nodeType": "Block",
													"src": "5481:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1420,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "5496:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1421,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "5501:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "capacity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1143,
																			"src": "5501:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5516:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "5501:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1419,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "5489:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5489:29:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1426,
															"nodeType": "ExpressionStatement",
															"src": "5489:29:8"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5540:411:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5591:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5605:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:10:8"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "5595:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5662:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5676:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5676:13:8"
															},
															"variables": [
																{
																	"name": "buflen",
																	"nodeType": "YulTypedName",
																	"src": "5666:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5760:37:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "5780:6:8"
																			},
																			{
																				"name": "off",
																				"nodeType": "YulIdentifier",
																				"src": "5788:3:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:25:8"
															},
															"variables": [
																{
																	"name": "dest",
																	"nodeType": "YulTypedName",
																	"src": "5764:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5812:4:8"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5818:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nodeType": "YulIdentifier",
																	"src": "5804:7:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5804:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5804:19:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5897:48:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "5914:6:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "buflen",
																							"nodeType": "YulIdentifier",
																							"src": "5926:6:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5934:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5922:14:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5907:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5907:30:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5907:30:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "off",
																		"nodeType": "YulIdentifier",
																		"src": "5884:3:8"
																	},
																	{
																		"name": "buflen",
																		"nodeType": "YulIdentifier",
																		"src": "5889:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5881:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:15:8"
															},
															"nodeType": "YulIf",
															"src": "5878:2:8"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1405,
														"isOffset": false,
														"isSlot": false,
														"src": "5611:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1409,
														"isOffset": false,
														"isSlot": false,
														"src": "5818:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1407,
														"isOffset": false,
														"isSlot": false,
														"src": "5788:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1407,
														"isOffset": false,
														"isSlot": false,
														"src": "5884:3:8",
														"valueSize": 1
													}
												],
												"id": 1429,
												"nodeType": "InlineAssembly",
												"src": "5531:420:8"
											},
											{
												"expression": {
													"id": 1430,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "5963:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1431,
												"nodeType": "Return",
												"src": "5956:10:8"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "5020:287:8",
										"text": " @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write the byte at.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeUint8",
									"nameLocation": "5319:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "5349:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5335:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1403,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "5335:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "5335:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "5363:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5358:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5358:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5378:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5372:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5372:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:57:8"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5428:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1411,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "5428:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "5428:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5420:27:8"
									},
									"scope": 1658,
									"src": "5310:661:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "6345:55:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1446,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "6369:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1447,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "6374:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "6374:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6374:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "6390:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1445,
														"name": "writeUint8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "6358:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint8) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1452,
												"nodeType": "Return",
												"src": "6351:44:8"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "5975:240:8",
										"text": " @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendUint8",
									"nameLocation": "6227:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "6258:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6244:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "6244:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "6244:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6273:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6267:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1438,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6267:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6238:43:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6323:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1441,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "6323:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "6323:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6315:27:8"
									},
									"scope": 1658,
									"src": "6218:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "6903:651:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1470,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "6913:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1471,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "6919:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6913:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1473,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6925:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "6925:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6913:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "6909:73:8",
												"trueBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "6939:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1477,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "6954:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1478,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1464,
																						"src": "6960:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1479,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1460,
																						"src": "6966:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6960:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1481,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6959:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6973:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6959:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1476,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "6947:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6947:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "6947:28:8"
														}
													]
												}
											},
											{
												"id": 1510,
												"nodeType": "UncheckedBlock",
												"src": "6988:546:8",
												"statements": [
													{
														"assignments": [
															1489
														],
														"declarations": [
															{
																"constant": false,
																"id": 1489,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "7011:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1510,
																"src": "7006:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1488,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "7006:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1496,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7019:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 1491,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "7026:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7019:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7018:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7033:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7018:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7006:28:8"
													},
													{
														"expression": {
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1497,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "7068:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1498,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "7075:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "38",
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7084:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1502,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3332",
																							"id": 1500,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7089:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1501,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1464,
																							"src": "7094:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7089:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1503,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7088:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7084:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7083:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7075:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "7068:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1508,
														"nodeType": "ExpressionStatement",
														"src": "7068:31:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "7116:412:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7171:24:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buf",
																				"nodeType": "YulIdentifier",
																				"src": "7191:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7185:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:10:8"
																	},
																	"variables": [
																		{
																			"name": "bufptr",
																			"nodeType": "YulTypedName",
																			"src": "7175:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7276:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "bufptr",
																						"nodeType": "YulIdentifier",
																						"src": "7296:6:8"
																					},
																					{
																						"name": "off",
																						"nodeType": "YulIdentifier",
																						"src": "7304:3:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7292:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7292:16:8"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7310:3:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7288:26:8"
																	},
																	"variables": [
																		{
																			"name": "dest",
																			"nodeType": "YulTypedName",
																			"src": "7280:4:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "7330:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "dest",
																										"nodeType": "YulIdentifier",
																										"src": "7349:4:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7343:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7343:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"name": "mask",
																										"nodeType": "YulIdentifier",
																										"src": "7360:4:8"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "7356:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7356:9:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "7339:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7339:27:8"
																					},
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "7368:4:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "7336:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7336:37:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7323:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7323:51:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7323:51:8"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7469:51:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "bufptr",
																							"nodeType": "YulIdentifier",
																							"src": "7488:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "off",
																									"nodeType": "YulIdentifier",
																									"src": "7500:3:8"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7505:3:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7496:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7496:13:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7481:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7481:29:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7481:29:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "off",
																						"nodeType": "YulIdentifier",
																						"src": "7443:3:8"
																					},
																					{
																						"name": "len",
																						"nodeType": "YulIdentifier",
																						"src": "7448:3:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7439:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7439:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "bufptr",
																						"nodeType": "YulIdentifier",
																						"src": "7460:6:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "7454:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7454:13:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7436:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:32:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7433:2:8"
																}
															]
														},
														"evmVersion": "istanbul",
														"externalReferences": [
															{
																"declaration": 1458,
																"isOffset": false,
																"isSlot": false,
																"src": "7191:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1462,
																"isOffset": false,
																"isSlot": false,
																"src": "7368:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1464,
																"isOffset": false,
																"isSlot": false,
																"src": "7310:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1464,
																"isOffset": false,
																"isSlot": false,
																"src": "7448:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1464,
																"isOffset": false,
																"isSlot": false,
																"src": "7505:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1489,
																"isOffset": false,
																"isSlot": false,
																"src": "7360:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1460,
																"isOffset": false,
																"isSlot": false,
																"src": "7304:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1460,
																"isOffset": false,
																"isSlot": false,
																"src": "7443:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1460,
																"isOffset": false,
																"isSlot": false,
																"src": "7500:3:8",
																"valueSize": 1
															}
														],
														"id": 1509,
														"nodeType": "InlineAssembly",
														"src": "7107:421:8"
													}
												]
											},
											{
												"expression": {
													"id": 1511,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1458,
													"src": "7546:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1512,
												"nodeType": "Return",
												"src": "7539:10:8"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "6404:346:8",
										"text": " @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nameLocation": "6762:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "6787:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6773:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1456,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "6773:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "6773:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "6801:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6796:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6796:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6818:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6810:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "6833:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6828:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6828:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:73:8"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6881:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1466,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "6881:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "6881:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:27:8"
									},
									"scope": 1658,
									"src": "6753:801:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "7987:52:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "8006:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 1530,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "8011:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1533,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "8024:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8016:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1531,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8016:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8016:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3230",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8031:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 1528,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1354,
															1514
														],
														"referencedDeclaration": 1514,
														"src": "8000:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8000:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1537,
												"nodeType": "Return",
												"src": "7993:41:8"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "7558:281:8",
										"text": " @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeBytes20",
									"nameLocation": "7851:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "7883:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "7869:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1517,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1516,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "7869:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "7869:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "7897:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "7892:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7892:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7914:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "7906:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "7906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7863:59:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "7965:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "7965:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "7965:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:27:8"
									},
									"scope": 1658,
									"src": "7842:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "8422:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "8441:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1553,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "8446:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "8446:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8446:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1558,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "8470:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1556,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3230",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8477:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 1551,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1354,
															1514
														],
														"referencedDeclaration": 1514,
														"src": "8435:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8435:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1562,
												"nodeType": "Return",
												"src": "8428:52:8"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "8043:244:8",
										"text": " @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes20",
									"nameLocation": "8299:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "8332:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8318:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1541,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "8318:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "8318:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8349:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8341:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8312:45:8"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "8400:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1547,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "8400:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "8400:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8392:27:8"
									},
									"scope": 1658,
									"src": "8290:195:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "8867:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "8886:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1578,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "8891:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "8891:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8891:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1581,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "8907:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3332",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8913:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1576,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1354,
															1514
														],
														"referencedDeclaration": 1514,
														"src": "8880:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,bytes32,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1584,
												"nodeType": "Return",
												"src": "8873:43:8"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "8489:243:8",
										"text": " @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes32",
									"nameLocation": "8744:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "8777:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "8763:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1566,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "8763:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "8763:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "8786:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8786:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8757:45:8"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "8845:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1572,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "8845:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "8845:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:27:8"
									},
									"scope": 1658,
									"src": "8735:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "9421:540:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1602,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "9431:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1603,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "9437:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9431:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1605,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "9443:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "9443:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9431:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "9427:73:8",
												"trueBody": {
													"id": 1618,
													"nodeType": "Block",
													"src": "9457:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1609,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "9472:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1610,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1596,
																						"src": "9478:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1611,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1592,
																						"src": "9484:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9478:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1613,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9477:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9491:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9477:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1608,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "9465:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct BufferPlugin.buffer memory,uint256) pure"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1617,
															"nodeType": "ExpressionStatement",
															"src": "9465:28:8"
														}
													]
												}
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "9511:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "9506:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9506:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "323536",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9519:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1623,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "9526:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9519:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1625,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9518:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9533:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9518:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9506:28:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9549:392:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9600:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "9620:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9614:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9614:10:8"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "9604:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9701:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "9721:6:8"
																			},
																			{
																				"name": "off",
																				"nodeType": "YulIdentifier",
																				"src": "9729:3:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9717:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9717:16:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9735:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9713:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9713:26:8"
															},
															"variables": [
																{
																	"name": "dest",
																	"nodeType": "YulTypedName",
																	"src": "9705:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "9753:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "dest",
																								"nodeType": "YulIdentifier",
																								"src": "9772:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9766:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9766:11:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "9783:4:8"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9779:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9779:9:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9762:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9762:27:8"
																			},
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9791:4:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9759:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9759:37:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9746:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9746:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9746:51:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9888:47:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "9905:6:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "off",
																							"nodeType": "YulIdentifier",
																							"src": "9917:3:8"
																						},
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "9922:3:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9913:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9913:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9898:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9898:29:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9898:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "off",
																				"nodeType": "YulIdentifier",
																				"src": "9862:3:8"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9867:3:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9858:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9858:13:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "9879:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9873:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9873:13:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9855:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:32:8"
															},
															"nodeType": "YulIf",
															"src": "9852:2:8"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1590,
														"isOffset": false,
														"isSlot": false,
														"src": "9620:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1594,
														"isOffset": false,
														"isSlot": false,
														"src": "9791:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1596,
														"isOffset": false,
														"isSlot": false,
														"src": "9735:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1596,
														"isOffset": false,
														"isSlot": false,
														"src": "9867:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1596,
														"isOffset": false,
														"isSlot": false,
														"src": "9922:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "9783:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1592,
														"isOffset": false,
														"isSlot": false,
														"src": "9729:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1592,
														"isOffset": false,
														"isSlot": false,
														"src": "9862:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1592,
														"isOffset": false,
														"isSlot": false,
														"src": "9917:3:8",
														"valueSize": 1
													}
												],
												"id": 1629,
												"nodeType": "InlineAssembly",
												"src": "9540:401:8"
											},
											{
												"expression": {
													"id": 1630,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1590,
													"src": "9953:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1631,
												"nodeType": "Return",
												"src": "9946:10:8"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "8925:343:8",
										"text": " @dev Writes an integer to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer, for chaining."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeInt",
									"nameLocation": "9280:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "9308:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9294:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1588,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "9294:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "9294:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "9322:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9317:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9317:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9336:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9331:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9331:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "9351:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9346:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9288:70:8"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "9399:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1598,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "9399:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "9399:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9391:27:8"
									},
									"scope": 1658,
									"src": "9271:690:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "10350:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "10372:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1649,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "10377:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1141,
																"src": "10377:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10377:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "10393:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1653,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "10399:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1647,
														"name": "writeInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "10363:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint256,uint256) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10363:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1655,
												"nodeType": "Return",
												"src": "10356:47:8"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "9965:244:8",
										"text": " @dev Appends a byte to the end of the buffer. Resizes if doing so would\n exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendInt",
									"nameLocation": "10221:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "10250:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "10236:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1635,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "10236:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "10236:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "10259:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "10279:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "10274:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10274:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10230:56:8"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "10328:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "10328:6:8"
													},
													"referencedDeclaration": 1144,
													"src": "10328:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10320:27:8"
									},
									"scope": 1658,
									"src": "10212:196:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1659,
							"src": "434:9976:8",
							"usedErrors": []
						}
					],
					"src": "32:10379:8"
				},
				"id": 8
			},
			"@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/vendor/CBORPlugin.sol",
					"exportedSymbols": {
						"BufferPlugin": [
							1658
						],
						"CBORPlugin": [
							2083
						]
					},
					"id": 2084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1660,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:26:9"
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/vendor/BufferPlugin.sol",
							"file": "./BufferPlugin.sol",
							"id": 1662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2084,
							"sourceUnit": 1659,
							"src": "60:50:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1661,
										"name": "BufferPlugin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "69:12:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2083,
							"linearizedBaseContracts": [
								2083
							],
							"name": "CBORPlugin",
							"nameLocation": "120:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1666,
									"libraryName": {
										"id": 1663,
										"name": "BufferPlugin",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1658,
										"src": "141:12:9"
									},
									"nodeType": "UsingForDirective",
									"src": "135:43:9",
									"typeName": {
										"id": 1665,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1664,
											"name": "BufferPlugin.buffer",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1144,
											"src": "158:19:9"
										},
										"referencedDeclaration": 1144,
										"src": "158:19:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
											"typeString": "struct BufferPlugin.buffer"
										}
									}
								},
								{
									"constant": true,
									"id": 1669,
									"mutability": "constant",
									"name": "MAJOR_TYPE_INT",
									"nameLocation": "205:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "182:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1667,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "182:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1668,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "222:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1672,
									"mutability": "constant",
									"name": "MAJOR_TYPE_NEGATIVE_INT",
									"nameLocation": "250:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "227:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1670,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "227:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1671,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "276:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1675,
									"mutability": "constant",
									"name": "MAJOR_TYPE_BYTES",
									"nameLocation": "304:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "281:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1673,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "281:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1678,
									"mutability": "constant",
									"name": "MAJOR_TYPE_STRING",
									"nameLocation": "351:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "328:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1676,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "328:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1677,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "371:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1681,
									"mutability": "constant",
									"name": "MAJOR_TYPE_ARRAY",
									"nameLocation": "399:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "376:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1679,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "376:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "418:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1684,
									"mutability": "constant",
									"name": "MAJOR_TYPE_MAP",
									"nameLocation": "446:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "423:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1682,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "423:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1683,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "463:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1687,
									"mutability": "constant",
									"name": "MAJOR_TYPE_TAG",
									"nameLocation": "491:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "468:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1685,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "468:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "508:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1690,
									"mutability": "constant",
									"name": "MAJOR_TYPE_CONTENT_FREE",
									"nameLocation": "536:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "513:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1688,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "562:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1693,
									"mutability": "constant",
									"name": "TAG_TYPE_BIGNUM",
									"nameLocation": "591:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "568:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1691,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "568:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "609:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1696,
									"mutability": "constant",
									"name": "TAG_TYPE_NEGATIVE_BIGNUM",
									"nameLocation": "637:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 2083,
									"src": "614:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1694,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "614:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "664:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "786:551:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1706,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "795:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3233",
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "804:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_23_by_1",
															"typeString": "int_const 23"
														},
														"value": "23"
													},
													"src": "795:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1724,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "876:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30784646",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "885:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "0xFF"
														},
														"src": "876:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1749,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "987:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "307846464646",
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "996:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65535_by_1",
																	"typeString": "int_const 65535"
																},
																"value": "0xFFFF"
															},
															"src": "987:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "1100:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "30784646464646464646",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1109:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4294967295_by_1",
																		"typeString": "int_const 4294967295"
																	},
																	"value": "0xFFFFFFFF"
																},
																"src": "1100:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1799,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1703,
																		"src": "1217:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "307846464646464646464646464646464646",
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1226:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xFFFFFFFFFFFFFFFF"
																	},
																	"src": "1217:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1824,
																"nodeType": "IfStatement",
																"src": "1214:119:9",
																"trueBody": {
																	"id": 1823,
																	"nodeType": "Block",
																	"src": "1246:87:9",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1812,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											},
																											"id": 1809,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 1807,
																												"name": "major",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1701,
																												"src": "1277:5:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "<<",
																											"rightExpression": {
																												"hexValue": "35",
																												"id": 1808,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1286:1:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_5_by_1",
																													"typeString": "int_const 5"
																												},
																												"value": "5"
																											},
																											"src": "1277:10:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										}
																									],
																									"id": 1810,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "1276:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "|",
																								"rightExpression": {
																									"hexValue": "3237",
																									"id": 1811,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1291:2:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_27_by_1",
																										"typeString": "int_const 27"
																									},
																									"value": "27"
																								},
																								"src": "1276:17:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1270:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint8_$",
																								"typeString": "type(uint8)"
																							},
																							"typeName": {
																								"id": 1805,
																								"name": "uint8",
																								"nodeType": "ElementaryTypeName",
																								"src": "1270:5:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1813,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1270:24:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"expression": {
																						"id": 1802,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1699,
																						"src": "1254:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																							"typeString": "struct BufferPlugin.buffer memory"
																						}
																					},
																					"id": 1804,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "appendUint8",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1454,
																					"src": "1254:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																						"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
																					}
																				},
																				"id": 1814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1254:41:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			"id": 1815,
																			"nodeType": "ExpressionStatement",
																			"src": "1254:41:9"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 1819,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1703,
																						"src": "1317:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "38",
																						"id": 1820,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1324:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						}
																					],
																					"expression": {
																						"id": 1816,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1699,
																						"src": "1303:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																							"typeString": "struct BufferPlugin.buffer memory"
																						}
																					},
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "appendInt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1657,
																					"src": "1303:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																						"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint256) pure returns (struct BufferPlugin.buffer memory)"
																					}
																				},
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1303:23:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			"id": 1822,
																			"nodeType": "ExpressionStatement",
																			"src": "1303:23:9"
																		}
																	]
																}
															},
															"id": 1825,
															"nodeType": "IfStatement",
															"src": "1097:236:9",
															"trueBody": {
																"id": 1798,
																"nodeType": "Block",
																"src": "1121:87:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1787,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1784,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1782,
																											"name": "major",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1701,
																											"src": "1152:5:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"hexValue": "35",
																											"id": 1783,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1161:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_5_by_1",
																												"typeString": "int_const 5"
																											},
																											"value": "5"
																										},
																										"src": "1152:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"id": 1785,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1151:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "|",
																							"rightExpression": {
																								"hexValue": "3236",
																								"id": 1786,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1166:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_26_by_1",
																									"typeString": "int_const 26"
																								},
																								"value": "26"
																							},
																							"src": "1151:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1145:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1780,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "1145:5:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1145:24:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"expression": {
																					"id": 1777,
																					"name": "buf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "1129:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																						"typeString": "struct BufferPlugin.buffer memory"
																					}
																				},
																				"id": 1779,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "appendUint8",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1454,
																				"src": "1129:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																					"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
																				}
																			},
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1129:41:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			}
																		},
																		"id": 1790,
																		"nodeType": "ExpressionStatement",
																		"src": "1129:41:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1794,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1703,
																					"src": "1192:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "34",
																					"id": 1795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1199:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				],
																				"expression": {
																					"id": 1791,
																					"name": "buf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "1178:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																						"typeString": "struct BufferPlugin.buffer memory"
																					}
																				},
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "appendInt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1657,
																				"src": "1178:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																					"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint256) pure returns (struct BufferPlugin.buffer memory)"
																				}
																			},
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1178:23:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			}
																		},
																		"id": 1797,
																		"nodeType": "ExpressionStatement",
																		"src": "1178:23:9"
																	}
																]
															}
														},
														"id": 1826,
														"nodeType": "IfStatement",
														"src": "984:349:9",
														"trueBody": {
															"id": 1773,
															"nodeType": "Block",
															"src": "1004:87:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 1762,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									},
																									"id": 1759,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1757,
																										"name": "major",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1701,
																										"src": "1035:5:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<<",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 1758,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1044:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "1035:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"id": 1760,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "1034:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"hexValue": "3235",
																							"id": 1761,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1049:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_25_by_1",
																								"typeString": "int_const 25"
																							},
																							"value": "25"
																						},
																						"src": "1034:17:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 1756,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1028:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1755,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "1028:5:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1028:24:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"expression": {
																				"id": 1752,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1699,
																				"src": "1012:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "appendUint8",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1454,
																			"src": "1012:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																				"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1012:41:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	"id": 1765,
																	"nodeType": "ExpressionStatement",
																	"src": "1012:41:9"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1769,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1703,
																				"src": "1075:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1082:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"expression": {
																				"id": 1766,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1699,
																				"src": "1061:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "appendInt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1657,
																			"src": "1061:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																				"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint256) pure returns (struct BufferPlugin.buffer memory)"
																			}
																		},
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1061:23:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	"id": 1772,
																	"nodeType": "ExpressionStatement",
																	"src": "1061:23:9"
																}
															]
														}
													},
													"id": 1827,
													"nodeType": "IfStatement",
													"src": "873:460:9",
													"trueBody": {
														"id": 1748,
														"nodeType": "Block",
														"src": "891:87:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1732,
																									"name": "major",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1701,
																									"src": "922:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1733,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "931:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "922:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1735,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "921:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"hexValue": "3234",
																						"id": 1736,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "936:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_24_by_1",
																							"typeString": "int_const 24"
																						},
																						"value": "24"
																					},
																					"src": "921:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "915:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1730,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "915:5:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "915:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"id": 1727,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "899:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			}
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "appendUint8",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1454,
																		"src": "899:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																			"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "899:41:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1740,
																"nodeType": "ExpressionStatement",
																"src": "899:41:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1744,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "962:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31",
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"id": 1741,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "948:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "appendInt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1657,
																		"src": "948:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																			"typeString": "function (struct BufferPlugin.buffer memory,uint256,uint256) pure returns (struct BufferPlugin.buffer memory)"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "948:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																		"typeString": "struct BufferPlugin.buffer memory"
																	}
																},
																"id": 1747,
																"nodeType": "ExpressionStatement",
																"src": "948:23:9"
															}
														]
													}
												},
												"id": 1828,
												"nodeType": "IfStatement",
												"src": "792:541:9",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "808:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1716,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1714,
																								"name": "major",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1701,
																								"src": "839:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "35",
																								"id": 1715,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "848:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "839:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1717,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "838:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 1718,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1703,
																					"src": "853:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "838:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "832:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 1712,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "832:5:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "832:27:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"expression": {
																		"id": 1709,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "816:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "appendUint8",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1454,
																	"src": "816:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
																		"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "816:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																	"typeString": "struct BufferPlugin.buffer memory"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "816:44:9"
														}
													]
												}
											}
										]
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeType",
									"nameLocation": "679:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "722:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "695:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1697,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "695:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "695:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "major",
												"nameLocation": "737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "731:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1700,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "731:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "753:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "748:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:73:9"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:9"
									},
									"scope": 2083,
									"src": "670:667:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "1457:52:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1843,
																					"name": "major",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1835,
																					"src": "1486:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1844,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1495:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "1486:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1846,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1485:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"hexValue": "3331",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1500:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31_by_1",
																			"typeString": "int_const 31"
																		},
																		"value": "31"
																	},
																	"src": "1485:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1479:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1841,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1479:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1479:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"id": 1838,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "1463:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1454,
														"src": "1463:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "1463:41:9"
											}
										]
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeIndefiniteLengthType",
									"nameLocation": "1350:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1409:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1382:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1831,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1382:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "1382:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "major",
												"nameLocation": "1424:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1418:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1834,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1418:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:57:9"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:9"
									},
									"scope": 2083,
									"src": "1341:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "1613:49:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1862,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "1630:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 1863,
															"name": "MAJOR_TYPE_INT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "1635:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "1651:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1861,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "1619:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "1619:38:9"
											}
										]
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeUInt",
									"nameLocation": "1522:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1565:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1538:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1538:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "1538:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1579:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1574:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1574:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:56:9"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:0:9"
									},
									"scope": 2083,
									"src": "1513:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "1764:323:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "1773:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1781:20:9",
														"subExpression": {
															"hexValue": "30783130303030303030303030303030303030",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1782:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18446744073709551616_by_1",
																"typeString": "int_const 18446744073709551616"
															},
															"value": "0x10000000000000000"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_18446744073709551616_by_1",
															"typeString": "int_const -18446744073709551616"
														}
													},
													"src": "1773:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1886,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "1857:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "307846464646464646464646464646464646",
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1865:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18446744073709551615_by_1",
																"typeString": "int_const 18446744073709551615"
															},
															"value": "0xFFFFFFFFFFFFFFFF"
														},
														"src": "1857:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "1933:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1942:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1933:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1920,
															"nodeType": "Block",
															"src": "2010:73:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1909,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "2029:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			{
																				"id": 1910,
																				"name": "MAJOR_TYPE_NEGATIVE_INT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "2034:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1914,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "-",
																							"prefix": true,
																							"src": "2064:2:9",
																							"subExpression": {
																								"hexValue": "31",
																								"id": 1913,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2065:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_minus_1_by_1",
																								"typeString": "int_const -1"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1915,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1873,
																							"src": "2069:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "2064:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1912,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2059:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1911,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "2059:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2059:16:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1908,
																			"name": "encodeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "2018:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
																				"typeString": "function (struct BufferPlugin.buffer memory,uint8,uint256) pure"
																			}
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2018:58:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1919,
																	"nodeType": "ExpressionStatement",
																	"src": "2018:58:9"
																}
															]
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "1930:153:9",
														"trueBody": {
															"id": 1907,
															"nodeType": "Block",
															"src": "1945:59:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1899,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1871,
																				"src": "1964:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				}
																			},
																			{
																				"id": 1900,
																				"name": "MAJOR_TYPE_INT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1669,
																				"src": "1969:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 1903,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1873,
																						"src": "1990:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1902,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1985:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1901,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "1985:4:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1985:11:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																					"typeString": "struct BufferPlugin.buffer memory"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1898,
																			"name": "encodeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "1953:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
																				"typeString": "function (struct BufferPlugin.buffer memory,uint8,uint256) pure"
																			}
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1953:44:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1906,
																	"nodeType": "ExpressionStatement",
																	"src": "1953:44:9"
																}
															]
														}
													},
													"id": 1922,
													"nodeType": "IfStatement",
													"src": "1854:229:9",
													"trueBody": {
														"id": 1894,
														"nodeType": "Block",
														"src": "1885:39:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1890,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "1906:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			}
																		},
																		{
																			"id": 1891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "1911:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																				"typeString": "struct BufferPlugin.buffer memory"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1889,
																		"name": "encodeBigNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1981,
																		"src": "1893:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_int256_$returns$__$",
																			"typeString": "function (struct BufferPlugin.buffer memory,int256) pure"
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1893:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1893,
																"nodeType": "ExpressionStatement",
																"src": "1893:24:9"
															}
														]
													}
												},
												"id": 1923,
												"nodeType": "IfStatement",
												"src": "1770:313:9",
												"trueBody": {
													"id": 1885,
													"nodeType": "Block",
													"src": "1803:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1881,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "1830:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		}
																	},
																	{
																		"id": 1882,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "1835:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																			"typeString": "struct BufferPlugin.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1880,
																	"name": "encodeSignedBigNum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "1811:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_int256_$returns$__$",
																		"typeString": "function (struct BufferPlugin.buffer memory,int256) pure"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1811:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "1811:30:9"
														}
													]
												}
											}
										]
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeInt",
									"nameLocation": "1675:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1717:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1690:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "1690:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "1690:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1730:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1726:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1872,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1726:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:55:9"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:9"
									},
									"scope": 2083,
									"src": "1666:421:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "2200:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1934,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "2217:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 1935,
															"name": "MAJOR_TYPE_BYTES",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "2222:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1936,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "2240:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2240:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "2206:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "2206:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "2270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1940,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "2259:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "2259:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "2259:17:9"
											}
										]
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeBytes",
									"nameLocation": "2100:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2144:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2117:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1927,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1926,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2117:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "2117:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2166:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "2153:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2153:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:64:9"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:9"
									},
									"scope": 2083,
									"src": "2091:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "2386:121:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1960,
																					"name": "MAJOR_TYPE_TAG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "2415:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1961,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2433:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2415:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1963,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2414:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"id": 1964,
																		"name": "TAG_TYPE_BIGNUM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "2438:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2414:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2408:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2408:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2408:46:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"id": 1955,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2392:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1454,
														"src": "2392:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2392:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "2392:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1970,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2473:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1975,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "2494:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2489:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1973,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2489:4:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2489:11:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1971,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2478:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2478:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2478:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1969,
														"name": "encodeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "2461:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "2461:41:9"
											}
										]
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeBigNum",
									"nameLocation": "2294:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2339:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2312:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1948,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2312:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "2312:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2348:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1951,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2348:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2306:55:9"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:9"
									},
									"scope": 2083,
									"src": "2285:222:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "2618:135:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1994,
																					"name": "MAJOR_TYPE_TAG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "2647:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2665:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2647:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 1997,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2646:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"id": 1998,
																		"name": "TAG_TYPE_NEGATIVE_BIGNUM",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "2670:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2646:48:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2640:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1992,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2640:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2640:55:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"id": 1989,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "2624:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "appendUint8",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1454,
														"src": "2624:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "2624:72:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "2714:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "2735:2:9",
																				"subExpression": {
																					"hexValue": "31",
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2736:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2011,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1986,
																				"src": "2740:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2735:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2730:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2007,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2730:4:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2730:16:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2719:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2719:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2719:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2003,
														"name": "encodeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "2702:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "2702:46:9"
											}
										]
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeSignedBigNum",
									"nameLocation": "2520:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2571:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "2544:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 1983,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1982,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2544:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "2544:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "2584:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "2580:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1985,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "2580:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:55:9"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2618:0:9"
									},
									"scope": 2083,
									"src": "2511:242:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "2868:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "2885:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 2028,
															"name": "MAJOR_TYPE_STRING",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "2890:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2031,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "2915:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2909:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2029,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2909:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2909:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2909:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "encodeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "2874:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8,uint256) pure"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "2874:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "2952:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2946:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2039,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2946:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2946:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2036,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "2935:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "2935:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1144_memory_ptr_$bound_to$_t_struct$_buffer_$1144_memory_ptr_$",
															"typeString": "function (struct BufferPlugin.buffer memory,bytes memory) pure returns (struct BufferPlugin.buffer memory)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2935:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
														"typeString": "struct BufferPlugin.buffer memory"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "2935:24:9"
											}
										]
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeString",
									"nameLocation": "2766:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2811:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2784:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 2020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2019,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2784:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "2784:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2834:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2820:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2820:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:65:9"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2868:0:9"
									},
									"scope": 2083,
									"src": "2757:207:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "3052:60:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2053,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "3085:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 2054,
															"name": "MAJOR_TYPE_ARRAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "3090:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2052,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "3058:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3058:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "3058:49:9"
											}
										]
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startArray",
									"nameLocation": "2977:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "3020:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2993:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "2993:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "2993:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:40:9"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3052:0:9"
									},
									"scope": 2083,
									"src": "2968:144:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "3198:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "3231:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 2066,
															"name": "MAJOR_TYPE_MAP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "3236:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2064,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "3204:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3204:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2068,
												"nodeType": "ExpressionStatement",
												"src": "3204:47:9"
											}
										]
									},
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startMap",
									"nameLocation": "3125:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "3166:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3139:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 2060,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2059,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "3139:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "3139:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3133:40:9"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:0:9"
									},
									"scope": 2083,
									"src": "3116:140:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "3345:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2077,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "3378:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															}
														},
														{
															"id": 2078,
															"name": "MAJOR_TYPE_CONTENT_FREE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "3383:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
																"typeString": "struct BufferPlugin.buffer memory"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2076,
														"name": "encodeIndefiniteLengthType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "3351:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$1144_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (struct BufferPlugin.buffer memory,uint8) pure"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "3351:56:9"
											}
										]
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endSequence",
									"nameLocation": "3269:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "3313:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "3286:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$1144_memory_ptr",
													"typeString": "struct BufferPlugin.buffer"
												},
												"typeName": {
													"id": 2072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2071,
														"name": "BufferPlugin.buffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1144,
														"src": "3286:19:9"
													},
													"referencedDeclaration": 1144,
													"src": "3286:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$1144_storage_ptr",
														"typeString": "struct BufferPlugin.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:40:9"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3345:0:9"
									},
									"scope": 2083,
									"src": "3260:152:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2084,
							"src": "112:3302:9",
							"usedErrors": []
						}
					],
					"src": "32:3383:9"
				},
				"id": 9
			},
			"@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol": {
				"ast": {
					"absolutePath": "@goplugin/contracts/src/v0.8/vendor/ENSResolver.sol",
					"exportedSymbols": {
						"ENSResolver": [
							2093
						]
					},
					"id": 2094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2093,
							"linearizedBaseContracts": [
								2093
							],
							"name": "ENSResolver",
							"nameLocation": "75:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3b3b57de",
									"id": 2092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addr",
									"nameLocation": "100:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "node",
												"nameLocation": "118:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "110:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:22:10"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "179:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:21:10"
									},
									"scope": 2093,
									"src": "91:102:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2094,
							"src": "57:138:10",
							"usedErrors": []
						}
					],
					"src": "32:164:10"
				},
				"id": 10
			},
			"CustomTokens/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "CustomTokens/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2167
						]
					},
					"id": 2168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2095,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2096,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:11",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2167,
							"linearizedBaseContracts": [
								2167
							],
							"name": "Counters",
							"nameLocation": "432:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2099,
									"members": [
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "786:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2097,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:11",
									"nodeType": "StructDefinition",
									"scope": 2167,
									"src": "447:374:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "901:38:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2107,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2098,
													"src": "918:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2109,
												"nodeType": "Return",
												"src": "911:21:11"
											}
										]
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "844:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2100,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2099,
														"src": "844:7:11"
													},
													"referencedDeclaration": 2099,
													"src": "844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:11"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:11"
									},
									"scope": 2167,
									"src": "827:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "998:70:11",
										"statements": [
											{
												"id": 2123,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:11",
												"statements": [
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2117,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "1032:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2098,
																"src": "1032:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:11"
													}
												]
											}
										]
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "964:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2112,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2099,
														"src": "964:7:11"
													},
													"referencedDeclaration": 2099,
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:11"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:11"
									},
									"scope": 2167,
									"src": "945:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "1127:176:11",
										"statements": [
											{
												"assignments": [
													2132
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "1137:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2135,
												"initialValue": {
													"expression": {
														"id": 2133,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "1153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2098,
													"src": "1153:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2137,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "1185:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:11"
											},
											{
												"id": 2151,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:11",
												"statements": [
													{
														"expression": {
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2143,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "1260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2098,
																"src": "1260:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "1277:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2150,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:11"
													}
												]
											}
										]
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "1093:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2126,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2099,
														"src": "1093:7:11"
													},
													"referencedDeclaration": 2099,
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:11"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:11"
									},
									"scope": 2167,
									"src": "1074:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "1358:35:11",
										"statements": [
											{
												"expression": {
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2159,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "1368:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2098,
														"src": "1368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:11"
											}
										]
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "1324:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2154,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2099,
														"src": "1324:7:11"
													},
													"referencedDeclaration": 2099,
													"src": "1324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:11"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:11"
									},
									"scope": 2167,
									"src": "1309:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2168,
							"src": "424:971:11",
							"usedErrors": []
						}
					],
					"src": "87:1309:11"
				},
				"id": 11
			},
			"contracts/FlightDelayInsurance.sol": {
				"ast": {
					"absolutePath": "contracts/FlightDelayInsurance.sol",
					"exportedSymbols": {
						"BufferPlugin": [
							1658
						],
						"CBORPlugin": [
							2083
						],
						"Counters": [
							2167
						],
						"ENSInterface": [
							879
						],
						"ENSResolver_Plugin": [
							2093
						],
						"FlightDelayInsurance": [
							2558
						],
						"IFlightStatus": [
							2601
						],
						"OperatorInterface": [
							961
						],
						"OracleInterface": [
							1000
						],
						"PliTokenInterface": [
							1095
						],
						"Plugin": [
							268
						],
						"PluginClient": [
							799
						],
						"PluginRequestInterface": [
							1128
						],
						"PointerInterface": [
							1136
						]
					},
					"id": 2559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:12"
						},
						{
							"absolutePath": "CustomTokens/contracts/utils/Counters.sol",
							"file": "../CustomTokens/contracts/utils/Counters.sol",
							"id": 2170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 2168,
							"src": "56:54:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@goplugin/contracts/src/v0.8/PluginClient.sol",
							"file": "@goplugin/contracts/src/v0.8/PluginClient.sol",
							"id": 2171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 800,
							"src": "111:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IFlightStatus.sol",
							"file": "./interface/IFlightStatus.sol",
							"id": 2172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 2602,
							"src": "167:39:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2173,
										"name": "PluginClient",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "241:12:12"
									},
									"id": 2174,
									"nodeType": "InheritanceSpecifier",
									"src": "241:12:12"
								},
								{
									"baseName": {
										"id": 2175,
										"name": "IFlightStatus",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2601,
										"src": "255:13:12"
									},
									"id": 2176,
									"nodeType": "InheritanceSpecifier",
									"src": "255:13:12"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2558,
							"linearizedBaseContracts": [
								2558,
								2601,
								799
							],
							"name": "FlightDelayInsurance",
							"nameLocation": "217:20:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2180,
									"libraryName": {
										"id": 2177,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2167,
										"src": "281:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "275:36:12",
									"typeName": {
										"id": 2179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2178,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2099,
											"src": "294:16:12"
										},
										"referencedDeclaration": 2099,
										"src": "294:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2183,
									"mutability": "mutable",
									"name": "_flightIds",
									"nameLocation": "341:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "316:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2099_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2182,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2181,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2099,
											"src": "316:16:12"
										},
										"referencedDeclaration": 2099,
										"src": "316:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2186,
									"mutability": "mutable",
									"name": "_insuranceIds",
									"nameLocation": "382:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "357:38:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2099_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2185,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2184,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2099,
											"src": "357:16:12"
										},
										"referencedDeclaration": 2099,
										"src": "357:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2099_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"id": 2190,
									"libraryName": {
										"id": 2187,
										"name": "Plugin",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 268,
										"src": "408:6:12"
									},
									"nodeType": "UsingForDirective",
									"src": "402:32:12",
									"typeName": {
										"id": 2189,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2188,
											"name": "Plugin.Request",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 25,
											"src": "419:14:12"
										},
										"referencedDeclaration": 25,
										"src": "419:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
											"typeString": "struct Plugin.Request"
										}
									}
								},
								{
									"constant": true,
									"id": 2197,
									"mutability": "constant",
									"name": "ORACLE_PAYMENT",
									"nameLocation": "465:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "440:55:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "440:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 2196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3031",
											"id": 2192,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "482:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 2195,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 2193,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "489:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 2194,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "493:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "489:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "482:13:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2199,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "532:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "517:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e8cffa2",
									"id": 2206,
									"mutability": "mutable",
									"name": "insurances",
									"nameLocation": "606:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "543:73:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightInsurance))"
									},
									"typeName": {
										"id": 2205,
										"keyType": {
											"id": 2200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "551:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "543:55:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightInsurance))"
										},
										"valueType": {
											"id": 2204,
											"keyType": {
												"id": 2201,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "570:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "562:35:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$",
												"typeString": "mapping(address => struct IFlightStatus.FlightInsurance)"
											},
											"valueType": {
												"id": 2203,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2202,
													"name": "FlightInsurance",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2600,
													"src": "581:15:12"
												},
												"referencedDeclaration": 2600,
												"src": "581:15:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage_ptr",
													"typeString": "struct IFlightStatus.FlightInsurance"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5996e024",
									"id": 2213,
									"mutability": "mutable",
									"name": "flights",
									"nameLocation": "682:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "622:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightMaster_$2580_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightMaster))"
									},
									"typeName": {
										"id": 2212,
										"keyType": {
											"id": 2207,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "630:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "622:52:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightMaster_$2580_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightMaster))"
										},
										"valueType": {
											"id": 2211,
											"keyType": {
												"id": 2208,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "649:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "641:32:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlightMaster_$2580_storage_$",
												"typeString": "mapping(address => struct IFlightStatus.FlightMaster)"
											},
											"valueType": {
												"id": 2210,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2209,
													"name": "FlightMaster",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2580,
													"src": "660:12:12"
												},
												"referencedDeclaration": 2580,
												"src": "660:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FlightMaster_$2580_storage_ptr",
													"typeString": "struct IFlightStatus.FlightMaster"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eff0f592",
									"id": 2218,
									"mutability": "mutable",
									"name": "claims",
									"nameLocation": "738:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "695:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightInsurance_$2600_storage_$",
										"typeString": "mapping(bytes32 => struct IFlightStatus.FlightInsurance)"
									},
									"typeName": {
										"id": 2217,
										"keyType": {
											"id": 2214,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "703:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "695:35:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightInsurance_$2600_storage_$",
											"typeString": "mapping(bytes32 => struct IFlightStatus.FlightInsurance)"
										},
										"valueType": {
											"id": 2216,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2215,
												"name": "FlightInsurance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2600,
												"src": "714:15:12"
											},
											"referencedDeclaration": 2600,
											"src": "714:15:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage_ptr",
												"typeString": "struct IFlightStatus.FlightInsurance"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29e999f4",
									"id": 2224,
									"mutability": "mutable",
									"name": "claimRequest",
									"nameLocation": "805:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "750:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bytes32_$_$",
										"typeString": "mapping(uint256 => mapping(address => bytes32))"
									},
									"typeName": {
										"id": 2223,
										"keyType": {
											"id": 2219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "758:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "750:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bytes32_$_$",
											"typeString": "mapping(uint256 => mapping(address => bytes32))"
										},
										"valueType": {
											"id": 2222,
											"keyType": {
												"id": 2220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "777:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "769:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
												"typeString": "mapping(address => bytes32)"
											},
											"valueType": {
												"id": 2221,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "788:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "850:132:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2230,
															"name": "_pli",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "875:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2229,
														"name": "setPluginToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "860:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "860:20:12"
											},
											{
												"expression": {
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2233,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "890:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2234,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "898:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "898:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "890:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "890:18:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2238,
															"name": "_flightIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "918:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2125,
														"src": "918:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2099_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "918:22:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2243,
															"name": "_insuranceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "950:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2125,
														"src": "950:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2099_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2247,
												"nodeType": "ExpressionStatement",
												"src": "950:25:12"
											}
										]
									},
									"id": 2249,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "_pli",
												"nameLocation": "844:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "836:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:14:12"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:12"
									},
									"scope": 2558,
									"src": "824:158:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "1010:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2252,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "1028:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2253,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1037:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1037:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1028:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1020:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2257,
												"nodeType": "ExpressionStatement",
												"src": "1020:28:12"
											},
											{
												"id": 2258,
												"nodeType": "PlaceholderStatement",
												"src": "1058:1:12"
											}
										]
									},
									"id": 2260,
									"name": "only_owner",
									"nameLocation": "997:10:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:12"
									},
									"src": "988:78:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 2272,
									"name": "FlightEvents",
									"nameLocation": "1078:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"indexed": false,
												"mutability": "mutable",
												"name": "flightId",
												"nameLocation": "1108:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "1100:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"indexed": false,
												"mutability": "mutable",
												"name": "eventType",
												"nameLocation": "1133:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "1126:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1126:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"indexed": false,
												"mutability": "mutable",
												"name": "flight",
												"nameLocation": "1160:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "1152:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"indexed": false,
												"mutability": "mutable",
												"name": "performedBy",
												"nameLocation": "1184:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "1176:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"indexed": false,
												"mutability": "mutable",
												"name": "performedOn",
												"nameLocation": "1213:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "1205:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:140:12"
									},
									"src": "1072:159:12"
								},
								{
									"anonymous": false,
									"id": 2284,
									"name": "InsuranceEvents",
									"nameLocation": "1243:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"indexed": false,
												"mutability": "mutable",
												"name": "insuranceid",
												"nameLocation": "1276:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "1268:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"indexed": false,
												"mutability": "mutable",
												"name": "eventType",
												"nameLocation": "1304:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "1297:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"indexed": false,
												"mutability": "mutable",
												"name": "passenger",
												"nameLocation": "1331:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "1323:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"indexed": false,
												"mutability": "mutable",
												"name": "performedBy",
												"nameLocation": "1358:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "1350:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"indexed": false,
												"mutability": "mutable",
												"name": "performedOn",
												"nameLocation": "1387:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "1379:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:146:12"
									},
									"src": "1237:168:12"
								},
								{
									"anonymous": false,
									"id": 2292,
									"name": "requestCreated",
									"nameLocation": "1455:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "1495:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "1479:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"indexed": true,
												"mutability": "mutable",
												"name": "jobId",
												"nameLocation": "1530:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "1514:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1561:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "1545:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:107:12"
									},
									"src": "1449:128:12"
								},
								{
									"anonymous": false,
									"id": 2298,
									"name": "RequestPermissionFulfilled",
									"nameLocation": "1639:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1691:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1675:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"indexed": true,
												"mutability": "mutable",
												"name": "otp",
												"nameLocation": "1726:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1710:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:70:12"
									},
									"src": "1633:103:12"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "1935:528:12",
										"statements": [
											{
												"assignments": [
													2310
												],
												"declarations": [
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "_flightId",
														"nameLocation": "1953:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2350,
														"src": "1945:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1945:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2314,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2311,
															"name": "_flightIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "1965:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2111,
														"src": "1965:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2099_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1965:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:40:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2315,
															"name": "_flightIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "1995:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2125,
														"src": "1995:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2099_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1995:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "1995:22:12"
											},
											{
												"expression": {
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2320,
																"name": "flights",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "2028:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightMaster_$2580_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightMaster storage ref))"
																}
															},
															"id": 2323,
															"indexExpression": {
																"id": 2321,
																"name": "_flightId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "2036:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2028:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlightMaster_$2580_storage_$",
																"typeString": "mapping(address => struct IFlightStatus.FlightMaster storage ref)"
															}
														},
														"id": 2324,
														"indexExpression": {
															"id": 2322,
															"name": "_flightAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "2047:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2028:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightMaster_$2580_storage",
															"typeString": "struct IFlightStatus.FlightMaster storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2326,
																"name": "_flightId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "2091:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2327,
																"name": "_carrierFlightNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "2114:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2328,
																"name": "_serviceProviderName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "2148:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2329,
																"name": "_flightAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "2182:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 2330,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2210:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2210:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2332,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2239:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2239:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2325,
															"name": "FlightMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "2065:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FlightMaster_$2580_storage_ptr_$",
																"typeString": "type(struct IFlightStatus.FlightMaster storage pointer)"
															}
														},
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2065:194:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightMaster_$2580_memory_ptr",
															"typeString": "struct IFlightStatus.FlightMaster memory"
														}
													},
													"src": "2028:231:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlightMaster_$2580_storage",
														"typeString": "struct IFlightStatus.FlightMaster storage ref"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "2028:231:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2338,
															"name": "_flightId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "2300:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "466c696768742052656769737465726564",
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2323:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6176d981f4d8d8304a5f9c48b62af25782ed16b67b022cdb98d39f2a07a486b1",
																"typeString": "literal_string \"Flight Registered\""
															},
															"value": "Flight Registered"
														},
														{
															"expression": {
																"id": 2340,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2356:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2356:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2380:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2380:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2344,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2404:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2404:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_6176d981f4d8d8304a5f9c48b62af25782ed16b67b022cdb98d39f2a07a486b1",
																"typeString": "literal_string \"Flight Registered\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2337,
														"name": "FlightEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "2274:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,address,address,uint256)"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:155:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2347,
												"nodeType": "EmitStatement",
												"src": "2269:160:12"
											},
											{
												"expression": {
													"id": 2348,
													"name": "_flightId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2310,
													"src": "2447:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2349,
												"nodeType": "Return",
												"src": "2440:16:12"
											}
										]
									},
									"functionSelector": "8d3c9445",
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerFlights",
									"nameLocation": "1774:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "_flightAddress",
												"nameLocation": "1807:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1799:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "_carrierFlightNumber",
												"nameLocation": "1839:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1831:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "_serviceProviderName",
												"nameLocation": "1883:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1869:34:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1869:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:120:12"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1926:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:9:12"
									},
									"scope": 2558,
									"src": "1765:698:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "2717:628:12",
										"statements": [
											{
												"assignments": [
													2367
												],
												"declarations": [
													{
														"constant": false,
														"id": 2367,
														"mutability": "mutable",
														"name": "_insuranceId",
														"nameLocation": "2735:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2411,
														"src": "2727:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2727:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2368,
															"name": "_insuranceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "2750:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2111,
														"src": "2750:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2099_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2727:46:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2372,
															"name": "_insuranceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "2783:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2099_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2125,
														"src": "2783:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2099_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2099_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2376,
												"nodeType": "ExpressionStatement",
												"src": "2783:25:12"
											},
											{
												"expression": {
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2377,
																"name": "insurances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "2819:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightInsurance storage ref))"
																}
															},
															"id": 2380,
															"indexExpression": {
																"id": 2378,
																"name": "_insuranceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "2830:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2819:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$",
																"typeString": "mapping(address => struct IFlightStatus.FlightInsurance storage ref)"
															}
														},
														"id": 2381,
														"indexExpression": {
															"id": 2379,
															"name": "_passengerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "2844:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2819:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
															"typeString": "struct IFlightStatus.FlightInsurance storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2383,
																"name": "_insuranceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "2894:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2384,
																"name": "_passengerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "2920:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2385,
																"name": "_carrierFlightNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "2951:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2386,
																"name": "_departureOn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "2985:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2387,
																"name": "_arrivalOn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "3011:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2388,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3035:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3035:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3077:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 2390,
																	"name": "FlightStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "3064:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FlightStatus_$2567_$",
																		"typeString": "type(enum IFlightStatus.FlightStatus)"
																	}
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3064:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlightStatus_$2567",
																	"typeString": "enum IFlightStatus.FlightStatus"
																}
															},
															{
																"id": 2393,
																"name": "_travelday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2361,
																"src": "3093:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3117:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_FlightStatus_$2567",
																	"typeString": "enum IFlightStatus.FlightStatus"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2382,
															"name": "FlightInsurance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2600,
															"src": "2865:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FlightInsurance_$2600_storage_ptr_$",
																"typeString": "type(struct IFlightStatus.FlightInsurance storage pointer)"
															}
														},
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2865:267:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
															"typeString": "struct IFlightStatus.FlightInsurance memory"
														}
													},
													"src": "2819:313:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
														"typeString": "struct IFlightStatus.FlightInsurance storage ref"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "2819:313:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2399,
															"name": "_insuranceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "3177:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "496e737572616e636520426f6f6b6564",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3203:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9636bc944eebbd72099b541dce06e30d43d67a802d91be641798299460ff319",
																"typeString": "literal_string \"Insurance Booked\""
															},
															"value": "Insurance Booked"
														},
														{
															"expression": {
																"id": 2401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3235:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3235:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3259:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3259:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2405,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3283:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3283:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_d9636bc944eebbd72099b541dce06e30d43d67a802d91be641798299460ff319",
																"typeString": "literal_string \"Insurance Booked\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2398,
														"name": "InsuranceEvents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "3148:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,address,address,uint256)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3148:160:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2408,
												"nodeType": "EmitStatement",
												"src": "3143:165:12"
											},
											{
												"expression": {
													"id": 2409,
													"name": "_insuranceId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2367,
													"src": "3326:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2365,
												"id": 2410,
												"nodeType": "Return",
												"src": "3319:19:12"
											}
										]
									},
									"functionSelector": "2f2e01f2",
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bookInsurance",
									"nameLocation": "2513:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "_passengerAddress",
												"nameLocation": "2544:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2536:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "_carrierFlightNumber",
												"nameLocation": "2579:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2571:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "_departureOn",
												"nameLocation": "2617:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2609:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "_arrivalOn",
												"nameLocation": "2647:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2639:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "_travelday",
												"nameLocation": "2675:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2667:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:165:12"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2708:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:9:12"
									},
									"scope": 2558,
									"src": "2504:841:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "3479:742:12",
										"statements": [
											{
												"assignments": [
													2423
												],
												"declarations": [
													{
														"constant": false,
														"id": 2423,
														"mutability": "mutable",
														"name": "fin",
														"nameLocation": "3512:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "3489:26:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
															"typeString": "struct IFlightStatus.FlightInsurance"
														},
														"typeName": {
															"id": 2422,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2421,
																"name": "FlightInsurance",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2600,
																"src": "3489:15:12"
															},
															"referencedDeclaration": 2600,
															"src": "3489:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage_ptr",
																"typeString": "struct IFlightStatus.FlightInsurance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2424,
															"name": "insurances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "3518:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct IFlightStatus.FlightInsurance storage ref))"
															}
														},
														"id": 2426,
														"indexExpression": {
															"id": 2425,
															"name": "_insuranceid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "3529:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3518:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlightInsurance_$2600_storage_$",
															"typeString": "mapping(address => struct IFlightStatus.FlightInsurance storage ref)"
														}
													},
													"id": 2429,
													"indexExpression": {
														"expression": {
															"id": 2427,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3543:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3543:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3518:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
														"typeString": "struct IFlightStatus.FlightInsurance storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3489:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2432,
																	"name": "fin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "3585:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
																		"typeString": "struct IFlightStatus.FlightInsurance memory"
																	}
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "passenger",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2584,
																"src": "3585:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3610:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3602:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2434,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3602:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3602:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3585:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6c69637920486f6c646572204164647265737320697320696e76616c6964",
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3626:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28c571c545ee84f31fcf0d566c5956617798f51eb6a1f1030db3d6889f5ad596",
																"typeString": "literal_string \"Policy Holder Address is invalid\""
															},
															"value": "Policy Holder Address is invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28c571c545ee84f31fcf0d566c5956617798f51eb6a1f1030db3d6889f5ad596",
																"typeString": "literal_string \"Policy Holder Address is invalid\""
															}
														],
														"id": 2431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3564:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "3564:106:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2443,
																	"name": "fin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "3688:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
																		"typeString": "struct IFlightStatus.FlightInsurance memory"
																	}
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "processed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2599,
																"src": "3688:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3705:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3688:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3712:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 2442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3680:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2449,
												"nodeType": "ExpressionStatement",
												"src": "3680:50:12"
											},
											{
												"assignments": [
													2454
												],
												"declarations": [
													{
														"constant": false,
														"id": 2454,
														"mutability": "mutable",
														"name": "req",
														"nameLocation": "3763:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "3741:25:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
															"typeString": "struct Plugin.Request"
														},
														"typeName": {
															"id": 2453,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2452,
																"name": "Plugin.Request",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 25,
																"src": "3741:14:12"
															},
															"referencedDeclaration": 25,
															"src": "3741:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_storage_ptr",
																"typeString": "struct Plugin.Request"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2467,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2457,
																	"name": "_jobid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "3817:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2456,
																"name": "stringToBytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "3801:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3801:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2461,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3846:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlightDelayInsurance_$2558",
																		"typeString": "contract FlightDelayInsurance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlightDelayInsurance_$2558",
																		"typeString": "contract FlightDelayInsurance"
																	}
																],
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3838:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3838:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3838:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 2463,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3865:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlightDelayInsurance_$2558",
																		"typeString": "contract FlightDelayInsurance"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "fulfillClaimInquiry",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2533,
																"src": "3865:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_FlightStatus_$2567_$returns$__$",
																	"typeString": "function (bytes32,enum IFlightStatus.FlightStatus) external"
																}
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3865:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 2455,
														"name": "buildPluginRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3769:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$25_memory_ptr_$",
															"typeString": "function (bytes32,address,bytes4) pure returns (struct Plugin.Request memory)"
														}
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:139:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
														"typeString": "struct Plugin.Request memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3741:167:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "756e74696c",
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3930:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e54c017fd432ac4cfe6da52d15064d0418b1401d37d55631dd535f192640dbb",
																"typeString": "literal_string \"until\""
															},
															"value": "until"
														},
														{
															"expression": {
																"id": 2472,
																"name": "fin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "3939:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
																	"typeString": "struct IFlightStatus.FlightInsurance memory"
																}
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "arrivalOn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2590,
															"src": "3939:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_5e54c017fd432ac4cfe6da52d15064d0418b1401d37d55631dd535f192640dbb",
																"typeString": "literal_string \"until\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2468,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3918:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														"id": 2470,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3918:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$25_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Request_$25_memory_ptr_$",
															"typeString": "function (struct Plugin.Request memory,string memory,uint256) pure"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "3918:35:12"
											},
											{
												"assignments": [
													2477
												],
												"declarations": [
													{
														"constant": false,
														"id": 2477,
														"mutability": "mutable",
														"name": "reqId",
														"nameLocation": "3971:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "3963:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2476,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3963:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2483,
												"initialValue": {
													"arguments": [
														{
															"id": 2479,
															"name": "_oracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "4012:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2480,
															"name": "req",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "4040:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															}
														},
														{
															"id": 2481,
															"name": "ORACLE_PAYMENT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "4057:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Request_$25_memory_ptr",
																"typeString": "struct Plugin.Request memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2478,
														"name": "sendPluginRequestTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "3979:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$25_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,struct Plugin.Request memory,uint256) returns (bytes32)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3979:102:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:118:12"
											},
											{
												"expression": {
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2484,
															"name": "claims",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "4091:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightInsurance_$2600_storage_$",
																"typeString": "mapping(bytes32 => struct IFlightStatus.FlightInsurance storage ref)"
															}
														},
														"id": 2486,
														"indexExpression": {
															"id": 2485,
															"name": "reqId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2477,
															"src": "4098:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4091:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
															"typeString": "struct IFlightStatus.FlightInsurance storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2487,
														"name": "fin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "4107:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
															"typeString": "struct IFlightStatus.FlightInsurance memory"
														}
													},
													"src": "4091:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
														"typeString": "struct IFlightStatus.FlightInsurance storage ref"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "4091:19:12"
											},
											{
												"expression": {
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2490,
																"name": "claimRequest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "4120:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bytes32_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bytes32))"
																}
															},
															"id": 2494,
															"indexExpression": {
																"id": 2491,
																"name": "_insuranceid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "4133:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4120:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																"typeString": "mapping(address => bytes32)"
															}
														},
														"id": 2495,
														"indexExpression": {
															"expression": {
																"id": 2492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4147:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4147:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4120:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2496,
														"name": "reqId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "4161:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4120:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2498,
												"nodeType": "ExpressionStatement",
												"src": "4120:46:12"
											}
										]
									},
									"functionSelector": "c4e49cd5",
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submitMyClaim",
									"nameLocation": "3360:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "_insuranceid",
												"nameLocation": "3391:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "3383:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "_oracleAddress",
												"nameLocation": "3421:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "3413:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3413:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_jobid",
												"nameLocation": "3459:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "3445:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3445:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:98:12"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:12"
									},
									"scope": 2558,
									"src": "3351:870:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "4367:150:12",
										"statements": [
											{
												"assignments": [
													2513
												],
												"declarations": [
													{
														"constant": false,
														"id": 2513,
														"mutability": "mutable",
														"name": "fin",
														"nameLocation": "4400:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "4377:26:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
															"typeString": "struct IFlightStatus.FlightInsurance"
														},
														"typeName": {
															"id": 2512,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2511,
																"name": "FlightInsurance",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2600,
																"src": "4377:15:12"
															},
															"referencedDeclaration": 2600,
															"src": "4377:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage_ptr",
																"typeString": "struct IFlightStatus.FlightInsurance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2517,
												"initialValue": {
													"baseExpression": {
														"id": 2514,
														"name": "claims",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "4406:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FlightInsurance_$2600_storage_$",
															"typeString": "mapping(bytes32 => struct IFlightStatus.FlightInsurance storage ref)"
														}
													},
													"id": 2516,
													"indexExpression": {
														"id": 2515,
														"name": "_requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "4413:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4406:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FlightInsurance_$2600_storage",
														"typeString": "struct IFlightStatus.FlightInsurance storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4377:47:12"
											},
											{
												"expression": {
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2518,
															"name": "fin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "4434:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
																"typeString": "struct IFlightStatus.FlightInsurance memory"
															}
														},
														"id": 2520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "processed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2599,
														"src": "4434:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4450:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4434:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "4434:20:12"
											},
											{
												"expression": {
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2524,
															"name": "fin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "4464:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FlightInsurance_$2600_memory_ptr",
																"typeString": "struct IFlightStatus.FlightInsurance memory"
															}
														},
														"id": 2526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "flightStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2595,
														"src": "4464:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlightStatus_$2567",
															"typeString": "enum IFlightStatus.FlightStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2528,
																"name": "_flightStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "4496:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FlightStatus_$2567",
																	"typeString": "enum IFlightStatus.FlightStatus"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_FlightStatus_$2567",
																	"typeString": "enum IFlightStatus.FlightStatus"
																}
															],
															"id": 2527,
															"name": "FlightStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "4483:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_FlightStatus_$2567_$",
																"typeString": "type(enum IFlightStatus.FlightStatus)"
															}
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4483:27:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_FlightStatus_$2567",
															"typeString": "enum IFlightStatus.FlightStatus"
														}
													},
													"src": "4464:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlightStatus_$2567",
														"typeString": "enum IFlightStatus.FlightStatus"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "4464:46:12"
											}
										]
									},
									"functionSelector": "0ebc8da6",
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2508,
													"name": "_requestId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2502,
													"src": "4351:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2507,
												"name": "recordPluginFulfillment",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "4327:23:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4327:35:12"
										}
									],
									"name": "fulfillClaimInquiry",
									"nameLocation": "4236:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "4264:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "4256:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "_flightStatus",
												"nameLocation": "4289:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "4276:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FlightStatus_$2567",
													"typeString": "enum IFlightStatus.FlightStatus"
												},
												"typeName": {
													"id": 2504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2503,
														"name": "FlightStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2567,
														"src": "4276:12:12"
													},
													"referencedDeclaration": 2567,
													"src": "4276:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_FlightStatus_$2567",
														"typeString": "enum IFlightStatus.FlightStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4255:48:12"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4367:0:12"
									},
									"scope": 2558,
									"src": "4227:290:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "4687:220:12",
										"statements": [
											{
												"assignments": [
													2541
												],
												"declarations": [
													{
														"constant": false,
														"id": 2541,
														"mutability": "mutable",
														"name": "tempEmptyStringTest",
														"nameLocation": "4710:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 2556,
														"src": "4697:32:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4697:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2546,
												"initialValue": {
													"arguments": [
														{
															"id": 2544,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "4738:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4732:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2542,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4732:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4732:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4697:48:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2547,
															"name": "tempEmptyStringTest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "4759:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4759:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4789:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4759:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2554,
												"nodeType": "IfStatement",
												"src": "4755:72:12",
												"trueBody": {
													"id": 2553,
													"nodeType": "Block",
													"src": "4792:35:12",
													"statements": [
														{
															"expression": {
																"hexValue": "307830",
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4813:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"functionReturnParameters": 2539,
															"id": 2552,
															"nodeType": "Return",
															"src": "4806:10:12"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4845:56:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4859:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "source",
																				"nodeType": "YulIdentifier",
																				"src": "4879:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4875:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4875:15:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4869:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:22:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2538,
														"isOffset": false,
														"isSlot": false,
														"src": "4859:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2535,
														"isOffset": false,
														"isSlot": false,
														"src": "4879:6:12",
														"valueSize": 1
													}
												],
												"id": 2555,
												"nodeType": "InlineAssembly",
												"src": "4836:65:12"
											}
										]
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stringToBytes32",
									"nameLocation": "4583:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "4613:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "4599:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4599:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:22:12"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4675:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "4667:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2537,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:16:12"
									},
									"scope": 2558,
									"src": "4574:333:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2559,
							"src": "208:4701:12",
							"usedErrors": []
						}
					],
					"src": "31:4879:12"
				},
				"id": 12
			},
			"contracts/interface/IFlightStatus.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IFlightStatus.sol",
					"exportedSymbols": {
						"IFlightStatus": [
							2601
						]
					},
					"id": 2602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2601,
							"linearizedBaseContracts": [
								2601
							],
							"name": "IFlightStatus",
							"nameLocation": "66:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IFlightStatus.FlightStatus",
									"id": 2567,
									"members": [
										{
											"id": 2561,
											"name": "DELAYED",
											"nameLocation": "114:7:13",
											"nodeType": "EnumValue",
											"src": "114:7:13"
										},
										{
											"id": 2562,
											"name": "UPCOMING",
											"nameLocation": "131:8:13",
											"nodeType": "EnumValue",
											"src": "131:8:13"
										},
										{
											"id": 2563,
											"name": "DEPARTURED",
											"nameLocation": "149:10:13",
											"nodeType": "EnumValue",
											"src": "149:10:13"
										},
										{
											"id": 2564,
											"name": "TRANSIT",
											"nameLocation": "169:7:13",
											"nodeType": "EnumValue",
											"src": "169:7:13"
										},
										{
											"id": 2565,
											"name": "CANCELLED",
											"nameLocation": "186:9:13",
											"nodeType": "EnumValue",
											"src": "186:9:13"
										},
										{
											"id": 2566,
											"name": "ONTIME",
											"nameLocation": "205:6:13",
											"nodeType": "EnumValue",
											"src": "205:6:13"
										}
									],
									"name": "FlightStatus",
									"nameLocation": "91:12:13",
									"nodeType": "EnumDefinition",
									"src": "86:131:13"
								},
								{
									"canonicalName": "IFlightStatus.FlightMaster",
									"id": 2580,
									"members": [
										{
											"constant": false,
											"id": 2569,
											"mutability": "mutable",
											"name": "flightId",
											"nameLocation": "261:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "253:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2568,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "253:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2571,
											"mutability": "mutable",
											"name": "carrierFlightNumber",
											"nameLocation": "287:19:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "279:27:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2570,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "279:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2573,
											"mutability": "mutable",
											"name": "serviceProviderName",
											"nameLocation": "323:19:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "316:26:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2572,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "316:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2575,
											"mutability": "mutable",
											"name": "serviceProvider",
											"nameLocation": "360:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "352:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2574,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "352:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2577,
											"mutability": "mutable",
											"name": "registeredOn",
											"nameLocation": "438:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "430:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2576,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "430:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2579,
											"mutability": "mutable",
											"name": "registeredBy",
											"nameLocation": "468:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 2580,
											"src": "460:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2578,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlightMaster",
									"nameLocation": "230:12:13",
									"nodeType": "StructDefinition",
									"scope": 2601,
									"src": "223:264:13",
									"visibility": "public"
								},
								{
									"canonicalName": "IFlightStatus.FlightInsurance",
									"id": 2600,
									"members": [
										{
											"constant": false,
											"id": 2582,
											"mutability": "mutable",
											"name": "polictyid",
											"nameLocation": "534:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "526:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2581,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "526:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2584,
											"mutability": "mutable",
											"name": "passenger",
											"nameLocation": "561:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "553:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2583,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "553:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2586,
											"mutability": "mutable",
											"name": "carrierFlightNumber",
											"nameLocation": "588:19:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "580:27:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2585,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "580:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2588,
											"mutability": "mutable",
											"name": "departureOn",
											"nameLocation": "625:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "617:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2587,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2590,
											"mutability": "mutable",
											"name": "arrivalOn",
											"nameLocation": "654:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "646:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2589,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "646:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2592,
											"mutability": "mutable",
											"name": "bookedOn",
											"nameLocation": "681:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "673:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2591,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2595,
											"mutability": "mutable",
											"name": "flightStatus",
											"nameLocation": "712:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "699:25:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FlightStatus_$2567",
												"typeString": "enum IFlightStatus.FlightStatus"
											},
											"typeName": {
												"id": 2594,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2593,
													"name": "FlightStatus",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2567,
													"src": "699:12:13"
												},
												"referencedDeclaration": 2567,
												"src": "699:12:13",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FlightStatus_$2567",
													"typeString": "enum IFlightStatus.FlightStatus"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2597,
											"mutability": "mutable",
											"name": "yearmonthdate",
											"nameLocation": "742:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "734:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2596,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "734:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2599,
											"mutability": "mutable",
											"name": "processed",
											"nameLocation": "770:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 2600,
											"src": "765:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2598,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "765:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlightInsurance",
									"nameLocation": "500:15:13",
									"nodeType": "StructDefinition",
									"scope": 2601,
									"src": "493:293:13",
									"visibility": "public"
								}
							],
							"scope": 2602,
							"src": "56:732:13",
							"usedErrors": []
						}
					],
					"src": "31:758:13"
				},
				"id": 13
			}
		}
	}
}